{"version":3,"sources":["Pages/Files/apps/modules/Folderzip.js","Pages/Files/apps/modules/Filezip.js","Pages/Files/apps/modules/Fileunzip.js","Pages/Files/apps/modules/Converter.js","Pages/Files/apps/Zipfiles.js"],"names":["options","useStyles","makeStyles","theme","root","flexGrow","overflow","hero","padding","breakpoints","down","marginLeft","tabs","backgroundColor","palette","background","paper","margin","link","color","cursor","textDecoration","Folderzip","React","useState","files","fileNames","progress","zippedFile","outputfilename","state","setState","loading","setLoading","resetCick","classes","open","setOpen","anchorRef","useRef","selectedIndex","setSelectedIndex","handleClose","event","current","contains","target","className","Container","maxWidth","Helmet","name","content","http-equiv","Grid","container","spacing","style","justifyContent","item","xl","sm","md","lg","width","alignItems","minHeight","textAlign","display","Paper","elevation","boxShadow","minWidth","length","Box","p","placeholder","Fade","in","transitionDelay","unmountOnExit","CircularProgress","Typography","TextField","id","onChange","e","value","label","Button","variant","onClick","fileSave","require","filename","saveAs","setTimeout","ButtonGroup","ref","aria-label","curButton","parentElement","zip","fname","folder","i","file","webkitRelativePath","generateAsync","type","compression","compressionOptions","level","then","console","info","size","aria-controls","undefined","aria-expanded","aria-haspopup","prevOpen","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","map","option","index","MenuItem","selected","handleMenuItemClick","height","fontSize","border","data-v-14591542","multiple","directory","webkitdirectory","filelist","push","fileChangehandle","accept","startIcon","document","getElementById","click","flexDirection","TabPanel","props","children","other","hidden","aria-labelledby","a11yProps","tab","Filezip","setValue","square","Tabs","newValue","indicatorColor","textColor","centered","Tab","icon","select","zIndex","Fileunzip","selectf","slice","Select","IconComponent","ArrowDropDownIcon","Converter","Zipfiles","data-v-23847e07","Breadcrumbs","separator","to","component","Divider"],"mappings":"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","file":"static/js/98.a4bcf00e.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Typography, Container, Paper, TextField,\r\n    CircularProgress, Fade, Divider, Tabs, Tab, Grid, Button, Box, Card, CardContent\r\n} from '@material-ui/core';\r\nimport Helmet from 'react-helmet';\r\nimport LibraryAddIcon from '@material-ui/icons/LibraryAdd';\r\n\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\n\r\nconst options = ['Fast', 'Medium', 'Best compression (slow)'];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        overflow: 'hidden',\r\n    },\r\n    hero: {\r\n        padding: '0px 1rem',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginLeft: '0.3rem'\r\n        },\r\n        backgroundColor: \"#fafafa\"\r\n    },\r\n    tabs: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '0px -16px',\r\n        },\r\n        borderRadius: '0px',\r\n    },\r\n    link: {\r\n        color: '#3f51b5',\r\n        cursor: 'pointer',\r\n        '& hover': {\r\n            textDecoration: 'underline'\r\n        }\r\n    },\r\n}));\r\n\r\nexport default function Folderzip() {\r\n    const [state, setState] = React.useState({\r\n        files: null,\r\n        fileNames: [],\r\n        progress: 'start',\r\n        zippedFile: null,\r\n        outputfilename: 'output'\r\n\r\n    });\r\n\r\n    const inputChange = (e) => {\r\n        setState({\r\n            ...state,\r\n            outputfilename: e.target.value\r\n        })\r\n    }\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    const fileChangehandle = (e) => {\r\n        let filelist = [];\r\n        for (let i = 0; i < e.target.files.length; ++i) {\r\n            filelist.push(e.target.files[i].webkitRelativePath);\r\n        }\r\n        setState({\r\n            ...state,\r\n            files: e.target.files,\r\n            fileNames: filelist,\r\n        })\r\n    }\r\n    function CompressZipfile(e) {\r\n        setLoading(true);\r\n        debugger;\r\n        let curButton = e.target\r\n        curButton.parentElement.style.display = 'none';\r\n        setState({\r\n            ...state,\r\n            progress: 'compress'\r\n        });\r\n        const zip = require('jszip')();\r\n        let fname = state.outputfilename;\r\n        fname = fname === \"\" ? \"output\" : fname;\r\n        let folder = zip.folder(fname);\r\n        for (let i = 0; i < state.files.length; ++i) {\r\n            folder.file(state.files[i].webkitRelativePath, state.files[i]);\r\n        }\r\n        zip.generateAsync({\r\n            type: \"blob\",\r\n            compression: \"DEFLATE\",\r\n            compressionOptions: {\r\n                level: 5,\r\n            },\r\n        }).then(content => {\r\n            curButton.parentElement.style.display = '';\r\n            setLoading(false);\r\n            setState({\r\n                ...state,\r\n                zippedFile: content\r\n            });\r\n        });\r\n    }\r\n\r\n    const resetCick = () => {\r\n        setState({\r\n            ...state,\r\n            zippedFile: null,\r\n            files: null,\r\n            fileNames: null\r\n        });\r\n    }\r\n\r\n    const saveZippedFile = () => {\r\n        const fileSave = require(\"file-saver\");\r\n        let filename = state.outputfilename;\r\n        fileSave.saveAs(state.zippedFile,\r\n            filename === \"\" ? \"output.zip\" : filename + \".zip\"\r\n        );\r\n        setTimeout(() => {\r\n            resetCick();\r\n        }, 1500);\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    //dropdown\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n\r\n    const handleClick = () => {\r\n        console.info(`You clicked ${options[selectedIndex]}`);\r\n    };\r\n\r\n    const handleMenuItemClick = (event, index) => {\r\n        setSelectedIndex(index);\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Container maxWidth=\"xl\">\r\n                <Helmet>\r\n                    <title>Zip , unzip and compress files online</title>\r\n                    <meta name=\"keywords\" content=\"numbers, minimum, maximum, float, decimal, integer, minimal, least, lowest, highest, littlest, merest, slightest, smallest, tiniest, maximal, top, biggest, greatest, largest, most, mostest, supreme\" />\r\n                    <meta name=\"description\" content=\"Find the highest and the lowest number from a list\" />\r\n                    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n                    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"></meta>\r\n                </Helmet>\r\n                <Grid container spacing={2} style={{ justifyContent: 'center' }}>\r\n                    <Grid item xl={12} sm={12} md={12} lg={12} style={{\r\n                        width: '100%',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        minHeight: 'calc( 100vh - 243px)',\r\n                        textAlign: 'center',\r\n                        display: 'flex',\r\n                    }}>\r\n                        <br />\r\n                        <Paper elevation={0} className=\"box\" style={{\r\n                            backgroundColor: 'transparent',\r\n                            boxShadow: 'none',\r\n                            minWidth: '60%'\r\n                        }}>\r\n\r\n                            {\r\n                                state.fileNames && state.fileNames.length > 0 ?\r\n                                    <>\r\n                                        <Box p={1} textAlign=\"center\">\r\n                                            <br />\r\n                                            {\r\n                                                loading ? <div className={classes.placeholder}>\r\n                                                    <Fade\r\n                                                        in={loading}\r\n                                                        style={{\r\n                                                            transitionDelay: loading ? '800ms' : '0ms',\r\n                                                        }}\r\n                                                        unmountOnExit\r\n                                                    >\r\n                                                        <CircularProgress />\r\n                                                    </Fade>\r\n                                                    <Typography>Your files are compressing..</Typography>\r\n                                                </div> : <>\r\n                                                    <Box>\r\n                                                        {state.zippedFile ?\r\n                                                            <Typography>You can save your zip file, now !</Typography> : <TextField\r\n                                                                id=\"outputfilename\"\r\n                                                                onChange={inputChange}\r\n                                                                label=\"Enter output file name\"\r\n                                                            />\r\n                                                        }\r\n                                                    </Box>\r\n                                                </>\r\n                                            }\r\n                                            <br />\r\n                                            <br />\r\n                                            <Button style={{ margin: '10px' }} variant=\"outlined\" onClick={resetCick} color=\"secondary\">Reset</Button>\r\n                                            &nbsp;\r\n                                            &nbsp;\r\n                                            {\r\n                                                state.zippedFile ?\r\n                                                    <>\r\n                                                        <Button variant=\"contained\" color=\"primary\"\r\n                                                            onClick={saveZippedFile}\r\n                                                        >Save ZIP file\r\n                                                        </Button>\r\n                                                    </> :\r\n                                                    <>\r\n                                                        {!loading ?\r\n                                                            <>\r\n                                                                <ButtonGroup variant=\"contained\" color=\"primary\" ref={anchorRef} aria-label=\"split button\">\r\n                                                                    <Button variant=\"contained\"\r\n                                                                        onClick={CompressZipfile}\r\n                                                                    >ZIP Folder</Button>\r\n                                                                    <Button color=\"inherit\" onClick={handleClick}>{options[selectedIndex]}</Button>\r\n                                                                    <Button\r\n                                                                        color=\"inherit\"\r\n                                                                        size=\"small\"\r\n                                                                        aria-controls={open ? 'split-button-menu' : undefined}\r\n                                                                        aria-expanded={open ? 'true' : undefined}\r\n                                                                        aria-label=\"select merge strategy\"\r\n                                                                        aria-haspopup=\"menu\"\r\n                                                                        onClick={handleToggle}\r\n                                                                    >\r\n                                                                        <ArrowDropDownIcon />\r\n                                                                    </Button>\r\n                                                                </ButtonGroup>\r\n                                                                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                                                                    {({ TransitionProps, placement }) => (\r\n                                                                        <Grow\r\n                                                                            {...TransitionProps}\r\n                                                                            style={{\r\n                                                                                transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            <Paper>\r\n                                                                                <ClickAwayListener onClickAway={handleClose}>\r\n                                                                                    <MenuList id=\"split-button-menu\">\r\n                                                                                        {options.map((option, index) => (\r\n                                                                                            <MenuItem\r\n                                                                                                key={option}\r\n                                                                                                selected={index === selectedIndex}\r\n                                                                                                onClick={(event) => handleMenuItemClick(event, index)}\r\n                                                                                            >\r\n                                                                                                {option}\r\n                                                                                            </MenuItem>\r\n                                                                                        ))}\r\n                                                                                    </MenuList>\r\n                                                                                </ClickAwayListener>\r\n                                                                            </Paper>\r\n                                                                        </Grow>\r\n                                                                    )}\r\n                                                                </Popper>\r\n                                                            </> : <></>\r\n                                                        }\r\n                                                    </>\r\n                                            }\r\n                                        </Box>\r\n                                    </> : <>\r\n                                        <Typography variant=\"h6\" className=\"title is-6\">\r\n                                            Select folders to archive\r\n                                        </Typography>\r\n                                        <div className=\"file-dropzone\"\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                height: '100%',\r\n                                                fontSize: '0.9rem',\r\n                                                border: 'none',\r\n                                                backgroundColor: 'transparent'\r\n                                            }}\r\n                                            data-v-14591542>\r\n                                            <input id=\"folder\"\r\n                                                multiple\r\n                                                type=\"file\"\r\n                                                directory=\"directory\"\r\n                                                webkitdirectory=\"webkitdirectory\"\r\n                                                data-v-14591542 onChange={e => fileChangehandle(e)}\r\n                                                accept=\"\"\r\n                                            />\r\n                                            <div>\r\n                                                <Button variant=\"contained\"\r\n                                                    startIcon={<LibraryAddIcon />}\r\n                                                    onClick={(e) => {\r\n                                                        document.getElementById(\"folder\").click();\r\n                                                    }}\r\n                                                    color=\"primary\">Select folder</Button>\r\n                                                <br />\r\n                                            </div>\r\n                                        </div>\r\n                                    </>\r\n                            }\r\n\r\n                            <br />\r\n                            <Box display=\"flex\" textAlign=\"left\" flexDirection=\"column\" fontSize=\"0.8rem\" color=\"white\"> {\r\n                                state.fileNames && state.fileNames.length > 0 ?\r\n                                    state.fileNames.map((name, i) => {\r\n                                        return (<>\r\n                                            <span\r\n                                                key={i}\r\n                                                style={{\r\n                                                    padding: '4px 8px',\r\n                                                    backgroundColor: i % 2 === 0 ? '#7a7a7ac7' : 'rgb(151 151 151 / 57%)'\r\n                                                }}\r\n                                            >{(i + 1) + \". \" + name}</span>\r\n                                        </>)\r\n                                    })\r\n                                    : <></>\r\n                            }\r\n                            </Box>\r\n                        </Paper>\r\n                        <br />\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </div >\r\n    );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Typography, Container, Paper, TextField,\r\n    CircularProgress, Fade, Divider, Tabs, Tab, Grid, Button, Box, Card, CardContent\r\n} from '@material-ui/core';\r\nimport Helmet from 'react-helmet';\r\nimport LibraryAddIcon from '@material-ui/icons/LibraryAdd';\r\nimport Folderzip from './Folderzip';\r\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nconst options = ['Fast', 'Medium', 'Best compression (slow)'];\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={1}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        overflow: 'hidden',\r\n        backgroundColor: 'transparent',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    tabs: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: 'fit-content',\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: '100%'\r\n        },\r\n        \"& > button\": {\r\n            width: '100%'\r\n        }\r\n    },\r\n    tab: {\r\n        width: '100%'\r\n    }\r\n}));\r\n\r\nexport default function Filezip() {\r\n    const [state, setState] = React.useState({\r\n        files: null,\r\n        fileNames: [],\r\n        progress: 'start',\r\n        zippedFile: null,\r\n        outputfilename: 'output'\r\n\r\n    });\r\n\r\n    const [value, setValue] = React.useState(0);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const inputChange = (e) => {\r\n        setState({\r\n            ...state,\r\n            outputfilename: e.target.value\r\n        })\r\n    }\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    const fileChangehandle = (e) => {\r\n        let filelist = [];\r\n        for (let i = 0; i < e.target.files.length; ++i) {\r\n            filelist.push(e.target.files[i].name);\r\n        }\r\n        setState({\r\n            ...state,\r\n            files: e.target.files,\r\n            fileNames: filelist,\r\n        })\r\n\r\n    }\r\n\r\n    function CompressZipfile(e) {\r\n        setLoading(true);\r\n        debugger;\r\n        let curButton = e.target\r\n        curButton.parentElement.style.display = 'none';\r\n        setState({\r\n            ...state,\r\n            progress: 'compress'\r\n        });\r\n        const zip = require('jszip')();\r\n        let fname = state.outputfilename;\r\n        fname = fname === \"\" ? \"output\" : fname;\r\n        let folder = zip.folder(fname);\r\n        for (let i = 0; i < state.files.length; ++i) {\r\n            folder.file(state.files[i].name, state.files[i]);\r\n        }\r\n        zip.generateAsync({\r\n            type: \"blob\",\r\n            compression: selectedIndex === 0 ? \"STORE\" : \"DEFLATE\",\r\n            compressionOptions: {\r\n                level: selectedIndex === 0 ? 0 : (selectedIndex === 1 ? 5 : 9),\r\n            },\r\n        }).then(content => {\r\n            curButton.parentElement.style.display = '';\r\n            setLoading(false);\r\n            setState({\r\n                ...state,\r\n                zippedFile: content\r\n            });\r\n        });\r\n    }\r\n\r\n    const resetCick = () => {\r\n        setState({\r\n            ...state,\r\n            zippedFile: null,\r\n            files: null,\r\n            fileNames: null\r\n        });\r\n    }\r\n\r\n    const saveZippedFile = () => {\r\n        const fileSave = require(\"file-saver\");\r\n        let filename = state.outputfilename;\r\n        fileSave.saveAs(state.zippedFile,\r\n            filename === \"\" ? \"output.zip\" : filename + \".zip\"\r\n        );\r\n        setTimeout(() => {\r\n            resetCick();\r\n        }, 1500);\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    //dropdown\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n\r\n    const handleClick = () => {\r\n        console.info(`You clicked ${options[selectedIndex]}`);\r\n    };\r\n\r\n    const handleMenuItemClick = (event, index) => {\r\n        setSelectedIndex(index);\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <Paper square className={classes.tabs}>\r\n                <Tabs\r\n                    variant=\"standard\"\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    centered\r\n                >\r\n                    <Tab icon={<FileIcon />} aria-label=\"File\" {...a11yProps(0)} />\r\n                    <Tab icon={<FolderIcon />} aria-label=\"Folder\" {...a11yProps(1)} />\r\n                </Tabs>\r\n            </Paper>\r\n\r\n            <TabPanel className={classes.tab} value={value} index={0}>\r\n                <>\r\n                    <Container maxWidth=\"xl\">\r\n                        <Helmet>\r\n                            <title>Zip , unzip and compress files online</title>\r\n                            <meta name=\"keywords\" content=\"numbers, minimum, maximum, float, decimal, integer, minimal, least, lowest, highest, littlest, merest, slightest, smallest, tiniest, maximal, top, biggest, greatest, largest, most, mostest, supreme\" />\r\n                            <meta name=\"description\" content=\"Find the highest and the lowest number from a list\" />\r\n                            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n                            <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"></meta>\r\n                        </Helmet>\r\n                        <Grid container spacing={2} style={{ justifyContent: 'center' }}>\r\n                            <Grid item xl={12} sm={12} md={12} lg={12} style={{\r\n                                width: '100%',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                minHeight: 'calc( 100vh - 243px)',\r\n                                textAlign: 'center',\r\n                                display: 'flex',\r\n                            }}>\r\n                                <br />\r\n                                <Paper elevation={0} className=\"box\" style={{\r\n                                    backgroundColor: 'transparent',\r\n                                    boxShadow: 'none',\r\n                                    minWidth: '60%'\r\n                                }}>\r\n\r\n                                    {\r\n                                        state.fileNames && state.fileNames.length > 0 ?\r\n                                            <>\r\n                                                <Box p={1} textAlign=\"center\">\r\n                                                    <br />\r\n                                                    {\r\n                                                        loading ? <div className={classes.placeholder}>\r\n                                                            <Fade\r\n                                                                in={loading}\r\n                                                                style={{\r\n                                                                    transitionDelay: loading ? '800ms' : '0ms',\r\n                                                                }}\r\n                                                                unmountOnExit\r\n                                                            >\r\n                                                                <CircularProgress />\r\n                                                            </Fade>\r\n                                                            <Typography>Your files are compressing..</Typography>\r\n                                                        </div> : <>\r\n                                                            <Box>\r\n                                                                {state.zippedFile ?\r\n                                                                    <Typography>You can save your zip file, now !</Typography> : <TextField\r\n                                                                        id=\"outputfilename\"\r\n                                                                        onChange={inputChange}\r\n                                                                        label=\"Enter output file name\"\r\n                                                                    />\r\n                                                                }\r\n                                                            </Box>\r\n                                                        </>\r\n                                                    }\r\n                                                    <br />\r\n                                                    <br />\r\n                                                    <Button style={{ margin: '10px' }} variant=\"outlined\" onClick={resetCick} color=\"secondary\">Reset</Button>\r\n                                                    &nbsp;\r\n                                                    &nbsp;\r\n                                                    {\r\n                                                        state.zippedFile ?\r\n                                                            <>\r\n                                                                <Button variant=\"contained\" color=\"primary\"\r\n                                                                    onClick={saveZippedFile}\r\n                                                                >Save ZIP file\r\n                                                                </Button>\r\n                                                            </> :\r\n                                                            <>\r\n                                                                {!loading ?\r\n                                                                    <>\r\n                                                                        <ButtonGroup variant=\"contained\" color=\"primary\" ref={anchorRef} aria-label=\"split button\">\r\n                                                                            <Button variant=\"contained\" color=\"primary\"\r\n                                                                                onClick={CompressZipfile}\r\n                                                                            >ZIP Files</Button>\r\n                                                                            <Button color=\"inherit\" onClick={handleClick}>{options[selectedIndex]}</Button>\r\n                                                                            <Button\r\n                                                                                color=\"inherit\"\r\n                                                                                size=\"small\"\r\n                                                                                aria-controls={open ? 'split-button-menu' : undefined}\r\n                                                                                aria-expanded={open ? 'true' : undefined}\r\n                                                                                aria-label=\"select merge strategy\"\r\n                                                                                aria-haspopup=\"menu\"\r\n                                                                                onClick={handleToggle}\r\n                                                                            >\r\n                                                                                <ArrowDropDownIcon />\r\n                                                                            </Button>\r\n                                                                        </ButtonGroup>\r\n                                                                        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                                                                            {({ TransitionProps, placement }) => (\r\n                                                                                <Grow\r\n                                                                                    {...TransitionProps}\r\n                                                                                    style={{\r\n                                                                                        transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n                                                                                    }}\r\n                                                                                >\r\n                                                                                    <Paper>\r\n                                                                                        <ClickAwayListener onClickAway={handleClose}>\r\n                                                                                            <MenuList id=\"split-button-menu\">\r\n                                                                                                {options.map((option, index) => (\r\n                                                                                                    <MenuItem\r\n                                                                                                        key={option}\r\n                                                                                                        selected={index === selectedIndex}\r\n                                                                                                        onClick={(event) => handleMenuItemClick(event, index)}\r\n                                                                                                    >\r\n                                                                                                        {option}\r\n                                                                                                    </MenuItem>\r\n                                                                                                ))}\r\n                                                                                            </MenuList>\r\n                                                                                        </ClickAwayListener>\r\n                                                                                    </Paper>\r\n                                                                                </Grow>\r\n                                                                            )}\r\n                                                                        </Popper>\r\n                                                                    </> : <></>\r\n                                                                }\r\n                                                            </>\r\n                                                    }\r\n                                                </Box>\r\n                                            </> : <>\r\n                                                <Typography variant=\"h6\" className=\"title is-6\">\r\n                                                    Select files to archive\r\n                                                </Typography>\r\n                                                <div className=\"file-dropzone\"\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                        height: '100%',\r\n                                                        fontSize: '0.9rem',\r\n                                                        border: 'none',\r\n                                                        backgroundColor: 'transparent'\r\n                                                    }}\r\n                                                    data-v-14591542>\r\n                                                    <input id=\"image\"\r\n                                                        multiple\r\n                                                        type=\"file\" data-v-14591542 onChange={e => fileChangehandle(e)}\r\n                                                        accept=\"\"\r\n                                                    />\r\n                                                    <div>\r\n                                                        <Button variant=\"contained\"\r\n                                                            startIcon={<LibraryAddIcon />}\r\n                                                            onClick={(e) => {\r\n                                                                document.getElementById(\"image\").click();\r\n                                                            }}\r\n                                                            color=\"primary\">Select files</Button>\r\n                                                        <br />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </>\r\n                                    }\r\n\r\n                                    <br />\r\n                                    <Box display=\"flex\" textAlign=\"left\" flexDirection=\"column\" fontSize=\"0.8rem\" color=\"white\"> {\r\n                                        state.fileNames && state.fileNames.length > 0 ?\r\n                                            state.fileNames.map((name, i) => {\r\n                                                return (<>\r\n                                                    <span\r\n                                                        key={i}\r\n                                                        style={{\r\n                                                            padding: '4px 8px',\r\n                                                            backgroundColor: i % 2 === 0 ? '#7a7a7ac7' : 'rgb(151 151 151 / 57%)'\r\n                                                        }}\r\n                                                    >{(i + 1) + \". \" + name}</span>\r\n                                                </>)\r\n                                            })\r\n                                            : <></>\r\n                                    }\r\n                                    </Box>\r\n                                </Paper>\r\n                                <br />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Container>\r\n                </>\r\n            </TabPanel>\r\n            <TabPanel className={classes.tab} value={value} index={1}>\r\n                <> <Folderzip /></>\r\n            </TabPanel>\r\n        </div >\r\n    );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Typography, Container, Paper, TextField,\r\n    CircularProgress, Fade, Divider, Tabs, Tab, Grid, Button, Box, Select\r\n} from '@material-ui/core';\r\nimport Helmet from 'react-helmet';\r\nimport LibraryAddIcon from '@material-ui/icons/LibraryAdd';\r\n\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\n\r\nconst options = ['zip file', 'zipx file', 'rar file', '7z file', 'iso file',\r\n    'tar file', 'tar.bz2 file', 'tar.gz file', 'tar.xz file', 'jar file', 'Other...'];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        overflow: 'hidden',\r\n    },\r\n    hero: {\r\n        padding: '0px 1rem',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginLeft: '0.3rem'\r\n        },\r\n        backgroundColor: \"white\"\r\n    },\r\n    tabs: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '0px -16px',\r\n        },\r\n        borderRadius: '0px',\r\n    },\r\n    link: {\r\n        color: '#3f51b5',\r\n        cursor: 'pointer',\r\n        '& hover': {\r\n            textDecoration: 'underline'\r\n        }\r\n    },\r\n    select: {\r\n        height: '39px',\r\n        \"& > *\": {\r\n            border: 'none !important',\r\n            margin: '0px !important',\r\n            padding: '0px !important',\r\n            backgroundColor: '#e0e0e0'\r\n        },\r\n        '& > svg': {\r\n            zIndex: 1\r\n        },\r\n        '& > * hover': {\r\n            border: 'none !important',\r\n            margin: '0px !important',\r\n            padding: '0px !important',\r\n            backgroundColor: 'inherit !important'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function Fileunzip() {\r\n    const [state, setState] = React.useState({\r\n        files: null,\r\n        fileNames: [],\r\n        progress: 'start',\r\n        zippedFile: null,\r\n        outputfilename: 'output'\r\n\r\n    });\r\n\r\n    const inputChange = (e) => {\r\n        setState({\r\n            ...state,\r\n            outputfilename: e.target.value\r\n        })\r\n    }\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    const fileChangehandle = (e) => {\r\n        let filelist = [];\r\n        for (let i = 0; i < e.target.files.length; ++i) {\r\n            filelist.push(e.target.files[i].name);\r\n        }\r\n        setState({\r\n            ...state,\r\n            files: e.target.files,\r\n            fileNames: filelist,\r\n        });\r\n        let selectf = document.getElementById('selectfiletype');\r\n        if (selectf) {\r\n            selectf.style.display = 'none';\r\n        }\r\n    }\r\n    function CompressZipfile(e) {\r\n        setLoading(true);\r\n        debugger;\r\n        let curButton = e.target\r\n        curButton.parentElement.style.display = 'none';\r\n        setState({\r\n            ...state,\r\n            progress: 'compress'\r\n        });\r\n        const zip = require('jszip')();\r\n        let fname = state.outputfilename;\r\n        fname = fname === \"\" ? \"output\" : fname;\r\n        let folder = zip.folder(fname);\r\n        for (let i = 0; i < state.files.length; ++i) {\r\n            folder.file(state.files[i].webkitRelativePath, state.files[i]);\r\n        }\r\n        zip.generateAsync({\r\n            type: \"blob\",\r\n            compression: \"DEFLATE\",\r\n            compressionOptions: {\r\n                level: 5,\r\n            },\r\n        }).then(content => {\r\n            curButton.parentElement.style.display = '';\r\n            setLoading(false);\r\n            setState({\r\n                ...state,\r\n                zippedFile: content\r\n            });\r\n        });\r\n    }\r\n\r\n    const resetCick = () => {\r\n        setState({\r\n            ...state,\r\n            zippedFile: null,\r\n            files: null,\r\n            fileNames: null\r\n        });\r\n    }\r\n\r\n    const saveZippedFile = () => {\r\n        const fileSave = require(\"file-saver\");\r\n        let filename = state.outputfilename;\r\n        fileSave.saveAs(state.zippedFile,\r\n            filename === \"\" ? \"output.zip\" : filename + \".zip\"\r\n        );\r\n        setTimeout(() => {\r\n            resetCick();\r\n        }, 1500);\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    //dropdown\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n\r\n    const handleClick = () => {\r\n        console.info(`You clicked ${options[selectedIndex]}`);\r\n    };\r\n\r\n    const handleMenuItemClick = (event, index) => {\r\n        setSelectedIndex(index);\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Container maxWidth=\"xl\">\r\n                <Helmet>\r\n                    <title>Zip , unzip and compress files online</title>\r\n                    <meta name=\"keywords\" content=\"numbers, minimum, maximum, float, decimal, integer, minimal, least, lowest, highest, littlest, merest, slightest, smallest, tiniest, maximal, top, biggest, greatest, largest, most, mostest, supreme\" />\r\n                    <meta name=\"description\" content=\"Find the highest and the lowest number from a list\" />\r\n                    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n                    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"></meta>\r\n                </Helmet>\r\n                <Grid container spacing={2} style={{ justifyContent: 'center' }}>\r\n                    <Grid item xl={12} sm={12} md={12} lg={12}></Grid>\r\n                    <Grid item xl={12} sm={12} md={12} lg={12} style={{\r\n                        width: '100%',\r\n                        minHeight: 'calc( 100vh - 243px)',\r\n                    }}>\r\n                        <br />\r\n                        <Paper elevation={2} className=\"box\" style={{\r\n                            minWidth: '100%'\r\n                        }}>\r\n                            {\r\n                                state.fileNames && state.fileNames.length > 0 ?\r\n                                    <>\r\n                                        <Box p={1} textAlign=\"center\">\r\n                                            <br />\r\n                                            {\r\n                                                loading ? <div className={classes.placeholder}>\r\n                                                    <Fade\r\n                                                        in={loading}\r\n                                                        style={{\r\n                                                            transitionDelay: loading ? '800ms' : '0ms',\r\n                                                        }}\r\n                                                        unmountOnExit\r\n                                                    >\r\n                                                        <CircularProgress />\r\n                                                    </Fade>\r\n                                                    <Typography>Your files are compressing..</Typography>\r\n                                                </div> : <>\r\n                                                    <Box>\r\n                                                        {state.zippedFile ?\r\n                                                            <Typography>You can save your zip file, now !</Typography> :\r\n                                                            <></>\r\n                                                        }\r\n                                                    </Box>\r\n                                                </>\r\n                                            }\r\n                                            <br />\r\n                                            <br />\r\n                                            <Button style={{ margin: '10px' }} variant=\"outlined\" onClick={resetCick} color=\"secondary\">Reset</Button>\r\n                                            &nbsp;\r\n                                            &nbsp;\r\n                                            {\r\n                                                state.zippedFile ?\r\n                                                    <>\r\n                                                        <Button variant=\"contained\" color=\"primary\"\r\n                                                            onClick={saveZippedFile}\r\n                                                        >Save extracted files\r\n                                                        </Button>\r\n                                                    </> :\r\n                                                    <>\r\n                                                        {\r\n                                                            !loading ?\r\n                                                                <Button variant=\"contained\"\r\n                                                                    color=\"secondary\"\r\n                                                                    onClick={CompressZipfile}\r\n                                                                >Extract file</Button>\r\n\r\n                                                                : <></>\r\n                                                        }\r\n                                                    </>\r\n                                            }\r\n                                        </Box>\r\n                                    </> : <>\r\n                                        <Typography variant=\"h6\" className=\"title is-6\">\r\n                                            Select file to archive\r\n                                        </Typography>\r\n                                        <div className=\"file-dropzone\"\r\n                                            style={{\r\n                                                fontSize: '0.9rem',\r\n                                                display: 'flex',\r\n                                                alignItems: 'center'\r\n                                            }}\r\n                                            data-v-14591542>\r\n                                            <input id=\"folder\"\r\n                                                multiple\r\n                                                type=\"file\"\r\n                                                data-v-14591542 onChange={e => fileChangehandle(e)}\r\n                                                accept={\".\" + options[selectedIndex].slice(0, options[selectedIndex].length - 5)}\r\n                                            />\r\n                                            <div>\r\n                                                <ButtonGroup variant=\"contained\" color=\"primary\" ref={anchorRef} aria-label=\"split button\">\r\n                                                    <Button variant=\"contained\"\r\n                                                        startIcon={<LibraryAddIcon />}\r\n                                                        onClick={(e) => {\r\n                                                            document.getElementById(\"folder\").click();\r\n                                                        }}\r\n                                                        color=\"primary\">Select file</Button>\r\n                                                    <Button color=\"inherit\" onClick={handleClick}>{options[selectedIndex]}</Button>\r\n                                                    <Select\r\n                                                        className={classes.select}\r\n                                                        IconComponent={ArrowDropDownIcon}\r\n                                                        variant=\"outlined\"\r\n                                                        id=\"selectfiletype\"\r\n                                                    >\r\n                                                        <MenuList id=\"split-button-menu\">\r\n                                                            {options.map((option, index) => (\r\n                                                                <MenuItem\r\n                                                                    key={option}\r\n                                                                    selected={index === selectedIndex}\r\n                                                                    onClick={(event) => handleMenuItemClick(event, index)}\r\n                                                                >\r\n                                                                    {option}\r\n                                                                </MenuItem>\r\n                                                            ))}\r\n                                                        </MenuList>\r\n                                                    </Select>\r\n                                                </ButtonGroup>\r\n                                                <br />\r\n                                            </div>\r\n                                        </div>\r\n                                    </>\r\n                            }\r\n\r\n                            <br />\r\n                            <Box display=\"flex\" textAlign=\"left\" flexDirection=\"column\" fontSize=\"0.8rem\" color=\"white\"> {\r\n                                state.fileNames && state.fileNames.length > 0 ?\r\n                                    state.fileNames.map((name, i) => {\r\n                                        return (<>\r\n                                            <span\r\n                                                key={i}\r\n                                                style={{\r\n                                                    padding: '4px 8px',\r\n                                                    backgroundColor: i % 2 === 0 ? '#7a7a7ac7' : 'rgb(151 151 151 / 57%)'\r\n                                                }}\r\n                                            >{(i + 1) + \". \" + name}</span>\r\n                                        </>)\r\n                                    })\r\n                                    : <></>\r\n                            }\r\n                            </Box>\r\n                        </Paper>\r\n                        <br />\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </div >\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Container, Paper, Breadcrumbs, Divider } from '@material-ui/core';\r\nimport Helmet from 'react-helmet';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        overflow: 'hidden',\r\n        backgroundColor: \"white\"\r\n    },\r\n}));\r\n\r\nexport default function Converter() {\r\n    const [state, setState] = React.useState({\r\n\r\n    })\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Container maxWidth=\"xl\">\r\n                <Helmet>\r\n                    <title>Zip , unzip and compress files online</title>\r\n                    <meta name=\"keywords\" content=\"numbers, minimum, maximum, float, decimal, integer, minimal, least, lowest, highest, littlest, merest, slightest, smallest, tiniest, maximal, top, biggest, greatest, largest, most, mostest, supreme\" />\r\n                    <meta name=\"description\" content=\"Find the highest and the lowest number from a list\" />\r\n                    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n                    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"></meta>\r\n                </Helmet>\r\n                <Paper className={classes.tabs}>\r\n\r\n                </Paper>\r\n            </Container>\r\n        </div >\r\n    );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { Typography, Container, Paper, Breadcrumbs, Divider } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport Helmet from 'react-helmet';\r\nimport { Link } from 'react-router-dom';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport Filezip from './modules/Filezip';\r\nimport Fileunzip from './modules/Fileunzip';\r\nimport Converter from './modules/Converter';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={1}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        overflow: 'hidden',\r\n    },\r\n    hero: {\r\n        padding: '0px 1rem',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginLeft: '0.3rem'\r\n        },\r\n        backgroundColor: \"#fafafa\"\r\n    },\r\n    tabs: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '0px -16px',\r\n        },\r\n        borderRadius: '0px',\r\n    },\r\n    link: {\r\n        color: '#3f51b5',\r\n        cursor: 'pointer',\r\n        '& hover': {\r\n            textDecoration: 'underline'\r\n        }\r\n    },\r\n}));\r\n\r\nexport default function Zipfiles() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Helmet>\r\n                <title>Zip , unzip and compress files online</title>\r\n                <meta name=\"keywords\" content=\"numbers, minimum, maximum, float, decimal, integer, minimal, least, lowest, highest, littlest, merest, slightest, smallest, tiniest, maximal, top, biggest, greatest, largest, most, mostest, supreme\" />\r\n                <meta name=\"description\" content=\"Find the highest and the lowest number from a list\" />\r\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n                <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"></meta>\r\n            </Helmet>\r\n            <section className={classes.hero} data-v-23847e07>\r\n                <div style={{ padding: '1rem 0px' }}>\r\n                    <div className=\"container\">\r\n                        <h1 style={{ margin: '0px' }} className=\"subtitle  has-text-weight-bold\">\r\n                            <Breadcrumbs className=\"subtitle has-text-weight-bold\" separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n                                <Link className={classes.link} to={'/files/'}>Files</Link>\r\n                                <Typography component=\"h1\">\r\n                                    {\r\n                                        value === 0 ? \"Compress files online\" : (\r\n                                            value === 1 ? \"Decompress files online\" : \"Converters\"\r\n                                        )\r\n                                    }\r\n                                </Typography>\r\n                            </Breadcrumbs>\r\n                        </h1>\r\n                    </div>\r\n                </div>\r\n            </section >\r\n            <Divider />\r\n            <Paper className={classes.tabs}>\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    centered\r\n                >\r\n                    <Tab label=\"Zip\" {...a11yProps(0)} />\r\n                    <Tab label=\"UnZip\" {...a11yProps(1)} />\r\n                    <Tab label=\"Converter\" {...a11yProps(2)} />\r\n                </Tabs>\r\n            </Paper>\r\n            <TabPanel value={value} index={0}>\r\n                <Filezip />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <Fileunzip />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                <Converter />\r\n            </TabPanel>\r\n        </div >\r\n    );\r\n}"],"sourceRoot":""}