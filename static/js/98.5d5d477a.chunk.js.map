{"version":3,"sources":["Pages/Files/apps/modules/Folderzip.js","Pages/Files/apps/modules/Filezip.js","Pages/Files/apps/modules/Fileunzip.js","Pages/Files/apps/modules/Converter.js","Pages/Files/apps/Zipfiles.js"],"names":["options","useStyles","makeStyles","theme","root","flexGrow","overflow","hero","padding","breakpoints","down","marginLeft","tabs","backgroundColor","palette","background","paper","margin","link","color","cursor","textDecoration","Folderzip","React","useState","files","fileNames","progress","zippedFile","outputfilename","state","setState","loading","setLoading","resetCick","classes","open","setOpen","anchorRef","useRef","selectedIndex","setSelectedIndex","handleClose","event","current","contains","target","className","Container","maxWidth","Helmet","name","content","Grid","container","spacing","style","justifyContent","item","xl","sm","md","lg","width","alignItems","minHeight","textAlign","display","Paper","elevation","boxShadow","minWidth","length","Box","p","placeholder","Fade","in","transitionDelay","unmountOnExit","CircularProgress","Typography","TextField","id","onChange","e","value","label","Button","variant","onClick","fileSave","require","filename","saveAs","setTimeout","ButtonGroup","ref","curButton","parentElement","zip","fname","folder","i","file","webkitRelativePath","generateAsync","type","compression","compressionOptions","level","then","console","info","size","undefined","prevOpen","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","map","option","index","MenuItem","selected","handleMenuItemClick","height","fontSize","border","multiple","directory","webkitdirectory","filelist","push","fileChangehandle","accept","startIcon","document","getElementById","click","flexDirection","TabPanel","props","children","other","hidden","a11yProps","tab","ulel","listStyle","borderBottom","borderTop","listStyleType","tabheader","Filezip","setValue","square","Tabs","newValue","indicatorColor","textColor","centered","Tab","icon","select","zIndex","Fileunzip","useEffect","Links","f","href","borderRight","marginRight","displayFileAsText","lelativepath","async","CustomSnakbar","msg","zipFileToLoad","fileReader","FileReader","onload","fileLoadedEvent","a","JSZip","loadAsync","result","zipFileLoaded","filecount","nameOfFileContainedInZipFile","fileContainedInZipFile","contetn","dir","Object","keys","readAsArrayBuffer","extractfile","split","slice","selectf","Select","IconComponent","ArrowDropDownIcon","Zipfiles","Breadcrumbs","separator","to","component","Divider"],"mappings":"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","file":"static/js/98.5d5d477a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Typography, Container, Paper, TextField,\r\n    CircularProgress, Fade, Grid, Button, Box,\r\n} from '@material-ui/core';\r\nimport Helmet from 'react-helmet';\r\nimport LibraryAddIcon from '@material-ui/icons/LibraryAdd';\r\n\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\n\r\nconst options = ['Fast', 'Medium', 'Best compression (slow)'];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        overflow: 'hidden',\r\n    },\r\n    hero: {\r\n        padding: '0px 1rem',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginLeft: '0.3rem'\r\n        },\r\n        backgroundColor: \"#fafafa\"\r\n    },\r\n    tabs: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '0px -16px',\r\n        },\r\n        borderRadius: '0px',\r\n    },\r\n    link: {\r\n        color: '#3f51b5',\r\n        cursor: 'pointer',\r\n        '& hover': {\r\n            textDecoration: 'underline'\r\n        }\r\n    },\r\n}));\r\n\r\nexport default function Folderzip() {\r\n    const [state, setState] = React.useState({\r\n        files: null,\r\n        fileNames: [],\r\n        progress: 'start',\r\n        zippedFile: null,\r\n        outputfilename: 'output'\r\n\r\n    });\r\n\r\n    const inputChange = (e) => {\r\n        setState({\r\n            ...state,\r\n            outputfilename: e.target.value\r\n        })\r\n    }\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    const fileChangehandle = (e) => {\r\n        let filelist = [];\r\n        for (let i = 0; i < e.target.files.length; ++i) {\r\n            filelist.push(e.target.files[i].webkitRelativePath);\r\n        }\r\n        setState({\r\n            ...state,\r\n            files: e.target.files,\r\n            fileNames: filelist,\r\n        })\r\n    }\r\n    function CompressZipfile(e) {\r\n        setLoading(true);\r\n        debugger;\r\n        let curButton = e.target\r\n        curButton.parentElement.style.display = 'none';\r\n        setState({\r\n            ...state,\r\n            progress: 'compress'\r\n        });\r\n        const zip = require('jszip')();\r\n        let fname = state.outputfilename;\r\n        fname = fname === \"\" ? \"output\" : fname;\r\n        let folder = zip.folder(fname);\r\n        for (let i = 0; i < state.files.length; ++i) {\r\n            folder.file(state.files[i].webkitRelativePath, state.files[i]);\r\n        }\r\n        zip.generateAsync({\r\n            type: \"blob\",\r\n            compression: \"DEFLATE\",\r\n            compressionOptions: {\r\n                level: 5,\r\n            },\r\n        }).then(content => {\r\n            curButton.parentElement.style.display = '';\r\n            setLoading(false);\r\n            setState({\r\n                ...state,\r\n                zippedFile: content\r\n            });\r\n        });\r\n    }\r\n\r\n    const resetCick = () => {\r\n        setLoading(false);\r\n        setState({\r\n            ...state,\r\n            zippedFile: null,\r\n            files: null,\r\n            fileNames: null\r\n        });\r\n    }\r\n\r\n    const saveZippedFile = () => {\r\n        const fileSave = require(\"file-saver\");\r\n        let filename = state.outputfilename;\r\n        fileSave.saveAs(state.zippedFile,\r\n            filename === \"\" ? \"output.zip\" : filename + \".zip\"\r\n        );\r\n        setTimeout(() => {\r\n            resetCick();\r\n        }, 1500);\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    //dropdown\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n\r\n    const handleClick = () => {\r\n        console.info(`You clicked ${options[selectedIndex]}`);\r\n    };\r\n\r\n    const handleMenuItemClick = (event, index) => {\r\n        setSelectedIndex(index);\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Container maxWidth=\"xl\">\r\n                <Helmet>\r\n                    <title>Zip , unzip and compress files online</title>\r\n                    <meta name=\"keywords\" content=\"numbers, minimum, maximum, float, decimal, integer, minimal, least, lowest, highest, littlest, merest, slightest, smallest, tiniest, maximal, top, biggest, greatest, largest, most, mostest, supreme\" />\r\n                    <meta name=\"description\" content=\"Find the highest and the lowest number from a list\" />\r\n                    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n                    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"></meta>\r\n                </Helmet>\r\n                <Grid container spacing={2} style={{ justifyContent: 'center' }}>\r\n                    <Grid item xl={12} sm={12} md={12} lg={12} style={{\r\n                        width: '100%',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        minHeight: 'calc( 100vh - 243px)',\r\n                        textAlign: 'center',\r\n                        display: 'flex',\r\n                    }}>\r\n                        <br />\r\n                        <Paper elevation={0} className=\"box\" style={{\r\n                            backgroundColor: 'transparent',\r\n                            boxShadow: 'none',\r\n                            minWidth: '60%'\r\n                        }}>\r\n\r\n                            {\r\n                                state.fileNames && state.fileNames.length > 0 ?\r\n                                    <>\r\n                                        <Box p={1} textAlign=\"center\">\r\n                                            <br />\r\n                                            {\r\n                                                loading ? <div className={classes.placeholder}>\r\n                                                    <Fade\r\n                                                        in={loading}\r\n                                                        style={{\r\n                                                            transitionDelay: loading ? '800ms' : '0ms',\r\n                                                        }}\r\n                                                        unmountOnExit\r\n                                                    >\r\n                                                        <CircularProgress />\r\n                                                    </Fade>\r\n                                                    <Typography>Your files are compressing..</Typography>\r\n                                                </div> : <>\r\n                                                    <Box>\r\n                                                        {state.zippedFile ?\r\n                                                            <Typography>You can save your zip file, now !</Typography> : <TextField\r\n                                                                id=\"outputfilename\"\r\n                                                                onChange={inputChange}\r\n                                                                label=\"Enter output file name\"\r\n                                                            />\r\n                                                        }\r\n                                                    </Box>\r\n                                                </>\r\n                                            }\r\n                                            <br />\r\n                                            <br />\r\n                                            <Button style={{ margin: '10px' }} variant=\"outlined\" onClick={resetCick} color=\"secondary\">Reset</Button>\r\n                                            &nbsp;\r\n                                            &nbsp;\r\n                                            {\r\n                                                state.zippedFile ?\r\n                                                    <>\r\n                                                        <Button variant=\"contained\" color=\"primary\"\r\n                                                            onClick={saveZippedFile}\r\n                                                        >Save ZIP file\r\n                                                        </Button>\r\n                                                    </> :\r\n                                                    <>\r\n                                                        {!loading ?\r\n                                                            <>\r\n                                                                <ButtonGroup variant=\"contained\" color=\"primary\" ref={anchorRef} aria-label=\"split button\">\r\n                                                                    <Button variant=\"contained\"\r\n                                                                        onClick={CompressZipfile}\r\n                                                                    >ZIP Folder</Button>\r\n                                                                    <Button color=\"inherit\" onClick={handleClick}>{options[selectedIndex]}</Button>\r\n                                                                    <Button\r\n                                                                        color=\"inherit\"\r\n                                                                        size=\"small\"\r\n                                                                        aria-controls={open ? 'split-button-menu' : undefined}\r\n                                                                        aria-expanded={open ? 'true' : undefined}\r\n                                                                        aria-label=\"select merge strategy\"\r\n                                                                        aria-haspopup=\"menu\"\r\n                                                                        onClick={handleToggle}\r\n                                                                    >\r\n                                                                        <ArrowDropDownIcon />\r\n                                                                    </Button>\r\n                                                                </ButtonGroup>\r\n                                                                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                                                                    {({ TransitionProps, placement }) => (\r\n                                                                        <Grow\r\n                                                                            {...TransitionProps}\r\n                                                                            style={{\r\n                                                                                transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            <Paper>\r\n                                                                                <ClickAwayListener onClickAway={handleClose}>\r\n                                                                                    <MenuList id=\"split-button-menu\">\r\n                                                                                        {options.map((option, index) => (\r\n                                                                                            <MenuItem\r\n                                                                                                key={option}\r\n                                                                                                selected={index === selectedIndex}\r\n                                                                                                onClick={(event) => handleMenuItemClick(event, index)}\r\n                                                                                            >\r\n                                                                                                {option}\r\n                                                                                            </MenuItem>\r\n                                                                                        ))}\r\n                                                                                    </MenuList>\r\n                                                                                </ClickAwayListener>\r\n                                                                            </Paper>\r\n                                                                        </Grow>\r\n                                                                    )}\r\n                                                                </Popper>\r\n                                                            </> : <></>\r\n                                                        }\r\n                                                    </>\r\n                                            }\r\n                                        </Box>\r\n                                    </> : <>\r\n                                        <Typography variant=\"h6\" className=\"title is-6\">\r\n                                            Select folders to archive\r\n                                        </Typography>\r\n                                        <div className=\"file-dropzone\"\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                height: '100%',\r\n                                                fontSize: '0.9rem',\r\n                                                border: 'none',\r\n                                                backgroundColor: 'transparent'\r\n                                            }}\r\n                                            data-v-14591542>\r\n                                            <input id=\"folder\"\r\n                                                multiple\r\n                                                type=\"file\"\r\n                                                directory=\"directory\"\r\n                                                webkitdirectory=\"webkitdirectory\"\r\n                                                data-v-14591542 onChange={e => fileChangehandle(e)}\r\n                                                accept=\"\"\r\n                                            />\r\n                                            <div>\r\n                                                <Button variant=\"contained\"\r\n                                                    startIcon={<LibraryAddIcon />}\r\n                                                    onClick={(e) => {\r\n                                                        document.getElementById(\"folder\").click();\r\n                                                    }}\r\n                                                    color=\"primary\">Select folder</Button>\r\n                                                <br />\r\n                                            </div>\r\n                                        </div>\r\n                                    </>\r\n                            }\r\n\r\n                            <br />\r\n                            <Box display=\"flex\" textAlign=\"left\" flexDirection=\"column\" fontSize=\"0.8rem\" color=\"white\"> {\r\n                                state.fileNames && state.fileNames.length > 0 ?\r\n                                    state.fileNames.map((name, i) => {\r\n                                        return (<>\r\n                                            <span\r\n                                                key={i}\r\n                                                style={{\r\n                                                    padding: '4px 8px',\r\n                                                    backgroundColor: i % 2 === 0 ? '#7a7a7ac7' : 'rgb(151 151 151 / 57%)'\r\n                                                }}\r\n                                            >{(i + 1) + \". \" + name}</span>\r\n                                        </>)\r\n                                    })\r\n                                    : <></>\r\n                            }\r\n                            </Box>\r\n                        </Paper>\r\n                        <br />\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </div >\r\n    );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Typography, Container, Paper, TextField,\r\n    CircularProgress, Fade, Tabs, Tab, Grid, Button, Box,\r\n} from '@material-ui/core';\r\nimport Helmet from 'react-helmet';\r\nimport LibraryAddIcon from '@material-ui/icons/LibraryAdd';\r\nimport Folderzip from './Folderzip';\r\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nconst options = ['Fast', 'Medium', 'Best compression (slow)'];\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={1}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        overflow: 'hidden',\r\n        backgroundColor: 'transparent',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    tabs: {\r\n        backgroundColor: 'transparent',\r\n        width: '100%',\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: '100%'\r\n        },\r\n        \"& > button\": {\r\n            width: '100%'\r\n        }\r\n    },\r\n    tab: {\r\n        width: '100%'\r\n    },\r\n    ulel: {\r\n        listStyle: 'disc !important',\r\n        padding: '1.5rem',\r\n        borderBottom: 'solid',\r\n        borderTop: 'solid',\r\n        \"& li\": {\r\n            listStyleType: 'disc'\r\n        }\r\n    },\r\n    tabheader: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        \"& > span\": {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            alignItems: 'end'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function Filezip() {\r\n    const [state, setState] = React.useState({\r\n        files: null,\r\n        fileNames: [],\r\n        progress: 'start',\r\n        zippedFile: null,\r\n        outputfilename: 'output'\r\n\r\n    });\r\n\r\n    const [value, setValue] = React.useState(0);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const inputChange = (e) => {\r\n        setState({\r\n            ...state,\r\n            outputfilename: e.target.value\r\n        })\r\n    }\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    const fileChangehandle = (e) => {\r\n        let filelist = [];\r\n        for (let i = 0; i < e.target.files.length; ++i) {\r\n            filelist.push(e.target.files[i].name);\r\n        }\r\n        setState({\r\n            ...state,\r\n            files: e.target.files,\r\n            fileNames: filelist,\r\n        })\r\n\r\n    }\r\n\r\n    function CompressZipfile(e) {\r\n        setLoading(true);\r\n        debugger;\r\n        let curButton = e.target\r\n        curButton.parentElement.style.display = 'none';\r\n        setState({\r\n            ...state,\r\n            progress: 'compress'\r\n        });\r\n        const zip = require('jszip')();\r\n        let fname = state.outputfilename;\r\n        fname = fname === \"\" ? \"output\" : fname;\r\n        let folder = zip.folder(fname);\r\n        for (let i = 0; i < state.files.length; ++i) {\r\n            folder.file(state.files[i].name, state.files[i]);\r\n        }\r\n        zip.generateAsync({\r\n            type: \"blob\",\r\n            compression: selectedIndex === 0 ? \"STORE\" : \"DEFLATE\",\r\n            compressionOptions: {\r\n                level: selectedIndex === 0 ? 0 : (selectedIndex === 1 ? 5 : 9),\r\n            },\r\n        }).then(content => {\r\n            curButton.parentElement.style.display = '';\r\n            setLoading(false);\r\n            setState({\r\n                ...state,\r\n                zippedFile: content\r\n            });\r\n        });\r\n    }\r\n\r\n    const resetCick = () => {\r\n        setLoading(false);\r\n        setState({\r\n            ...state,\r\n            zippedFile: null,\r\n            files: null,\r\n            fileNames: null\r\n        });\r\n    }\r\n\r\n    const saveZippedFile = () => {\r\n        const fileSave = require(\"file-saver\");\r\n        let filename = state.outputfilename;\r\n        fileSave.saveAs(state.zippedFile,\r\n            filename === \"\" ? \"output.zip\" : filename + \".zip\"\r\n        );\r\n        setTimeout(() => {\r\n            resetCick();\r\n        }, 1500);\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    //dropdown\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n\r\n\r\n    const handleMenuItemClick = (event, index) => {\r\n        setSelectedIndex(index);\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <Paper square className={classes.tabs}>\r\n                <Tabs\r\n                    variant=\"standard\"\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    centered\r\n                >\r\n                    <Tab className={classes.tabheader} icon={<FileIcon />} label=\"&nbsp; &nbsp; File\" aria-label=\"File\" {...a11yProps(0)} />\r\n                    <Tab className={classes.tabheader} icon={<FolderIcon />} label=\"&nbsp; &nbsp; Folder\" aria-label=\"Folder\" {...a11yProps(1)} />\r\n                </Tabs>\r\n            </Paper>\r\n\r\n            <TabPanel className={classes.tab} value={value} index={0}>\r\n                <>\r\n                    <Container maxWidth=\"xl\">\r\n                        <Helmet>\r\n                            <title>Zip , unzip and compress files online</title>\r\n                            <meta name=\"keywords\" content=\"numbers, minimum, maximum, float, decimal, integer, minimal, least, lowest, highest, littlest, merest, slightest, smallest, tiniest, maximal, top, biggest, greatest, largest, most, mostest, supreme\" />\r\n                            <meta name=\"description\" content=\"Find the highest and the lowest number from a list\" />\r\n                            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n                            <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"></meta>\r\n                        </Helmet>\r\n                        <Grid container spacing={2} style={{ justifyContent: 'center' }}>\r\n                            <Grid item xl={12} sm={12} md={12} lg={12} style={{\r\n                                width: '100%',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                minHeight: 'calc( 100vh - 243px)',\r\n                                textAlign: 'center',\r\n                                display: 'flex',\r\n                            }}>\r\n                                <br />\r\n                                <Paper elevation={0} className=\"box\" style={{\r\n                                    backgroundColor: 'transparent',\r\n                                    boxShadow: 'none',\r\n                                    minWidth: '60%'\r\n                                }}>\r\n\r\n                                    {\r\n                                        state.fileNames && state.fileNames.length > 0 ?\r\n                                            <>\r\n                                                <Box p={1} textAlign=\"center\">\r\n                                                    <br />\r\n                                                    {\r\n                                                        loading ? <div className={classes.placeholder}>\r\n                                                            <Fade\r\n                                                                in={loading}\r\n                                                                style={{\r\n                                                                    transitionDelay: loading ? '800ms' : '0ms',\r\n                                                                }}\r\n                                                                unmountOnExit\r\n                                                            >\r\n                                                                <CircularProgress />\r\n                                                            </Fade>\r\n                                                            <Typography>Your files are compressing..</Typography>\r\n                                                        </div> : <>\r\n                                                            <Box>\r\n                                                                {state.zippedFile ?\r\n                                                                    <Typography>You can save your zip file, now !</Typography> : <TextField\r\n                                                                        id=\"outputfilename\"\r\n                                                                        onChange={inputChange}\r\n                                                                        label=\"Enter output file name\"\r\n                                                                    />\r\n                                                                }\r\n                                                            </Box>\r\n                                                        </>\r\n                                                    }\r\n                                                    <br />\r\n                                                    <br />\r\n                                                    <Button style={{ margin: '10px' }} variant=\"outlined\" onClick={resetCick} color=\"secondary\">Reset</Button>\r\n                                                    &nbsp;\r\n                                                    &nbsp;\r\n                                                    {\r\n                                                        state.zippedFile ?\r\n                                                            <>\r\n                                                                <Button variant=\"contained\" color=\"primary\"\r\n                                                                    onClick={saveZippedFile}\r\n                                                                >Save ZIP file\r\n                                                                </Button>\r\n                                                            </> :\r\n                                                            <>\r\n                                                                {!loading ?\r\n                                                                    <>\r\n                                                                        <ButtonGroup variant=\"contained\" color=\"primary\" ref={anchorRef} aria-label=\"split button\">\r\n                                                                            <Button variant=\"contained\" color=\"primary\"\r\n                                                                                onClick={CompressZipfile}\r\n                                                                            >ZIP Files</Button>\r\n                                                                            <Button color=\"inherit\" >{options[selectedIndex]}</Button>\r\n                                                                            <Button\r\n                                                                                color=\"inherit\"\r\n                                                                                size=\"small\"\r\n                                                                                aria-controls={open ? 'split-button-menu' : undefined}\r\n                                                                                aria-expanded={open ? 'true' : undefined}\r\n                                                                                aria-label=\"select merge strategy\"\r\n                                                                                aria-haspopup=\"menu\"\r\n                                                                                onClick={handleToggle}\r\n                                                                            >\r\n                                                                                <ArrowDropDownIcon />\r\n                                                                            </Button>\r\n                                                                        </ButtonGroup>\r\n                                                                        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                                                                            {({ TransitionProps, placement }) => (\r\n                                                                                <Grow\r\n                                                                                    {...TransitionProps}\r\n                                                                                    style={{\r\n                                                                                        transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n                                                                                    }}\r\n                                                                                >\r\n                                                                                    <Paper>\r\n                                                                                        <ClickAwayListener onClickAway={handleClose}>\r\n                                                                                            <MenuList id=\"split-button-menu\">\r\n                                                                                                {options.map((option, index) => (\r\n                                                                                                    <MenuItem\r\n                                                                                                        key={option}\r\n                                                                                                        selected={index === selectedIndex}\r\n                                                                                                        onClick={(event) => handleMenuItemClick(event, index)}\r\n                                                                                                    >\r\n                                                                                                        {option}\r\n                                                                                                    </MenuItem>\r\n                                                                                                ))}\r\n                                                                                            </MenuList>\r\n                                                                                        </ClickAwayListener>\r\n                                                                                    </Paper>\r\n                                                                                </Grow>\r\n                                                                            )}\r\n                                                                        </Popper>\r\n                                                                    </> : <></>\r\n                                                                }\r\n                                                            </>\r\n                                                    }\r\n                                                </Box>\r\n                                            </> : <>\r\n                                                <Typography variant=\"h6\" className=\"title is-6\">\r\n                                                    Select files to archive\r\n                                                </Typography>\r\n                                                <div className=\"file-dropzone\"\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                        height: '100%',\r\n                                                        fontSize: '0.9rem',\r\n                                                        border: 'none',\r\n                                                        backgroundColor: 'transparent'\r\n                                                    }}\r\n                                                    data-v-14591542>\r\n                                                    <input id=\"image\"\r\n                                                        multiple\r\n                                                        type=\"file\" data-v-14591542 onChange={e => fileChangehandle(e)}\r\n                                                        accept=\"\"\r\n                                                    />\r\n                                                    <div>\r\n                                                        <Button variant=\"contained\"\r\n                                                            startIcon={<LibraryAddIcon />}\r\n                                                            onClick={(e) => {\r\n                                                                document.getElementById(\"image\").click();\r\n                                                            }}\r\n                                                            color=\"primary\">Select files</Button>\r\n                                                        <br />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </>\r\n                                    }\r\n\r\n                                    <br />\r\n                                    <Box display=\"flex\" textAlign=\"left\" flexDirection=\"column\" fontSize=\"0.8rem\" color=\"white\"> {\r\n                                        state.fileNames && state.fileNames.length > 0 ?\r\n                                            state.fileNames.map((name, i) => {\r\n                                                return (<>\r\n                                                    <span\r\n                                                        key={i}\r\n                                                        style={{\r\n                                                            padding: '4px 8px',\r\n                                                            backgroundColor: i % 2 === 0 ? '#7a7a7ac7' : 'rgb(151 151 151 / 57%)'\r\n                                                        }}\r\n                                                    >{(i + 1) + \". \" + name}</span>\r\n                                                </>)\r\n                                            })\r\n                                            : <></>\r\n                                    }\r\n                                    </Box>\r\n                                </Paper>\r\n                                <br />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Container>\r\n                </>\r\n            </TabPanel>\r\n            <TabPanel className={classes.tab} value={value} index={1}>\r\n                <> <Folderzip /></>\r\n            </TabPanel>\r\n        </div >\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Typography, Paper,\r\n    CircularProgress, Fade, Grid, Button, Box, Select\r\n} from '@material-ui/core';\r\nimport Helmet from 'react-helmet';\r\nimport LibraryAddIcon from '@material-ui/icons/LibraryAdd';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport JSZip from 'jszip';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport CustomSnakbar from '../../../../Components/CustomSnakbar';\r\n\r\nconst options = ['zip file'];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        overflow: 'hidden',\r\n    },\r\n    hero: {\r\n        padding: '0px 1rem',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginLeft: '0.3rem'\r\n        },\r\n        backgroundColor: \"white\"\r\n    },\r\n    tabs: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '0px -16px',\r\n        },\r\n        borderRadius: '0px',\r\n    },\r\n    link: {\r\n        color: '#3f51b5',\r\n        cursor: 'pointer',\r\n        '& hover': {\r\n            textDecoration: 'underline'\r\n        }\r\n    },\r\n    select: {\r\n        display: 'none',// 'table-column',\r\n        height: '39px',\r\n        \"& > *\": {\r\n            border: 'none !important',\r\n            margin: '0px !important',\r\n            padding: '0px !important',\r\n            backgroundColor: '#e0e0e0'\r\n        },\r\n        '& > svg': {\r\n            zIndex: 1\r\n        },\r\n        '& > * hover': {\r\n            border: 'none !important',\r\n            margin: '0px !important',\r\n            padding: '0px !important',\r\n            backgroundColor: 'inherit !important'\r\n        }\r\n    }\r\n}));\r\n\r\n\r\n\r\nexport default function Fileunzip() {\r\n    const [state, setState] = React.useState({\r\n        files: null,\r\n        fileNames: [],\r\n        progress: 'start',\r\n        zippedFile: [],\r\n        outputfilename: 'output'\r\n\r\n    });\r\n\r\n    React.useEffect(() => { }, [])\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    const fileChangehandle = (e) => {\r\n        try {\r\n            if (e.target.files && e.target.files[0] && e.target.files[0].name.split('.')[1] === options[selectedIndex].slice(0, options[selectedIndex].length - 5)) {\r\n                let filelist = [];\r\n                for (let i = 0; i < e.target.files.length; ++i) {\r\n                    filelist.push(e.target.files[i].name);\r\n                }\r\n                setState({\r\n                    ...state,\r\n                    files: e.target.files,\r\n                    fileNames: filelist,\r\n                });\r\n                let selectf = document.getElementById('selectfiletype');\r\n                if (selectf) {\r\n                    selectf.style.display = 'none';\r\n                }\r\n            }\r\n            else {\r\n                setOpen(true);\r\n                setTimeout(() => {\r\n                    setOpen(false);\r\n                }, 1500);\r\n\r\n            }\r\n        } catch (e) { }\r\n    }\r\n\r\n    function CompressZipfile(e) {\r\n        setLoading(true);\r\n        extractfile(state.files[0]);\r\n    }\r\n\r\n    function extractfile(file) {\r\n        var zipFileToLoad = file;\r\n        var fileReader = new FileReader();\r\n        fileReader.onload = async function (fileLoadedEvent) {\r\n            let zip = await JSZip.loadAsync(fileLoadedEvent.target.result, {\r\n                compression: 'STORE'\r\n            })\r\n\r\n            var zipFileLoaded = zip.files;\r\n            //  filesave.saveAs(folderName, \"output\");\r\n            let files = [];\r\n            let filecount = 0;\r\n            for (var nameOfFileContainedInZipFile in zipFileLoaded) {\r\n                var fileContainedInZipFile = zipFileLoaded[nameOfFileContainedInZipFile];\r\n                // fileContainedInZipFile.async(\"blob\").then(function (content) {\r\n                filecount += 1;\r\n\r\n                let contetn = await fileContainedInZipFile.async(\"blob\");\r\n                let file = {\r\n                    lelativepath: nameOfFileContainedInZipFile,\r\n                    content: contetn,\r\n                    file: fileContainedInZipFile\r\n                }\r\n                if (file.content && !fileContainedInZipFile.dir && file.lelativepath !== \"\") {\r\n                    files.push(file);\r\n                }\r\n                if (filecount === Object.keys(zipFileLoaded).length) {\r\n                    setLoading(false);\r\n                    setState({\r\n                        ...state,\r\n                        zippedFile: files\r\n                    });\r\n                }\r\n                // });\r\n            }\r\n\r\n        }\r\n\r\n        fileReader.readAsArrayBuffer(zipFileToLoad);\r\n    }\r\n\r\n\r\n    const Links = state.zippedFile.map((f, i) => (\r\n\r\n        <li style={{\r\n            padding: '4px 8px',\r\n            display: 'flex',\r\n            backgroundColor: i % 2 === 0 ? 'rgb(250 250 250)' : 'white'\r\n        }}>\r\n            <a href=\"#\" style={{\r\n                width: '80%',\r\n                borderRight: '1px solid rgb(242 242 242)',\r\n                marginRight: '10px'\r\n            }} onClick={() => {\r\n                displayFileAsText(f.file);\r\n            }} >  {\r\n                    f.lelativepath\r\n                }\r\n            </a>\r\n            <Button style={{ width: '20%' }}\r\n                startIcon={<SaveAltIcon />}\r\n                color=\"primary\"\r\n                variant='outlined'\r\n                onClick={() => {\r\n                    displayFileAsText(f.file);\r\n                }}>Save</Button>\r\n        </li >\r\n    ));\r\n\r\n    function displayFileAsText(file) {\r\n        file.async(\"blob\").then(function (content) {\r\n            const filesave = require('file-saver');\r\n            filesave.saveAs(content,\r\n                file.name);\r\n        });\r\n    }\r\n\r\n    const resetCick = () => {\r\n        setLoading(false);\r\n        setState({\r\n            ...state,\r\n            zippedFile: [],\r\n            files: null,\r\n            fileNames: null\r\n        });\r\n    }\r\n\r\n    const saveZippedFile = () => {\r\n        const fileSave = require(\"file-saver\");\r\n        let filename = state.outputfilename;\r\n        for (let i = 0; i < state.zippedFile.length; ++i) {\r\n            if (state.zippedFile[i].content) {\r\n                fileSave.saveAs(state.zippedFile[i].content,\r\n                    state.zippedFile[i].lelativepath\r\n                );\r\n            }\r\n        }\r\n\r\n        setTimeout(() => {\r\n            resetCick();\r\n        }, 1500);\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n\r\n    const handleMenuItemClick = (event, index) => {\r\n        setSelectedIndex(index);\r\n    };\r\n\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Helmet>\r\n                <title>Zip , unzip and compress files online</title>\r\n                <meta name=\"keywords\" content=\"numbers, minimum, maximum, float, decimal, integer, minimal, least, lowest, highest, littlest, merest, slightest, smallest, tiniest, maximal, top, biggest, greatest, largest, most, mostest, supreme\" />\r\n                <meta name=\"description\" content=\"Find the highest and the lowest number from a list\" />\r\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n                <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"></meta>\r\n            </Helmet>\r\n            <CustomSnakbar\r\n                handleClose={handleClose}\r\n                msg={\"choose file with correct extension\"}\r\n                open={open}\r\n            />\r\n            <Grid container style={{ justifyContent: 'center' }}>\r\n                <Grid item xl={12} sm={12} md={12} lg={12} style={{\r\n                    width: '100%',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    minHeight: 'calc( 100vh - 243px)',\r\n                    textAlign: 'center',\r\n                    display: 'flex',\r\n                }}>\r\n                    <br />\r\n                    <Paper elevation={2} className=\"box\" style={{\r\n                        minWidth: '60%'\r\n                    }}>\r\n                        {\r\n                            state.fileNames && state.fileNames.length > 0 ?\r\n                                <>\r\n                                    <Box p={1} textAlign=\"center\">\r\n\r\n                                        {\r\n                                            loading ? <><div className={classes.placeholder}>\r\n                                                <Fade\r\n                                                    in={loading}\r\n                                                    style={{\r\n                                                        transitionDelay: loading ? '800ms' : '0ms',\r\n                                                    }}\r\n                                                    unmountOnExit\r\n                                                >\r\n                                                    <CircularProgress />\r\n                                                </Fade>\r\n                                                <Typography>Your files are compressing..</Typography>\r\n                                            </div> </> : <>\r\n                                                <Box>\r\n                                                    {state.zippedFile && state.zippedFile.length ?\r\n                                                        <Typography>You can save your zip file, now !</Typography> :\r\n                                                        <></>\r\n                                                    }\r\n                                                </Box>\r\n                                                <br />\r\n                                            </>\r\n                                        }\r\n                                        <Button style={{ margin: '10px' }} variant=\"outlined\" onClick={resetCick} color=\"secondary\">Reset</Button>\r\n                                        &nbsp;\r\n                                        &nbsp;\r\n                                        {\r\n                                            state.zippedFile && state.zippedFile.length ?\r\n                                                <>\r\n                                                    <Button variant=\"contained\" color=\"primary\"\r\n                                                        onClick={saveZippedFile}\r\n                                                    >Save extracted files\r\n                                                    </Button>\r\n                                                    <Box display=\"flex\" textAlign=\"left\" flexDirection=\"column\" fontSize=\"0.8rem\" color=\"white\">\r\n                                                        <br />\r\n                                                        <ul id=\"ulFilesContained\">\r\n                                                            {\r\n                                                                Links\r\n                                                            }\r\n                                                        </ul>\r\n                                                    </Box>\r\n\r\n                                                </> :\r\n                                                <>\r\n                                                    {\r\n                                                        !loading ?\r\n                                                            <Button variant=\"contained\"\r\n                                                                color=\"secondary\"\r\n                                                                onClick={CompressZipfile}\r\n                                                            >Extract file</Button>\r\n\r\n                                                            : <></>\r\n                                                    }\r\n                                                </>\r\n                                        }\r\n                                    </Box>\r\n                                </> : <>\r\n                                    <Typography variant=\"h6\" className=\"title is-6\">\r\n                                        Select file to extract\r\n                                    </Typography>\r\n                                    <div className=\"file-dropzone\"\r\n                                        style={{\r\n                                            fontSize: '0.9rem',\r\n                                            display: 'flex',\r\n                                            alignItems: 'center'\r\n                                        }}\r\n                                        data-v-14591542>\r\n                                        <input id=\"folder\"\r\n                                            multiple\r\n                                            type=\"file\"\r\n                                            data-v-14591542 onChange={e => fileChangehandle(e)}\r\n                                            accept={\".\" + options[selectedIndex].slice(0, options[selectedIndex].length - 5)}\r\n                                        />\r\n                                        <div style={{ margin: '15px' }}>\r\n                                            <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"split button\">\r\n                                                <Button variant=\"contained\"\r\n                                                    startIcon={<LibraryAddIcon />}\r\n                                                    onClick={(e) => {\r\n                                                        document.getElementById(\"folder\").click();\r\n                                                    }}\r\n                                                    color=\"primary\">Select file</Button>\r\n                                                <Button color=\"inherit\" >{options[selectedIndex]}</Button>\r\n                                                <Select\r\n                                                    className={classes.select}\r\n                                                    IconComponent={ArrowDropDownIcon}\r\n                                                    variant=\"outlined\"\r\n                                                    id=\"selectfiletype\"\r\n                                                >\r\n                                                    <MenuList id=\"split-button-menu\">\r\n                                                        {options.map((option, index) => (\r\n                                                            <MenuItem\r\n                                                                key={index}\r\n                                                                selected={index === selectedIndex}\r\n                                                                onClick={(event) => handleMenuItemClick(event, index)}\r\n                                                            >\r\n                                                                {option}\r\n                                                            </MenuItem>\r\n                                                        ))}\r\n                                                    </MenuList>\r\n                                                </Select>\r\n                                            </ButtonGroup>\r\n                                            <br />\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                        }\r\n                        <br />\r\n                    </Paper>\r\n                    <br />\r\n                </Grid>\r\n            </Grid>\r\n        </div >\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Typography, Paper,\r\n    CircularProgress, Fade, Grid, Button, Box, Select\r\n} from '@material-ui/core';\r\nimport Helmet from 'react-helmet';\r\nimport LibraryAddIcon from '@material-ui/icons/LibraryAdd';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport JSZip from 'jszip';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport CustomSnakbar from '../../../../Components/CustomSnakbar';\r\n// import * as Archive from 'libarchive.js';\r\n\r\nconst options = ['zip file', 'zipx file', 'rar file', '7z file', 'iso file',\r\n    'tar file', 'tar.bz2 file', 'tar.gz file', 'tar.xz file', 'jar file', 'Other...'];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        overflow: 'hidden',\r\n    },\r\n    hero: {\r\n        padding: '0px 1rem',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginLeft: '0.3rem'\r\n        },\r\n        backgroundColor: \"white\"\r\n    },\r\n    tabs: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '0px -16px',\r\n        },\r\n        borderRadius: '0px',\r\n    },\r\n    link: {\r\n        color: '#3f51b5',\r\n        cursor: 'pointer',\r\n        '& hover': {\r\n            textDecoration: 'underline'\r\n        }\r\n    },\r\n    select: {\r\n        display: 'table-column',\r\n        height: '39px',\r\n        \"& > *\": {\r\n            border: 'none !important',\r\n            margin: '0px !important',\r\n            padding: '0px !important',\r\n            backgroundColor: '#e0e0e0'\r\n        },\r\n        '& > svg': {\r\n            zIndex: 1\r\n        },\r\n        '& > * hover': {\r\n            border: 'none !important',\r\n            margin: '0px !important',\r\n            padding: '0px !important',\r\n            backgroundColor: 'inherit !important'\r\n        }\r\n    }\r\n}));\r\n\r\n\r\n\r\nexport default function Converter() {\r\n    const [state, setState] = React.useState({\r\n        files: null,\r\n        fileNames: [],\r\n        progress: 'start',\r\n        zippedFile: [],\r\n        outputfilename: 'output'\r\n\r\n    });\r\n    React.useEffect(() => { }, [])\r\n    const [loading, setLoading] = React.useState(false);\r\n    const fileChangehandle = (e) => {\r\n        try {\r\n            if (e.target.files && e.target.files[0] && e.target.files[0].name.split('.')[1] === options[selectedIndex].slice(0, options[selectedIndex].length - 5)) {\r\n                let filelist = [];\r\n                for (let i = 0; i < e.target.files.length; ++i) {\r\n                    filelist.push(e.target.files[i].name);\r\n                }\r\n                setState({\r\n                    ...state,\r\n                    files: e.target.files,\r\n                    fileNames: filelist,\r\n                });\r\n                let selectf = document.getElementById('selectfiletype');\r\n                if (selectf) {\r\n                    selectf.style.display = 'none';\r\n                }\r\n            }\r\n            else {\r\n                setOpen(true);\r\n                setTimeout(() => {\r\n                    setOpen(false);\r\n                }, 1500);\r\n\r\n            }\r\n        } catch (e) { }\r\n    }\r\n\r\n    function CompressZipfile(e) {\r\n        setLoading(true);\r\n        extractfile(state.files[0]);\r\n    }\r\n\r\n    function extractfile(file) {\r\n        var zipFileToLoad = file;\r\n        var fileReader = new FileReader();\r\n        fileReader.onload = async function (fileLoadedEvent) {\r\n            let zip = await JSZip.loadAsync(fileLoadedEvent.target.result, {\r\n                compression: 'STORE'\r\n            })\r\n\r\n            var zipFileLoaded = zip.files;\r\n            //  filesave.saveAs(folderName, \"output\");\r\n            let files = [];\r\n            let filecount = 0;\r\n            for (var nameOfFileContainedInZipFile in zipFileLoaded) {\r\n                var fileContainedInZipFile = zipFileLoaded[nameOfFileContainedInZipFile];\r\n                // fileContainedInZipFile.async(\"blob\").then(function (content) {\r\n                filecount += 1;\r\n\r\n                let contetn = await fileContainedInZipFile.async(\"blob\");\r\n                let file = {\r\n                    lelativepath: nameOfFileContainedInZipFile,\r\n                    content: contetn,\r\n                    file: fileContainedInZipFile\r\n                }\r\n                if (file.content && !fileContainedInZipFile.dir && file.lelativepath !== \"\") {\r\n                    files.push(file);\r\n                }\r\n                if (filecount === Object.keys(zipFileLoaded).length) {\r\n                    setLoading(false);\r\n                    setState({\r\n                        ...state,\r\n                        zippedFile: files\r\n                    });\r\n                }\r\n                // });\r\n            }\r\n\r\n        }\r\n\r\n        fileReader.readAsArrayBuffer(zipFileToLoad);\r\n    }\r\n\r\n\r\n    const Links = state.zippedFile.map((f, i) => (\r\n\r\n        <li style={{\r\n            padding: '4px 8px',\r\n            display: 'flex',\r\n            backgroundColor: i % 2 === 0 ? 'rgb(250 250 250)' : 'white'\r\n        }}>\r\n            <a href=\"#\" style={{\r\n                width: '80%',\r\n                borderRight: '1px solid rgb(242 242 242)',\r\n                marginRight: '10px'\r\n            }} onClick={() => {\r\n                displayFileAsText(f.file);\r\n            }} >  {\r\n                    f.lelativepath\r\n                }\r\n            </a>\r\n            <Button style={{ width: '20%' }}\r\n                startIcon={<SaveAltIcon />}\r\n                color=\"primary\"\r\n                variant='outlined'\r\n                onClick={() => {\r\n                    displayFileAsText(f.file);\r\n                }}>Save</Button>\r\n        </li >\r\n    ));\r\n\r\n    function displayFileAsText(file) {\r\n        file.async(\"blob\").then(function (content) {\r\n            const filesave = require('file-saver');\r\n            filesave.saveAs(content,\r\n                file.name);\r\n        });\r\n    }\r\n\r\n    const resetCick = () => {\r\n        setLoading(false);\r\n        setState({\r\n            ...state,\r\n            zippedFile: [],\r\n            files: null,\r\n            fileNames: null\r\n        });\r\n    }\r\n\r\n    const saveZippedFile = () => {\r\n        const fileSave = require(\"file-saver\");\r\n        let filename = state.outputfilename;\r\n        for (let i = 0; i < state.zippedFile.length; ++i) {\r\n            if (state.zippedFile[i].content) {\r\n                fileSave.saveAs(state.zippedFile[i].content,\r\n                    state.zippedFile[i].lelativepath\r\n                );\r\n            }\r\n        }\r\n\r\n        setTimeout(() => {\r\n            resetCick();\r\n        }, 1500);\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n\r\n    const handleMenuItemClick = (event, index) => {\r\n        setSelectedIndex(index);\r\n    };\r\n\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Helmet>\r\n                <title>Zip , unzip and compress files online</title>\r\n                <meta name=\"keywords\" content=\"numbers, minimum, maximum, float, decimal, integer, minimal, least, lowest, highest, littlest, merest, slightest, smallest, tiniest, maximal, top, biggest, greatest, largest, most, mostest, supreme\" />\r\n                <meta name=\"description\" content=\"Find the highest and the lowest number from a list\" />\r\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n                <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"></meta>\r\n            </Helmet>\r\n            <CustomSnakbar\r\n                handleClose={handleClose}\r\n                msg={\"choose file with correct extension\"}\r\n                open={open}\r\n            />\r\n            <Grid container style={{ justifyContent: 'center' }}>\r\n                <Grid item xl={12} sm={12} md={12} lg={12} style={{\r\n                    width: '100%',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    minHeight: 'calc( 100vh - 243px)',\r\n                    textAlign: 'center',\r\n                    display: 'flex',\r\n                }}>\r\n                    <br />\r\n                    <Paper elevation={2} className=\"box\" style={{\r\n                        minWidth: '60%'\r\n                    }}>\r\n                        {\r\n                            state.fileNames && state.fileNames.length > 0 ?\r\n                                <>\r\n                                    <Box p={1} textAlign=\"center\">\r\n\r\n                                        {\r\n                                            loading ? <><div className={classes.placeholder}>\r\n                                                <Fade\r\n                                                    in={loading}\r\n                                                    style={{\r\n                                                        transitionDelay: loading ? '800ms' : '0ms',\r\n                                                    }}\r\n                                                    unmountOnExit\r\n                                                >\r\n                                                    <CircularProgress />\r\n                                                </Fade>\r\n                                                <Typography>Your files are compressing..</Typography>\r\n                                            </div> </> : <>\r\n                                                <Box>\r\n                                                    {state.zippedFile && state.zippedFile.length ?\r\n                                                        <Typography>You can save your zip file, now !</Typography> :\r\n                                                        <></>\r\n                                                    }\r\n                                                </Box>\r\n                                                <br />\r\n                                            </>\r\n                                        }\r\n                                        <Button style={{ margin: '10px' }} variant=\"outlined\" onClick={resetCick} color=\"secondary\">Reset</Button>\r\n                                        &nbsp;\r\n                                        &nbsp;\r\n                                        {\r\n                                            state.zippedFile && state.zippedFile.length ?\r\n                                                <>\r\n                                                    <Button variant=\"contained\" color=\"primary\"\r\n                                                        onClick={saveZippedFile}\r\n                                                    >Save extracted files\r\n                                                    </Button>\r\n                                                    <Box display=\"flex\" textAlign=\"left\" flexDirection=\"column\" fontSize=\"0.8rem\" color=\"white\">\r\n                                                        <br />\r\n                                                        <ul id=\"ulFilesContained\">\r\n                                                            {\r\n                                                                Links\r\n                                                            }\r\n                                                        </ul>\r\n                                                    </Box>\r\n\r\n                                                </> :\r\n                                                <>\r\n                                                    {\r\n                                                        !loading ?\r\n                                                            <Button variant=\"contained\"\r\n                                                                color=\"secondary\"\r\n                                                                onClick={CompressZipfile}\r\n                                                            >Extract file</Button>\r\n\r\n                                                            : <></>\r\n                                                    }\r\n                                                </>\r\n                                        }\r\n                                    </Box>\r\n                                </> : <>\r\n                                    <Typography variant=\"h6\" className=\"title is-6\">\r\n                                        Select file to convert\r\n                                    </Typography>\r\n                                    <div className=\"file-dropzone\"\r\n                                        style={{\r\n                                            fontSize: '0.9rem',\r\n                                            display: 'flex',\r\n                                            alignItems: 'center'\r\n                                        }}\r\n                                        data-v-14591542>\r\n                                        <input id=\"folder\"\r\n                                            multiple\r\n                                            type=\"file\"\r\n                                            data-v-14591542 onChange={e => fileChangehandle(e)}\r\n                                            accept={\".\" + options[selectedIndex].slice(0, options[selectedIndex].length - 5)}\r\n                                        />\r\n                                        <div style={{ margin: '15px' }}>\r\n                                            <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"split button\">\r\n                                                <Button variant=\"contained\"\r\n                                                    startIcon={<LibraryAddIcon />}\r\n                                                    onClick={(e) => {\r\n                                                        document.getElementById(\"folder\").click();\r\n                                                    }}\r\n                                                    color=\"primary\">Select file</Button>\r\n                                                <Button color=\"inherit\" >{options[selectedIndex]}</Button>\r\n                                                <Select\r\n                                                    className={classes.select}\r\n                                                    IconComponent={ArrowDropDownIcon}\r\n                                                    variant=\"outlined\"\r\n                                                    id=\"selectfiletype\"\r\n                                                >\r\n                                                    <MenuList id=\"split-button-menu\">\r\n                                                        {options.map((option, index) => (\r\n                                                            <MenuItem\r\n                                                                key={index}\r\n                                                                selected={index === selectedIndex}\r\n                                                                onClick={(event) => handleMenuItemClick(event, index)}\r\n                                                            >\r\n                                                                {option}\r\n                                                            </MenuItem>\r\n                                                        ))}\r\n                                                    </MenuList>\r\n                                                </Select>\r\n                                            </ButtonGroup>\r\n                                            <br />\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                        }\r\n                        <br />\r\n                    </Paper>\r\n                    <br />\r\n                </Grid>\r\n            </Grid>\r\n        </div >\r\n    );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { Typography, Paper, Breadcrumbs, Divider, Container } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport Helmet from 'react-helmet';\r\nimport { Link } from 'react-router-dom';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport Filezip from './modules/Filezip';\r\nimport Fileunzip from './modules/Fileunzip';\r\nimport Converter from './modules/Converter';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={1}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        overflow: 'hidden',\r\n    },\r\n    hero: {\r\n        padding: '0px 1rem',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginLeft: '0.3rem'\r\n        },\r\n        backgroundColor: \"#fafafa\"\r\n    },\r\n    tabs: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '0px -16px',\r\n        },\r\n        borderRadius: '0px',\r\n    },\r\n    link: {\r\n        color: '#3f51b5',\r\n        cursor: 'pointer',\r\n        '& hover': {\r\n            textDecoration: 'underline'\r\n        }\r\n    },\r\n}));\r\n\r\nexport default function Zipfiles() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Container maxWidth=\"xl\">\r\n                <Helmet>\r\n                    <title>Zip , unzip and compress files online</title>\r\n                    <meta name=\"keywords\" content=\"numbers, minimum, maximum, float, decimal, integer, minimal, least, lowest, highest, littlest, merest, slightest, smallest, tiniest, maximal, top, biggest, greatest, largest, most, mostest, supreme\" />\r\n                    <meta name=\"description\" content=\"Find the highest and the lowest number from a list\" />\r\n                    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n                    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"></meta>\r\n                </Helmet>\r\n                <section className={classes.hero} data-v-23847e07>\r\n                    <div style={{ padding: '1rem 0px' }}>\r\n                        <div className=\"container\">\r\n                            <h1 style={{ margin: '0px' }} className=\"subtitle  has-text-weight-bold\">\r\n                                <Breadcrumbs className=\"subtitle has-text-weight-bold\" separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n                                    <Link className={classes.link} to={'/files/'}>Files</Link>\r\n                                    <Typography component=\"h1\">\r\n                                        {\r\n                                            value === 0 ? \"Compress files online\" : (\r\n                                                value === 1 ? \"Decompress files online\" : \"Converters\"\r\n                                            )\r\n                                        }\r\n                                    </Typography>\r\n                                </Breadcrumbs>\r\n                            </h1>\r\n                        </div>\r\n                    </div>\r\n                </section >\r\n                <Divider />\r\n                <Paper className={classes.tabs}>\r\n                    <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        centered\r\n                    >\r\n                        <Tab label=\"Zip\" {...a11yProps(0)} />\r\n                        <Tab label=\"UnZip\" {...a11yProps(1)} />\r\n                        {/* <Tab label=\"Converter\" {...a11yProps(2)} hidden={true} /> */}\r\n                    </Tabs>\r\n                </Paper>\r\n                <TabPanel value={value} index={0}>\r\n                    <Filezip />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                    <Fileunzip />\r\n                </TabPanel>\r\n\r\n                {/* <TabPanel value={value} index={2}>\r\n                <Converter />\r\n            </TabPanel> */}\r\n\r\n                <br />\r\n                <Paper elevation=\"2\" className=\"box\">\r\n                    <Box p={2}>\r\n                        <h1 className=\"title is-5\"> How do I zip my files?</h1>\r\n                        <p>\r\n                            Below are step by step instructions for zipping files using zip tool.\r\n                            <br />\r\n                            <br />\r\n                            <ul className={classes.ulel}>\r\n                                <li>    To add files to your zip archive, you have two options:\r\n                                </li>\r\n                                <li>      Click \"Select files to archive\" to open the file chooser\r\n                                </li>\r\n                                <li> Drag and drop files directly onto zip input\r\n                                </li>\r\n                                <li>Select all the files you wish to archive.</li>\r\n\r\n                                <li>    (Optional) Set the desired compression level by clicking the down arrow next to \"Zip Files\".\r\n                                </li>\r\n                                <li>Click \"Zip Files\". It will start compressing the files.\r\n                                </li>\r\n                                <li> Click here to start compression </li>\r\n                                <li>\r\n                                    Once all the files are compressed, the \"Save ZIP File\" button will appear.\r\n                                </li>\r\n                                <li>   Click \"Save ZIP File\" to save the archive to your local drive.</li>\r\n                            </ul>\r\n                        </p>\r\n                        <br />\r\n                        <h1 className=\"title is-5\">\r\n                            What is a zip file?\r\n                        </h1>\r\n                        <p>\r\n                            <a style={{ color: 'blue', textDecoration: 'undeline' }} href=\"https://en.wikipedia.org/wiki/Zip_(file_format)\"> .zip extension</a> is the most common archive format utilised across the internet for storing a collection of files and directories in a single compressed file. This compressed file can easily be shared between users (e.g. via e-mail)\r\n                            <br />\r\n                            <br />\r\n                            Just think of it as a directory that may contain files and more sub-directories once it opened by a zip utility program. It compresses the data using a lossless algorithm meaning there is no file quality degradation like in some compression formats (e.g. mp3, jpeg). The compression algorithm can vary however the most common is DEFLATE. The standard is constantly evolving with new algorithm and encryption options are added at regular intervals.\r\n                            <br />\r\n                            <br />\r\n                            Here you can manipulate zip files including zipping individual files, create a zipped folder, extracting zip files or converting zip files.\r\n                        </p>\r\n                        <br />\r\n                    </Box>\r\n                </Paper>\r\n                <br />\r\n            </Container>\r\n        </div >\r\n    );\r\n}"],"sourceRoot":""}