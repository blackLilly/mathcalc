{"version":3,"sources":["Components/SubNavBar.js","Pages/Tools/numbers/Filternumbers.js"],"names":["useStyle","makeStyles","theme","link","color","cursor","textDecoration","hr","height","backgroundColor","margin","SubNavBar","props","classes","className","style","padding","separator","fontSize","links","map","i","to","url","urlName","pageTitle","component","txtTitle","marginTop","useStyles","root","flexGrow","overflow","divcalc","borderRadius","formelems","row","imgcenter","marginLeft","backdrop","zIndex","drawer","hrElem","Filternumbers","React","useState","result","originalText","hasRemovecriteriameet","isAnyorAll","isGreater","txtGreate","isGreterorEqualto","isLessthan","txtLesser","isLessthanorequal","isSelectOdd","isSelecteven","isMultiplesof","txtMultiplesof","isDivisorsof","txtDivisorsof","state","setState","snakOpen","setSnakOpen","snakMessage","setSnakMessage","onClickCalculate","originalArray","trim","split","filter","a","newResultArray","anyconArray","parseFloat","length","push","c","index","indexOf","isThere","toString","e","setTimeout","SetBackDropopen","resultDiv","document","getElementsByClassName","useEffect","onInputChange","target","id","value","onCheckboxChange","name","checked","hasRemovecriteriameetChange","isAnyorAllChange","backDropopen","open","msg","handleClose","content","maxWidth","elevation","variant","resize","minWidth","minHeight","onChange","startIcon","onClick","copyInput","getElementById","select","setSelectionRange","execCommand","strFile","blob","Blob","type","fileSave","control","label"],"mappings":"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","file":"static/js/93.4162bc91.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumbs, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    link: {\r\n        color: '#3f51b5',\r\n        cursor: 'pointer',\r\n        '& hover': {\r\n            textDecoration: 'underline'\r\n        }\r\n    },\r\n    hr: {\r\n        height: '1px',\r\n        backgroundColor: '#c5c5c5',\r\n        margin: '1.5rem 0 0 0',\r\n    }\r\n}));\r\n\r\nexport default function SubNavBar(props) {\r\n    const classes = useStyle();\r\n    return (\r\n        <section className=\"hero\" data-v-23847e07>\r\n            <div style={{ padding: '2rem 0.5rem 0rem 0.5rem' }}>\r\n                <div className=\"container\">\r\n                    <h1 style={{ margin: '0px' }} className=\"subtitle is-uppercase has-text-weight-bold\">\r\n                        <Breadcrumbs className=\"subtitle is-uppercase has-text-weight-bold\" separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n                            {\r\n                                props.links ? props.links.map((link, i) => {\r\n                                    return <Link key={i} className={classes.link} to={link.url}>{link.urlName}</Link>\r\n                                }) : <></>\r\n                            }\r\n                            {\r\n                                props.pageTitle ? <Typography component=\"h1\" className=\"\">{props.pageTitle}</Typography>\r\n                                    : <></>\r\n                            }\r\n                        </Breadcrumbs>\r\n                    </h1>\r\n                    {props.txtTitle ? <h1 style={{ marginTop: '1rem' }} >\r\n                        {props.txtTitle}</h1> : <></>}\r\n                </div>\r\n            </div>\r\n            <hr className={classes.hr} />\r\n        </section >\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Button, Typography, ButtonGroup,\r\n    Backdrop, CircularProgress, FormControlLabel, Checkbox, TextField, Container, Card\r\n} from '@material-ui/core';\r\nimport SettingIcon from '@material-ui/icons/Settings';\r\nimport FontDownloadIcon from '@material-ui/icons/GetApp';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport Helmet from 'react-helmet';\r\nimport CustomSnakbar from '../../../Components/CustomSnakbar';\r\nimport SubNavBar from '../../../Components/SubNavBar';\r\nimport * as fileSave from \"file-saver\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        overflow: 'hidden'\r\n    },\r\n    divcalc: {\r\n        borderRadius: '12px',\r\n        padding: '1em',\r\n        color: '#314259'\r\n    },\r\n    formelems: {\r\n        margin: '5px 10px',\r\n        '& > *': {\r\n            margin: '10px 0px 10px 0px',\r\n        },\r\n    },\r\n    row: {\r\n        margin: '10px'\r\n    },\r\n    imgcenter: {\r\n        marginLeft: '55px',\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    hrElem: {\r\n        margin: '0.6rem 0px',\r\n        \"& hr\": {\r\n            margin: '0.6rem 0px',\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function Filternumbers() {\r\n    const [state, setState] = React.useState({\r\n        result: '',\r\n        originalText: '1,2,3,4,5,6,7,8,9,10,,',\r\n        hasRemovecriteriameet: false,\r\n        isAnyorAll: false,\r\n        isGreater: false,\r\n        txtGreate: '',\r\n        isGreterorEqualto: false,\r\n        isLessthan: false,\r\n        txtLesser: '',\r\n        isLessthanorequal: false,\r\n        isSelectOdd: false,\r\n        isSelecteven: false,\r\n        isMultiplesof: false,\r\n        txtMultiplesof: '',\r\n        isDivisorsof: false,\r\n        txtDivisorsof: '',\r\n    })\r\n\r\n    const [snakOpen, setSnakOpen] = React.useState(null);\r\n    const [snakMessage, setSnakMessage] = React.useState(null);\r\n\r\n\r\n    const onClickCalculate = () => {\r\n        // SetBackDropopen(true);\r\n        try {\r\n            if (state.originalText !== \"\") {\r\n                let originalArray = state.originalText.trim(',').split(',').filter(function (a) { return a !== '' });\r\n                let newResultArray = originalArray.filter(function (a) { return a; });\r\n                if (!state.isAnyorAll) {\r\n                    if (state.isGreater && state.txtGreate.trim() && state.isGreterorEqualto) {\r\n                        newResultArray = newResultArray.filter(\r\n                            function (a) {\r\n                                return a >= parseFloat(state.txtGreate)\r\n                            }\r\n                        )\r\n                    }\r\n                    else if (state.isGreater && state.txtGreate.trim()) {\r\n                        newResultArray = newResultArray.filter(\r\n                            function (a) {\r\n                                return a > parseFloat(state.txtGreate.trim());\r\n                            }\r\n                        );\r\n                    }\r\n                    if (state.isLessthan && state.txtLesser.trim() && state.isLessthanorequal) {\r\n                        newResultArray = newResultArray.filter(\r\n                            function (a) {\r\n                                return a <= parseFloat(state.txtLesser.trim());\r\n                            }\r\n                        );\r\n                    }\r\n                    else if (state.isLessthan && state.txtLesser.trim()) {\r\n                        newResultArray = newResultArray.filter(\r\n                            function (a) {\r\n                                return a < parseFloat(state.txtLesser.trim());\r\n                            }\r\n                        );\r\n                    }\r\n                    if (!(state.isSelecteven && state.isSelectOdd)) {\r\n                        if (state.isSelecteven) {\r\n                            newResultArray = newResultArray.filter(\r\n                                function (a) {\r\n                                    return a % 2 === 0\r\n                                }\r\n                            );\r\n                        }\r\n\r\n                        if ((state.isSelectOdd)) {\r\n                            newResultArray = newResultArray.filter(\r\n                                function (a) {\r\n                                    return a % 2 === 1\r\n                                }\r\n                            );\r\n                        }\r\n                    }\r\n                    if (state.isMultiplesof && state.txtMultiplesof.trim() !== \"\") {\r\n                        newResultArray = newResultArray.filter(\r\n                            function (a) {\r\n                                return a % state.txtMultiplesof.trim() === 0\r\n                            }\r\n                        );\r\n                    }\r\n                    if (state.isDivisorsof && state.txtDivisorsof.trim() !== \"\") {\r\n                        newResultArray = newResultArray.filter(\r\n                            function (a) {\r\n                                return state.txtDivisorsof.trim() % a === 0 && a <= parseFloat(state.txtDivisorsof);\r\n                            }\r\n                        );\r\n                    }\r\n                } else {\r\n\r\n                    let anyconArray = [];\r\n\r\n                    if (state.isGreater && state.txtGreate.trim() && state.isGreterorEqualto) {\r\n                        newResultArray = newResultArray.filter(\r\n                            function (a) {\r\n                                return a >= parseFloat(state.txtGreate)\r\n                            }\r\n                        );\r\n                        for (let i = 0; i < newResultArray.length; ++i) {\r\n                            anyconArray.push(newResultArray[i]);\r\n                        }\r\n                    }\r\n                    else if (state.isGreater && state.txtGreate.trim()) {\r\n                        newResultArray = newResultArray.filter(\r\n                            function (a) {\r\n                                return a > parseFloat(state.txtGreate.trim());\r\n                            }\r\n                        );\r\n                        for (let i = 0; i < newResultArray.length; ++i) {\r\n                            anyconArray.push(newResultArray[i]);\r\n                        }\r\n                    }\r\n                    if (state.isLessthan && state.txtLesser.trim() && state.isLessthanorequal) {\r\n                        newResultArray = newResultArray.filter(\r\n                            function (a) {\r\n                                return a <= parseFloat(state.txtLesser.trim());\r\n                            }\r\n                        );\r\n                        for (let i = 0; i < newResultArray.length; ++i) {\r\n                            anyconArray.push(newResultArray[i]);\r\n                        }\r\n                    }\r\n                    else if (state.isLessthan && state.txtLesser.trim()) {\r\n                        newResultArray = newResultArray.filter(\r\n                            function (a) {\r\n                                return a < parseFloat(state.txtLesser.trim());\r\n                            }\r\n                        );\r\n                        for (let i = 0; i < newResultArray.length; ++i) {\r\n                            anyconArray.push(newResultArray[i]);\r\n                        }\r\n                    }\r\n                    if (!(state.isSelecteven && state.isSelectOdd)) {\r\n                        if (state.isSelecteven) {\r\n                            newResultArray = newResultArray.filter(\r\n                                function (a) {\r\n                                    return a % 2 === 0\r\n                                }\r\n                            );\r\n                            for (let i = 0; i < newResultArray.length; ++i) {\r\n                                anyconArray.push(newResultArray[i]);\r\n                            }\r\n                        }\r\n\r\n                        if ((state.isSelectOdd)) {\r\n                            newResultArray = newResultArray.filter(\r\n                                function (a) {\r\n                                    return a % 2 === 1\r\n                                }\r\n                            );\r\n                            for (let i = 0; i < newResultArray.length; ++i) {\r\n                                anyconArray.push(newResultArray[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (state.isMultiplesof && state.txtMultiplesof.trim() !== \"\") {\r\n                        newResultArray = newResultArray.filter(\r\n                            function (a) {\r\n                                return a % state.txtMultiplesof.trim() === 0\r\n                            }\r\n                        );\r\n                        for (let i = 0; i < newResultArray.length; ++i) {\r\n                            anyconArray.push(newResultArray[i]);\r\n                        }\r\n                    }\r\n                    if (state.isDivisorsof && state.txtDivisorsof.trim() !== \"\") {\r\n                        newResultArray = newResultArray.filter(\r\n                            function (a) {\r\n                                return state.txtDivisorsof.trim() % a === 0 && a <= parseFloat(state.txtDivisorsof);\r\n                            }\r\n                        );\r\n                        for (let i = 0; i < newResultArray.length; ++i) {\r\n                            anyconArray.push(newResultArray[i]);\r\n                        }\r\n                    }\r\n\r\n                    newResultArray = anyconArray.filter((c, index) => {\r\n                        return anyconArray.indexOf(c) === index;\r\n                    });\r\n                }\r\n                if (state.hasRemovecriteriameet) {\r\n                    newResultArray = originalArray.filter(function (a) {\r\n                        let isThere = true;\r\n                        for (let i = 0; i < newResultArray.length; ++i) {\r\n                            if (newResultArray[i] === a) {\r\n                                isThere = false;\r\n                            }\r\n                        }\r\n                        return isThere;\r\n                    });\r\n                }\r\n                setState({\r\n                    ...state,\r\n                    result: newResultArray.toString(),\r\n                });\r\n            }\r\n        } catch (e) { }\r\n        setTimeout(() => {\r\n            SetBackDropopen(false);\r\n        }, 250);\r\n\r\n        //blink the result\r\n        let resultDiv = document.getElementsByClassName('resultDiv')[0];\r\n        resultDiv.className = 'resultDiv blink_me'\r\n        setTimeout(() => {\r\n            resultDiv.className = 'resultDiv';\r\n        }, 1000);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        onClickCalculate();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n\r\n    const fncopytext = (e) => {\r\n        /* Get the text field */\r\n\r\n        let copyInput = document.getElementById('result');\r\n        /* Select the text field */\r\n        copyInput.select();\r\n        copyInput.setSelectionRange(0, 99999); /* For mobile devices */\r\n\r\n        /* Copy the text inside the text field */\r\n        document.execCommand(\"copy\");\r\n    }\r\n\r\n    const onClickDownload = () => {\r\n\r\n        let strFile = state.result;\r\n\r\n        let blob = new Blob([strFile], { type: 'text' });\r\n\r\n        fileSave.saveAs(blob, 'generatednumbers.txt');\r\n\r\n    }\r\n\r\n    const onInputChange = (e) => {\r\n        setState({\r\n            ...state, [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onCheckboxChange = (e) => {\r\n        setState({\r\n            ...state, [e.target.name]: e.target.checked\r\n        })\r\n    }\r\n\r\n\r\n    const hasRemovecriteriameetChange = (e) => {\r\n        setState({\r\n            ...state,\r\n            hasRemovecriteriameet: !state.hasRemovecriteriameet,\r\n        })\r\n    }\r\n\r\n    const isAnyorAllChange = (e) => {\r\n        setState({\r\n            ...state,\r\n            isAnyorAll: !state.isAnyorAll,\r\n        })\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleClose = (e) => {\r\n        setSnakOpen(null);\r\n        setSnakMessage(null);\r\n    };\r\n\r\n    const [backDropopen, SetBackDropopen] = React.useState(false);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Backdrop className={classes.backdrop} open={backDropopen}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n\r\n            <CustomSnakbar\r\n                open={snakOpen}\r\n                msg={snakMessage}\r\n                handleClose={handleClose}\r\n            />\r\n            <Helmet>\r\n                <title>Filter numbers online | mathcalc</title>\r\n                <meta name=\"keywords\" content=\"filter, numbers, maximum, minimum, divisor, multiple\" />\r\n                <meta name=\"description\" content=\"Filter numbers from a list, according to various criteria, such as maximum, minimum, divisor, multiple and more\" />\r\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n                <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"></meta>\r\n            </Helmet>\r\n            <Container maxWidth=\"xl\">\r\n                <SubNavBar\r\n                    pageTitle=\"Filter Numbers\"\r\n                    links={[{\r\n                        url: \"/numbers/\",\r\n                        urlName: \"Numbers\"\r\n                    }]}\r\n                />\r\n                <section className=\"hero\">\r\n                    <div style={{ padding: '2rem 0.5rem' }}>\r\n                        <div className=\"container\">\r\n                            <h1 className=\"subtitle is-spaced is-uppercase has-text-weight-bold\">\r\n                                FILTER NUMBERS ONLINE</h1>\r\n                            <p className=\"  has-text-grey\">\r\n                                Filter numbers from a list, according to various criteria, such as maximum, minimum, divisor, multiple and more\r\n                        </p>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <div className=\"container\" >\r\n                    <div className=\"columns\" >\r\n                        <div className=\"column is-6\" >\r\n                            <Card elevation={1} className=\"box\" >\r\n                                <div className=\"content\" >\r\n                                    <Typography variant=\"h6\" className={'text-option'}>Original List</Typography><br />\r\n                                    <span>The numbers you want to filter</span><br />\r\n                                    <textarea className=\"input\"\r\n                                        id=\"originalText\"\r\n                                        style={{\r\n                                            resize: 'none',\r\n                                            minWidth: '255px',\r\n                                            minHeight: '100px'\r\n                                        }} value={state.originalText}\r\n                                        onChange={onInputChange}\r\n                                    ></textarea>\r\n                                    <hr />\r\n                                    <Typography variant=\"h6\" className={'text-option'}>Filtered Numbers</Typography>\r\n                                    <div className={'resultDiv blink_me'}>\r\n                                        <textarea className=\"input\"\r\n                                            id=\"result\"\r\n                                            style={{\r\n                                                resize: 'none',\r\n                                                minWidth: '255px',\r\n                                                minHeight: '100px'\r\n                                            }} value={state.result}\r\n                                            onChange={onInputChange}\r\n                                        ></textarea>\r\n                                    </div>\r\n                                    <br />\r\n                                    <Button variant=\"contained\" style={{ margin: '5px' }} className={\"shade_me button is-success\"}\r\n                                        startIcon={<SettingIcon />}\r\n                                        onClick={onClickCalculate}\r\n                                    >Calculate</Button>\r\n                                    <Button variant=\"contained\" style={{ margin: '5px' }} className={\"button is-info\"}\r\n                                        startIcon={<FileCopyIcon />}\r\n                                        onClick={fncopytext}\r\n                                    >Copy</Button>\r\n                                    <Button variant=\"contained\" style={{ margin: '5px' }} className=\"button is-info\"\r\n                                        startIcon={<FontDownloadIcon />}\r\n                                        onClick={onClickDownload}\r\n                                    >Download</Button>\r\n                                </div>\r\n                            </Card>\r\n                        </div>\r\n                        <div className=\"column is-6\" >\r\n                            <Card elevation={1} className=\"box\" >\r\n                                <div className={classes.hrElem + \" content\"} >\r\n                                    <Typography variant=\"h6\" className={'text-option'}>Options</Typography><br />\r\n                                    <span><strong>Remove the numbers that meet the criteria, or preserve them?</strong></span><br />\r\n                                    <ButtonGroup style={{ margin: '10px 0px' }}>\r\n                                        <Button aria-label=\"Preserve\"\r\n                                            className={!state.hasRemovecriteriameet ? \"button is-success\" : 'button'}\r\n                                            onClick={hasRemovecriteriameetChange}\r\n                                        >\r\n                                            Preserve\r\n                                </Button>\r\n                                        <Button aria-label=\"Remove\"\r\n                                            className={state.hasRemovecriteriameet ? \"button is-success\" : 'button'}\r\n                                            onClick={hasRemovecriteriameetChange}\r\n                                        >\r\n                                            Remove\r\n                                    </Button>\r\n                                    </ButtonGroup><br />\r\n                                    <span><strong>Select the numbers that meet any or all conditions?</strong></span><br />\r\n                                    <ButtonGroup style={{ margin: '10px 0px' }}>\r\n                                        <Button aria-label=\"Any(OR)\"\r\n                                            className={state.isAnyorAll ? \"button is-success\" : 'button'}\r\n                                            onClick={isAnyorAllChange}\r\n                                        >\r\n                                            Any (OR)\r\n                                </Button>\r\n                                        <Button aria-label=\"All(AND)\"\r\n                                            className={!state.isAnyorAll ? \"button is-success\" : 'button'}\r\n                                            onClick={isAnyorAllChange}\r\n                                        >\r\n                                            All (AND)\r\n                                    </Button>\r\n                                    </ButtonGroup><br />\r\n                                    <hr />\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox\r\n                                                checked={state.isGreater}\r\n                                                onChange={onCheckboxChange}\r\n                                                name=\"isGreater\"\r\n                                                color=\"primary\"\r\n                                            />\r\n                                        }\r\n                                        label=\"Select numbers greater than...\"\r\n                                    /><br />\r\n                                    {!state.isGreater ? <></> : <><span><strong>Greater than</strong></span><br />\r\n                                        <TextField className={classes.formelems} onChange={onInputChange}\r\n                                            value={state.txtGreate} id=\"txtGreate\" variant=\"outlined\" type=\"number\"></TextField>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Checkbox\r\n                                                    className={classes.formelems}\r\n                                                    checked={state.isGreterorEqualto}\r\n                                                    onChange={onCheckboxChange}\r\n                                                    name=\"isGreterorEqualto\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Or Equal to..\"\r\n                                        /><br />\r\n                                    </>\r\n                                    }\r\n                                    <hr />\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox\r\n                                                checked={state.isLessthan}\r\n                                                onChange={onCheckboxChange}\r\n                                                name=\"isLessthan\"\r\n                                                color=\"primary\"\r\n                                            />\r\n                                        }\r\n                                        label=\"Select numbers lesser than...\"\r\n                                    /><br />\r\n                                    {!state.isLessthan ? <></> : <><span><strong>Lesser than</strong></span><br />\r\n                                        <TextField className={classes.formelems} onChange={onInputChange}\r\n                                            value={state.txtLesser} id=\"txtLesser\" variant=\"outlined\" type=\"number\"></TextField>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Checkbox\r\n                                                    className={classes.formelems}\r\n                                                    checked={state.isLessthanorequal}\r\n                                                    onChange={onCheckboxChange}\r\n                                                    name=\"isLessthanorequal\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Or Equal to..\"\r\n                                        /><br />\r\n                                    </>\r\n                                    }\r\n                                    <hr />\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox\r\n                                                checked={state.isSelecteven}\r\n                                                onChange={onCheckboxChange}\r\n                                                name=\"isSelecteven\"\r\n                                                color=\"primary\"\r\n                                            />\r\n                                        }\r\n                                        label=\"Select even numbers\"\r\n                                    /><br />\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox\r\n                                                checked={state.isSelectOdd}\r\n                                                onChange={onCheckboxChange}\r\n                                                name=\"isSelectOdd\"\r\n                                                color=\"primary\"\r\n                                            />\r\n                                        }\r\n                                        label=\"Select odd numbers\"\r\n                                    /><br />\r\n                                    <hr />\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox\r\n                                                checked={state.isMultiplesof}\r\n                                                onChange={onCheckboxChange}\r\n                                                name=\"isMultiplesof\"\r\n                                                color=\"primary\"\r\n                                            />\r\n                                        }\r\n                                        label=\"Select multiples of...\"\r\n                                    /><br />\r\n                                    {!state.isMultiplesof ? <></> : <><span><strong>Multiples of</strong></span><br />\r\n                                        <TextField className={classes.formelems} onChange={onInputChange}\r\n                                            value={state.txtMultiplesof} id=\"txtMultiplesof\" variant=\"outlined\" type=\"number\"></TextField>\r\n                                    </>\r\n                                    }\r\n                                    <hr />\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox\r\n                                                checked={state.isDivisorsof}\r\n                                                onChange={onCheckboxChange}\r\n                                                name=\"isDivisorsof\"\r\n                                                color=\"primary\"\r\n                                            />\r\n                                        }\r\n                                        label=\"Select divisors of...\"\r\n                                    /><br />\r\n                                    {!state.isDivisorsof ? <></> : <><span><strong>Divisors of</strong></span><br />\r\n                                        <TextField className={classes.formelems} onChange={onInputChange}\r\n                                            value={state.txtDivisorsof} id=\"txtDivisorsof\" variant=\"outlined\" type=\"number\"></TextField>\r\n                                    </>\r\n                                    }\r\n                                </div>\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                </div>\r\n            </Container>\r\n        </div >\r\n    );\r\n}\r\n"],"sourceRoot":""}