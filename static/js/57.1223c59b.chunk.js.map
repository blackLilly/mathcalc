{"version":3,"sources":["../node_modules/@material-ui/icons/NavigateNext.js","Components/SubNavBar.js","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","Pages/Maths/apps/shapes/Circle.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useStyle","makeStyles","theme","link","color","cursor","textDecoration","hr","height","backgroundColor","margin","SubNavBar","props","classes","className","data-v-23847e07","style","padding","separator","fontSize","aria-label","links","map","i","to","url","urlName","pageTitle","component","txtTitle","marginTop","createSvgIcon","withStyles","root","display","marginLeft","spacing","marginRight","palette","grey","borderRadius","boxShadow","shadows","emphasize","icon","width","name","other","_objectWithoutProperties","ButtonBase","_extends","focusRipple","MoreHorizIcon","Breadcrumbs","ref","children","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","index","li","key","concat","Typography","clsx","ol","items","reduce","acc","current","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","event","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","flexWrap","alignItems","listStyle","userSelect","useStyles","flexGrow","ulElem","listStyleType","button","minWidth","background","position","breakpoints","down","circle_input","minHeight","maxWidth","border","radius_field","overflow","formControl","Circle","useState","radius","diameter","area","circumference","commonval","metrics","state","setState","onChangeMetrics","metric","comval","rad","cval","parseFloat","toFixed","Math","PI","pow","sqrt","content","container","direction","justify","item","lg","md","sm","elevation","xl","id","label","variant","type","onChange","e","target","aria-autocomplete","labelId","marginBottom","hidden"],"mappings":"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","file":"static/js/57.1223c59b.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumbs, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    link: {\r\n        color: '#3f51b5',\r\n        cursor: 'pointer',\r\n        '& hover': {\r\n            textDecoration: 'underline'\r\n        }\r\n    },\r\n    hr: {\r\n        height: '1px',\r\n        backgroundColor: '#c5c5c5',\r\n        margin: '1.5rem 0 0 0',\r\n    }\r\n}));\r\n\r\nexport default function SubNavBar(props) {\r\n    const classes = useStyle();\r\n    return (\r\n        <section className=\"hero\" data-v-23847e07>\r\n            <div style={{ padding: '2rem 0.5rem 0rem 0.5rem' }}>\r\n                <div className=\"container\">\r\n                    <h1 style={{ margin: '0px' }} className=\"subtitle is-uppercase has-text-weight-bold\">\r\n                        <Breadcrumbs className=\"subtitle is-uppercase has-text-weight-bold\" separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n                            {\r\n                                props.links ? props.links.map((link, i) => {\r\n                                    return <Link key={i} className={classes.link} to={link.url}>{link.urlName}</Link>\r\n                                }) : <></>\r\n                            }\r\n                            {\r\n                                props.pageTitle ? <Typography component=\"h1\" className=\"\">{props.pageTitle}</Typography>\r\n                                    : <></>\r\n                            }\r\n                        </Breadcrumbs>\r\n                    </h1>\r\n                    {props.txtTitle ? <h1 style={{ marginTop: '1rem' }} >\r\n                        {props.txtTitle}</h1> : <></>}\r\n                </div>\r\n            </div>\r\n            <hr className={classes.hr} />\r\n        </section >\r\n    )\r\n}\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Helmet } from \"react-helmet\";\r\nimport {\r\n    Grid, FormControl, InputLabel, MenuItem,\r\n    Typography, Container, TextField, Select, Card\r\n} from '@material-ui/core';\r\nimport SubNavBar from '../../../../Components/SubNavBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '99%',\r\n    },\r\n    ulElem: {\r\n        \"& li\": {\r\n            listStyleType: 'decimal',\r\n            marginLeft: '20px'\r\n        }\r\n    },\r\n    button: {\r\n        height: 40,\r\n        minWidth: \"175px\",\r\n        background:\r\n            \"transparent linear-gradient(180deg, rgb(0 85 255) 0%, #1962BF 100%) 0% 0% no-repeat padding-box\",\r\n        fontSize: 15,\r\n        color: \"white\",\r\n        marginTop: 14,\r\n        padding: '26px',\r\n        position: \"relative\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            minWidth: \"146px\",\r\n            fontSize: \"13px\",\r\n        },\r\n    },\r\n    circle_input: {\r\n        minHeight: '210px',\r\n        minWidth: '210px',\r\n        maxWidth: '210px',\r\n        borderRadius: '50%',\r\n        border: '0px solid brown',\r\n        boxShadow: '0px 0px 4px black'\r\n    },\r\n    radius_field: {\r\n        marginTop: '25%',\r\n        marginLeft: '50%',\r\n        overflow: 'hidden'\r\n    },\r\n    formControl: {\r\n        marginTop: '2rem'\r\n    }\r\n}));\r\n\r\n\r\nexport default function Circle() {\r\n\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n        radius: '0',\r\n        diameter: '0',\r\n        area: '0',\r\n        circumference: '0',\r\n        commonval: '0',\r\n        metrics: 0,\r\n    });\r\n\r\n    const onChangeRadius = (e) => {\r\n        let rad = parseFloat(e.target.value === '' ? 0 : e.target.value)\r\n        setState({\r\n            ...state,\r\n            radius: e.target.value,\r\n            diameter: (2 * rad).toFixed(3),\r\n            area: (Math.PI * Math.pow(rad, 2)).toFixed(3),\r\n            circumference: (2 * Math.PI * rad).toFixed(3),\r\n            metrics: 0,\r\n            commonval: rad\r\n        });\r\n    }\r\n\r\n    const onChangeMetrics = (metric, comval) => {\r\n        let rad;\r\n        let cval;\r\n        if (comval || comval === \"\") {\r\n            cval = comval;\r\n        } else {\r\n            cval = parseFloat(state.commonval === '' ? 0 : state.commonval);\r\n        }\r\n        if (cval !== \"\") {\r\n\r\n            switch (metric) {\r\n                case 0:\r\n                    setState({\r\n                        ...state,\r\n                        radius: cval,\r\n                        diameter: (2 * cval).toFixed(3),\r\n                        area: (Math.PI * Math.pow(cval, 2)).toFixed(3),\r\n                        circumference: (2 * Math.PI * cval).toFixed(3),\r\n                        commonval: cval,\r\n                        metrics: 0\r\n                    });\r\n                    break;\r\n                case 1:\r\n                    setState({\r\n                        ...state,\r\n                        radius: parseFloat(cval / 2).toFixed(3),\r\n                        diameter: cval.toFixed(3),\r\n                        area: (Math.PI * Math.pow((cval / 2), 2)).toFixed(3),\r\n                        circumference: (2 * Math.PI * (cval / 2)).toFixed(3),\r\n                        commonval: cval,\r\n                        metrics: 1\r\n                    });\r\n                    break;\r\n                case 2:\r\n                    rad = parseFloat(Math.sqrt(cval / Math.PI)).toFixed(3);\r\n                    setState({\r\n                        ...state,\r\n                        radius: rad,\r\n                        diameter: (2 * rad).toFixed(3),\r\n                        area: cval,\r\n                        circumference: parseFloat(2 * Math.PI * rad).toFixed(3),\r\n                        commonval: cval,\r\n                        metrics: 2\r\n                    });\r\n                    break;\r\n                case 3:\r\n                    rad = parseFloat(cval / (2 * Math.PI)).toFixed(3);\r\n                    setState({\r\n                        ...state,\r\n                        radius: rad,\r\n                        diameter: (2 * rad).toFixed(3),\r\n                        area: (Math.PI * Math.pow(rad, 2)).toFixed(3),\r\n                        circumference: cval,\r\n                        commonval: cval,\r\n                        metrics: 3\r\n                    });\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        } else {\r\n            setState({\r\n                ...state, commonval: '',\r\n                radius: 0,\r\n                diameter: 0,\r\n                area: 0,\r\n                circumference: 0,\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Helmet>\r\n                <title>Online Circle calculator | mathcalc</title>\r\n                <meta name=\"keywords\" content=\"Online circle calculator, free calculator, online calculator, mathcalc\" />\r\n                <meta name=\"description\"\r\n                    content=\"Calculate diameter, Area and circumference of a circle online for free\" />\r\n            </Helmet>\r\n            <Container maxWidth={'xl'}  >\r\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                    <Grid item lg={8} md={8} sm={12}>\r\n                        <SubNavBar\r\n                            links={[{\r\n                                url: '/maths/',\r\n                                urlName: 'Mathematics'\r\n                            },\r\n                            {\r\n                                url: '/maths/shapes/',\r\n                                urlName: 'Shapes'\r\n                            }]}\r\n                            pageTitle=\"Circle calculator\"\r\n                            txtTitle=\"Circle calculator is used to calculate the area , circumference and diameter of a circle\"\r\n                        />\r\n                        <br />\r\n                        <Card elevation={1} className=\"box\">\r\n                            <h2 className={'title is-5'}>Circle Calculator</h2>\r\n                            <p>\r\n                                Circle is a particular shape and defined as the set of points in a plane placed at equal\r\n                                distance from a single point called the center of the circle\r\n                                </p>\r\n                            <br />\r\n                            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                                <Grid item xl={6} lg={9} md={12} sm={12}>\r\n                                    <div className={classes.circle_input}>\r\n                                        <TextField id=\"radius\" className={classes.radius_field}\r\n                                            value={state.radius} label=\"Enter Radius\" variant=\"standard\"\r\n                                            type={'number'}\r\n                                            onChange={onChangeRadius} />\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xl={6} lg={6} md={12} sm={12}>\r\n                                    <FormControl variant=\"outlined\" className={classes.formControl} aria-autocomplete={'none'}>\r\n                                        <InputLabel id=\"metrics\">Calculate For</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"metrics-label\"\r\n                                            id=\"metrics-outlined\"\r\n                                            label=\"Calculate For\" style={{ marginBottom: '2rem' }}\r\n                                            onChange={(e) => { onChangeMetrics(e.target.value) }}\r\n                                            value={state.metrics}\r\n                                        >\r\n                                            <MenuItem value={0}>Radius</MenuItem>\r\n                                            <MenuItem value={1}>Diameter</MenuItem>\r\n                                            <MenuItem value={2}>Area</MenuItem>\r\n                                            <MenuItem value={3}>Circumference</MenuItem>\r\n                                        </Select>\r\n                                        <TextField id=\"comonval\" type={'number'}\r\n                                            style={{ width: '100%', marginBottom: '2rem' }} label=\"Enter the value\"\r\n                                            value={state.commonval} variant=\"outlined\"\r\n                                            onChange={(e) => { onChangeMetrics(state.metrics, e.target.value) }}\r\n                                        />\r\n                                    </FormControl>\r\n                                    <br />\r\n                                    <div>\r\n                                        <Typography component='label' hidden={state.metrics === 0}>Radius : <strong>{state.radius}</strong><br /></Typography>\r\n                                        <Typography component='label' hidden={state.metrics === 1}>Diameter :  <strong>{state.diameter}</strong><br /></Typography>\r\n                                        <Typography component='label' hidden={state.metrics === 2}>Area : <strong> {state.area}</strong><br /></Typography>\r\n                                        <Typography component='label' hidden={state.metrics === 3}>Circumference :  <strong>{state.circumference}</strong><br /></Typography>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Card>\r\n                        <br />\r\n                        <Card className=\"box\" elevation={1}>\r\n                            <h2 className=\"title is-4\"> Frequently Asked Questions on Circles</h2>\r\n                            <h2 className=\"title is-5\">\r\n                                Properties of circle\r\n                            </h2>\r\n                            <ul className={classes.ulElem}>\r\n                                <li>  The circle is the shape with the largest area for a given length of perimeter (see Isoperimetric inequality).\r\n                              </li>   <li> The circle is a highly symmetric shape: every line through the centre forms a line of reflection symmetry, and it has rotational symmetry around the centre for every angle. Its symmetry group is the orthogonal group O(2,R). The group of rotations alone is the circle group T.\r\n                              </li>   <li>    All circles are similar.\r\n                              </li>   <li>   A circle circumference and radius are proportional.\r\n                              </li>   <li>  The area enclosed and the square of its radius are proportional.\r\n                                </li>   <li>   The constants of proportionality are 2π and π respectively.\r\n                                </li>   <li>  The circle that is centred at the origin with radius 1 is called the unit circle.\r\n                                </li>   <li>  Thought of as a great circle of the unit sphere, it becomes the Riemannian circle.\r\n                                </li>   <li>  Through any three points, not all on the same line, there lies a unique circle. In Cartesian coordinates, it is possible to give explicit formulae for the coordinates of the centre of the circle and the radius in terms of the coordinates of the three given points\r\n                               </li>\r\n                            </ul>\r\n                            <br />\r\n                            <h2 className=\"title is-5\">What is called a circle?</h2>\r\n                            <p>\r\n                                A circle is a closed two-dimensional curve shaped figure, where all the points on the surface of the circle are equidistant from the centre point.\r\n                        </p>\r\n                            <br />\r\n                            <h2 className=\"title is-5\">What are the different parts of a circle?</h2>\r\n                            <p>\r\n                                The different parts of a circle are radius, diameter, chord, tangent, arc, centre, secant, sector.\r\n                        </p>\r\n                            <br />\r\n                            <h2 className=\"title is-5\">The circle formulas.</h2>\r\n                            <p>\r\n                                If “r” is the radius of the circle, then the formula for the area and the circumference of a circle are:\r\n                                Circumference of a Circle = 2πr units\r\n                                Area of a circle = πr<sup>2</sup> square units.\r\n                            </p>\r\n                            <br />\r\n                            <h2 className=\"title is-5\">Radius and diameter of a circle.</h2>\r\n                            <p>The radius of a circle is the line segment that connects the centre point and the circle surface. The diameter is considered as the longest chord of a circle which is twice the radius.\r\n                            </p>\r\n                            <br />\r\n                            <h2 className=\"title is-5\"> Define chord</h2>\r\n                            <p>\r\n                                The chord of a circle is defined as the straight line segment whose both endpoints touch the surface of a circle. The longest chord of a circle is a diameter.\r\n                            </p>\r\n                        </Card>\r\n                        <br />\r\n                    </Grid>\r\n                    <Grid item lg={4} md={4} sm={false}></Grid>\r\n                </Grid>\r\n            </Container>\r\n        </div >\r\n    );\r\n}\r\n"],"sourceRoot":""}