{"version":3,"sources":["../node_modules/@material-ui/icons/NavigateNext.js","Components/SubNavBar.js","../node_modules/@material-ui/icons/Settings.js","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","Pages/Tools/numbers/Baseconvertor.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useStyle","makeStyles","theme","link","color","cursor","textDecoration","hr","height","backgroundColor","margin","SubNavBar","props","classes","className","data-v-23847e07","style","padding","separator","fontSize","aria-label","links","map","i","to","url","urlName","pageTitle","component","txtTitle","marginTop","createSvgIcon","withStyles","root","display","marginLeft","spacing","marginRight","palette","grey","borderRadius","boxShadow","shadows","emphasize","icon","width","name","other","_objectWithoutProperties","ButtonBase","_extends","focusRipple","MoreHorizIcon","Breadcrumbs","ref","children","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","index","li","key","concat","Typography","clsx","ol","items","reduce","acc","current","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","event","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","flexWrap","alignItems","listStyle","userSelect","useStyles","flexGrow","overflow","divcalc","formelems","label","justifyContent","formcontrol","flexDirection","row","imgcenter","Baseconvertor","useState","binVal","decVal","octVal","hexaVal","baseconvertion","inputnumber","baseVal","targetbase","state","setState","onInputChange","e","bin","dec","oct","hex","target","id","parseInt","replace","toString","isNaN","toUpperCase","content","http-equiv","maxWidth","elevation","variant","onChange","type","num","replaceAll","startIcon","inputnum","base"],"mappings":"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","file":"static/js/53.05bec0e7.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumbs, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    link: {\r\n        color: '#3f51b5',\r\n        cursor: 'pointer',\r\n        '& hover': {\r\n            textDecoration: 'underline'\r\n        }\r\n    },\r\n    hr: {\r\n        height: '1px',\r\n        backgroundColor: '#c5c5c5',\r\n        margin: '1.5rem 0 0 0',\r\n    }\r\n}));\r\n\r\nexport default function SubNavBar(props) {\r\n    const classes = useStyle();\r\n    return (\r\n        <section className=\"hero\" data-v-23847e07>\r\n            <div style={{ padding: '2rem 0.5rem 0rem 0.5rem' }}>\r\n                <div className=\"container\">\r\n                    <h1 style={{ margin: '0px' }} className=\"subtitle is-uppercase has-text-weight-bold\">\r\n                        <Breadcrumbs className=\"subtitle is-uppercase has-text-weight-bold\" separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n                            {\r\n                                props.links ? props.links.map((link, i) => {\r\n                                    return <Link key={i} className={classes.link} to={link.url}>{link.urlName}</Link>\r\n                                }) : <></>\r\n                            }\r\n                            {\r\n                                props.pageTitle ? <Typography component=\"h1\" className=\"\">{props.pageTitle}</Typography>\r\n                                    : <></>\r\n                            }\r\n                        </Breadcrumbs>\r\n                    </h1>\r\n                    {props.txtTitle ? <h1 style={{ marginTop: '1rem' }} >\r\n                        {props.txtTitle}</h1> : <></>}\r\n                </div>\r\n            </div>\r\n            <hr className={classes.hr} />\r\n        </section >\r\n    )\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19.14 12.94c.04-.3.06-.61.06-.94 0-.32-.02-.64-.07-.94l2.03-1.58c.18-.14.23-.41.12-.61l-1.92-3.32c-.12-.22-.37-.29-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54c-.04-.24-.24-.41-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22L2.74 8.87c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.09.63-.09.94s.02.64.07.94l-2.03 1.58c-.18.14-.23.41-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61l-2.01-1.58zM12 15.6c-1.98 0-3.6-1.62-3.6-3.6s1.62-3.6 3.6-3.6 3.6 1.62 3.6 3.6-1.62 3.6-3.6 3.6z\"\n}), 'Settings');\n\nexports.default = _default;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Typography, Container, Card, FormControl, } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SettingIcon from '@material-ui/icons/Settings'\r\nimport Helmet from 'react-helmet';\r\nimport SubNavBar from '../../../Components/SubNavBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        overflow: 'hidden'\r\n    },\r\n    divcalc: {\r\n        borderRadius: '12px',\r\n        padding: '1em',\r\n        color: '#314259'\r\n    },\r\n    formelems: {\r\n        '& > *': {\r\n            margin: '10px 10px 10px 0px',\r\n        },\r\n    },\r\n    label: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        marginRight: '10px',\r\n        width: '90px'\r\n    },\r\n    formcontrol: {\r\n        flexDirection: 'row',\r\n    },\r\n    row: {\r\n        margin: '10px'\r\n    },\r\n    imgcenter: {\r\n        marginLeft: '55px',\r\n    },\r\n}));\r\n\r\nexport default function Baseconvertor() {\r\n    const [state, setState] = React.useState({\r\n        binVal: '',\r\n        decVal: '',\r\n        octVal: '',\r\n        hexaVal: '',\r\n        baseconvertion: '',\r\n        inputnumber: '',\r\n        baseVal: '',\r\n        targetbase: '',\r\n    });\r\n\r\n    const onInputChange = (e) => {\r\n        let bin = 0;\r\n        let dec = 0;\r\n        let oct = 0;\r\n        let hex = 0;\r\n        debugger\r\n        if (e.target.id === \"binVal\") {\r\n            bin = parseInt(e.target.value === '' ? 0 : e.target.value);\r\n            dec = parseInt((bin + '').replace(/[^01]/gi, ''), 2);\r\n            oct = parseInt(dec).toString(8);\r\n            hex = parseInt(dec).toString(16);\r\n\r\n            dec = isNaN(dec) ? '' : dec;\r\n            oct = isNaN(oct) ? '' : oct;\r\n            hex = hex.toString() === \"NaN\" ? '' : hex;\r\n\r\n            setState({\r\n                ...state,\r\n                binVal: e.target.value,\r\n                decVal: dec,\r\n                octVal: oct.toString().toUpperCase(),\r\n                hexaVal: hex.toString().toUpperCase(),\r\n            })\r\n        } else if (e.target.id === \"decVal\") {\r\n            dec = parseInt(e.target.value === '' ? 0 : e.target.value);\r\n            bin = parseInt(dec).toString(2);\r\n            oct = parseInt(dec).toString(8);\r\n            hex = parseInt(dec).toString(16);\r\n\r\n\r\n            bin = isNaN(bin) ? '' : bin;\r\n            oct = isNaN(oct) ? '' : oct;\r\n            hex = hex.toString() === \"NaN\" ? '' : hex;\r\n\r\n            setState({\r\n                ...state,\r\n                binVal: bin,\r\n                decVal: e.target.value,\r\n                octVal: oct.toString().toUpperCase(),\r\n                hexaVal: hex.toString().toUpperCase(),\r\n            })\r\n        } else if (e.target.id === \"octVal\") {\r\n            oct = parseInt(e.target.value === '' ? 0 : e.target.value);\r\n            dec = parseInt(oct, 8);\r\n            bin = parseInt(dec).toString(2);\r\n            hex = parseInt(dec).toString(16);\r\n\r\n            bin = isNaN(bin) ? '' : bin;\r\n            dec = isNaN(dec) ? '' : dec;\r\n            hex = hex.toString() === \"NaN\" ? '' : hex;\r\n\r\n            setState({\r\n                ...state,\r\n                binVal: bin,\r\n                decVal: dec,\r\n                octVal: e.target.value.toString().toUpperCase(),\r\n                hexaVal: hex.toString().toUpperCase(),\r\n            })\r\n        } else if (e.target.id === \"hexaVal\") {\r\n            hex = e.target.value === '' ? 0 : e.target.value;\r\n            dec = parseInt('0x' + hex);\r\n            bin = parseInt(dec).toString(2);\r\n            oct = parseInt(dec).toString(8);\r\n\r\n            bin = isNaN(dec) ? '' : bin;\r\n            dec = isNaN(dec) ? '' : dec;\r\n            oct = isNaN(oct) ? '' : oct;\r\n\r\n            setState({\r\n                ...state,\r\n                binVal: bin,\r\n                decVal: dec,\r\n                octVal: oct.toString().toUpperCase(),\r\n                hexaVal: e.target.value.toString().toUpperCase(),\r\n            })\r\n        } else {\r\n            setState({\r\n                ...state,\r\n                [e.target.id]: e.target.value,\r\n            })\r\n        }\r\n    }\r\n\r\n    const ClearAll = (e) => {\r\n        setState({\r\n            ...state,\r\n            binVal: '',\r\n            decVal: '',\r\n            octVal: '',\r\n            hexaVal: '',\r\n        })\r\n    }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Helmet>\r\n                <title>Online Base Converter | mathcalc</title>\r\n                <meta name=\"keywords\" content=\"Mathcalc,radix,radix conversion, binary to decimal ,hexadecimal to binary, hexadecimal to octal,binary to hexa decimal, decimal to binary, binary convertion,decimal conversion\" />\r\n                <meta name=\"description\" content=\"Mathcalc - Online base converter is used to convert from one base of number(binary or decimal or octal or hexadecimal) into another base of number (binary or decimal or octal or hexadecimal)\" />\r\n                <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"></meta>\r\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"></meta>\r\n            </Helmet>\r\n            <Container maxWidth=\"xl\">\r\n                <SubNavBar\r\n                    pageTitle=\"Base Converter\"\r\n                    links={[{\r\n                        url: \"/numbers/\",\r\n                        urlName: \"Numbers\"\r\n                    }]}\r\n                />\r\n                <section className=\"hero\">\r\n                    <div style={{ padding: '2rem 0.5rem' }}>\r\n                        <div className=\"container\">\r\n                            <h1 className=\"subtitle is-spaced is-uppercase has-text-weight-bold\">\r\n                                ONLINE BASE CONVERTER OF NUMMBERS\r\n                           </h1>\r\n                            <p className=\"  has-text-grey\">\r\n                                Base conversion of a numbers from varoius bases like binary , octal, decimal, hexadecimal and custom radix conversion </p>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <div className=\"container\" >\r\n                    <div className=\"columns\" >\r\n                        <div className=\"column is-6\" >\r\n                            <Card elevation={1} className=\"box\" >\r\n                                <div className=\"content\" >\r\n                                    <Typography variant=\"h6\" className={'text-option'}>Base Conversion</Typography>\r\n                                    <br />\r\n                                    <FormControl className={classes.formcontrol}>\r\n                                        <div className={classes.label}>\r\n                                            <strong>BIN</strong>\r\n                                        </div>\r\n                                        <div>\r\n                                            <TextField className={classes.formelems} onChange={onInputChange}\r\n                                                value={state.binVal} id=\"binVal\" variant=\"outlined\" type=\"number\"></TextField>\r\n                                        </div>\r\n                                    </FormControl>\r\n                                    <FormControl className={classes.formcontrol}>\r\n                                        <div className={classes.label}>\r\n                                            <Typography><strong>OCT</strong></Typography>\r\n                                        </div>\r\n                                        <div>  <TextField className={classes.formelems} onChange={onInputChange}\r\n                                            value={state.octVal} id=\"octVal\" variant=\"outlined\" type=\"number\"></TextField>\r\n                                        </div>\r\n                                    </FormControl>\r\n                                    <FormControl className={classes.formcontrol}>\r\n                                        <div className={classes.label}>\r\n                                            <Typography><strong>DEC</strong></Typography>\r\n                                        </div>\r\n                                        <div> <TextField className={classes.formelems} onChange={onInputChange}\r\n                                            value={state.decVal} id=\"decVal\" variant=\"outlined\" type=\"number\" ></TextField>\r\n                                        </div>\r\n                                    </FormControl>\r\n                                    <FormControl className={classes.formcontrol}>\r\n                                        <div className={classes.label}>\r\n                                            <Typography><strong>HEXA</strong></Typography>\r\n                                        </div>\r\n                                        <div>   <TextField className={classes.formelems} onChange={onInputChange}\r\n                                            value={state.hexaVal} id=\"hexaVal\" variant=\"outlined\" ></TextField>\r\n                                        </div>\r\n                                    </FormControl>\r\n                                    <br />\r\n                                    <br />\r\n                                    <FormControl className={classes.formcontrol}>\r\n                                        <div className={classes.label}></div>\r\n                                        <Button aria-label=\"Clear All\"\r\n                                            color=\"secondary\"\r\n                                            variant=\"contained\"\r\n                                            onClick={ClearAll}\r\n                                        >\r\n                                            Clear All\r\n                                    </Button>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Card>\r\n                        </div>\r\n                        <div className=\"column is-6\" >\r\n                            <Card elevation={1} className=\"box\" >\r\n                                <div className=\"content\" >\r\n                                    <Typography variant=\"h6\" className={'text-option'}>Radix Conversion</Typography>\r\n                                    <br />\r\n                                    <FormControl className={classes.formcontrol}>\r\n                                        <div>\r\n                                            <TextField className={classes.formelems} onChange={\r\n                                                (e) => {\r\n                                                    let num = state.inputnumber;\r\n                                                    for (let i = parseInt(state.baseVal); i < 10; ++i) {\r\n                                                        num = num.replaceAll(\"\" + i + \"\", \"\");\r\n                                                    }\r\n                                                    if (e.target.value === \"\" || e.target.value <= 32) {\r\n                                                        setState({\r\n                                                            ...state,\r\n                                                            [e.target.id]: e.target.value,\r\n                                                            inputnumber: num,\r\n                                                            baseconvertion: \"\"\r\n                                                        });\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                                label=\"Radix of Number\"\r\n                                                value={state.baseVal} id=\"baseVal\" variant=\"outlined\" type=\"number\"></TextField>\r\n                                        </div>\r\n                                        <div >\r\n                                            <TextField className={classes.formelems} onChange={\r\n                                                (e) => {\r\n\r\n                                                    let num = e.target.value.toString();\r\n                                                    if (state.baseVal < 10) {\r\n                                                        for (let i = parseInt(state.baseVal); i < 10; ++i) {\r\n                                                            num = num.replaceAll(\"\" + i + \"\", \"\");\r\n                                                        }\r\n                                                        setState({\r\n                                                            ...state,\r\n                                                            [e.target.id]: num,\r\n                                                            baseconvertion: \"\"\r\n                                                        })\r\n                                                    } else {\r\n                                                        setState({\r\n                                                            ...state,\r\n                                                            [e.target.id]: e.target.value,\r\n                                                            baseconvertion: \"\"\r\n                                                        })\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                                label=\"Input Number\"\r\n                                                value={state.inputnumber} id=\"inputnumber\" variant=\"outlined\" type=\"number\"></TextField>\r\n                                        </div>\r\n                                    </FormControl>\r\n                                    <FormControl className={classes.formcontrol}>\r\n                                        <div>\r\n                                            <TextField className={classes.formelems} onChange={\r\n                                                (e) => {\r\n                                                    if (e.target.value === \"\" || e.target.value <= 32) {\r\n                                                        setState({\r\n                                                            ...state,\r\n                                                            [e.target.id]: e.target.value,\r\n                                                            baseconvertion: \"\"\r\n                                                        });\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                                label=\"Target radix of number\"\r\n                                                value={state.targetbase} id=\"targetbase\" variant=\"outlined\" type=\"number\"></TextField>\r\n                                        </div>\r\n                                    </FormControl>\r\n                                    <br />\r\n                                    <br />\r\n                                    <FormControl className={classes.formcontrol}>\r\n                                        <div className={classes.label}></div>\r\n                                        <Button aria-label=\"Clear All\"\r\n                                            color=\"primary\"\r\n                                            variant=\"contained\"\r\n                                            startIcon={<SettingIcon />}\r\n                                            onClick={(e) => {\r\n                                                let inputnum = state.inputnumber === \"\" ? 0 : state.inputnumber;\r\n                                                let base = state.baseVal === \"\" ? 0 : state.baseVal;\r\n                                                let target = state.targetbase === \"\" ? 0 : state.targetbase;\r\n\r\n                                                if (!(base >= 2 && base <= 36) || !(target >= 2 && target <= 36)) {\r\n                                                    setState({\r\n                                                        ...state,\r\n                                                        baseconvertion: \"Radix should be between 2 and 36\"\r\n                                                    })\r\n                                                } else {\r\n                                                    setState({\r\n                                                        ...state,\r\n                                                        baseconvertion: parseInt(inputnum, base).toString(target).toUpperCase() === \"NAN\" ?\r\n                                                            \"Invalid input number\" : parseInt(inputnum, base).toString(target).toUpperCase()\r\n                                                    });\r\n                                                }\r\n                                            }}\r\n                                        >\r\n                                            Convert\r\n                                    </Button>\r\n                                    </FormControl>\r\n                                    <br />\r\n                                    <br />\r\n                                    <Typography>Result : {state.baseconvertion}</Typography>\r\n                                </div>\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                </div>\r\n\r\n                <Card elevation={1} className=\"box\">\r\n                    <h1 className=\"title is-5\"> The base converter</h1>\r\n                    <p>\r\n                        The base converter feature provides different number base equivalents to be viewed at the same time.\r\n                    </p>\r\n                    <br />\r\n                    <p>\r\n                        The bases that are supported are binary, octal, decimal, and hexadecimal.\r\n                    </p>\r\n                    <br />\r\n                    <p>\r\n                        A number can be entered into any of the number bases and the others will change automatically.\r\n                    </p>\r\n                    <br />\r\n                    <p>\r\n                        By clicking on the Clear all button will clear all the values in input fields .\r\n                   </p>\r\n                    <br />\r\n                </Card>\r\n                <br />\r\n                <Card elevation={1} className=\"box\">\r\n                    <h1 className=\"title is-5\"> The Radix converter</h1>\r\n                    <p>\r\n                        The radix converter feature used to convert the number from one radix (from 2 to 36) to another radix number.\r\n                    </p>\r\n                    <br></br>\r\n                    <p>\r\n                        Enter the base radix of a number and the input number\r\n                    </p><br />\r\n                    <p>Then ,click convert to view the converted number</p>\r\n                    <br />\r\n                </Card>\r\n                <br />\r\n            </Container>\r\n        </div >\r\n    );\r\n}\r\n"],"sourceRoot":""}