{"version":3,"sources":["Components/SubNavBar.js","Pages/Text/apps/Sortlist.js"],"names":["useStyle","makeStyles","theme","link","color","cursor","textDecoration","hr","height","backgroundColor","margin","SubNavBar","props","classes","className","data-v-23847e07","style","padding","separator","fontSize","aria-label","links","map","i","to","url","urlName","pageTitle","component","txtTitle","marginTop","useStyles","root","flexGrow","overflow","divcalc","borderRadius","formelems","row","imgcenter","marginLeft","backdrop","zIndex","drawer","Sortlist","React","useState","resulttext","originalText","isNaturalSort","isCasesensitive","isAlphabetOrder","state","setState","onChangeisNaturalSort","e","onChangeisCasesensitive","onChangeisAlphabetOrder","snakOpen","setSnakOpen","snakMessage","setSnakMessage","onInputChange","target","id","value","backDropopen","SetBackDropopen","open","msg","handleClose","name","content","maxWidth","data-v-14591542","elevation","variant","resize","minWidth","minHeight","onChange","onClick","startIcon","arrOriginalArray","split","sort","a","b","chunkify","t","j","tz","x","y","n","charAt","charCodeAt","m","aa","bb","c","Number","d","length","toLowerCase","reverse","toString","replaceAll","setTimeout","div","resultDiv","document","getElementsByClassName","window","scroll","obj","currenttop","offsetParent","offsetTop","findPosition","Machine","copyInput","getElementById","select","setSelectionRange","execCommand","strFile","blob","Blob","type","fileSave"],"mappings":"uGAAA,qGAMMA,EAAWC,aAAW,SAACC,GAAD,MAAY,CACpCC,KAAM,CACFC,MAAO,UACPC,OAAQ,UACR,UAAW,CACPC,eAAgB,cAGxBC,GAAI,CACAC,OAAQ,MACRC,gBAAiB,UACjBC,OAAQ,oBAID,SAASC,EAAUC,GAC9B,IAAMC,EAAUb,IAChB,OACI,0BAASc,UAAU,OAAOC,mBAAA,EAA1B,UACI,qBAAKC,MAAO,CAAEC,QAAS,2BAAvB,SACI,sBAAKH,UAAU,YAAf,UACI,oBAAIE,MAAO,CAAEN,OAAQ,OAASI,UAAU,6CAAxC,SACI,eAAC,IAAD,CAAaA,UAAU,6CAA6CI,UAAW,cAAC,IAAD,CAAkBC,SAAS,UAAYC,aAAW,aAAjI,UAEQR,EAAMS,MAAQT,EAAMS,MAAMC,KAAI,SAACnB,EAAMoB,GACjC,OAAO,cAAC,IAAD,CAAcT,UAAWD,EAAQV,KAAMqB,GAAIrB,EAAKsB,IAAhD,SAAsDtB,EAAKuB,SAAhDH,MACjB,6BAGLX,EAAMe,UAAY,cAAC,IAAD,CAAYC,UAAU,KAAKd,UAAU,GAArC,SAAyCF,EAAMe,YAC3D,kCAIjBf,EAAMiB,SAAW,oBAAIb,MAAO,CAAEc,UAAW,QAAxB,SACblB,EAAMiB,WAAiB,kCAGpC,oBAAIf,UAAWD,EAAQN,U,kSC/B7BwB,EAAY9B,aAAW,SAACC,GAAD,MAAY,CACrC8B,KAAM,CACFC,SAAU,EACVC,SAAU,UAEdC,QAAS,CACLC,aAAc,OACdnB,QAAS,MACTb,MAAO,WAEXiC,UAAW,CACP,QAAS,CACL3B,OAAQ,sBAGhB4B,IAAK,CACD5B,OAAQ,QAEZ6B,UAAW,CACPC,WAAY,QAEhBC,SAAU,CACNC,OAAQxC,EAAMwC,OAAOC,OAAS,EAC9BvC,MAAO,YAIA,SAASwC,IACpB,MAA0BC,IAAMC,SAAS,CACrCC,WAAY,GACZC,aAAc,GACdC,eAAe,EACfC,iBAAiB,EACjBC,iBAAiB,IALrB,mBAAOC,EAAP,KAAcC,EAAd,KAQMC,EAAwB,SAACC,GAC3BF,EAAS,2BACFD,GADC,IAEJH,eAAgBG,EAAMH,kBAIxBO,EAA0B,SAACD,GAC7BF,EAAS,2BACFD,GADC,IAEJF,iBAAkBE,EAAMF,oBAI1BO,EAA0B,SAACF,GAC7BF,EAAS,2BACFD,GADC,IAEJD,iBAAkBC,EAAMD,oBAWhC,EAAgCN,IAAMC,SAAS,MAA/C,mBAAOY,EAAP,KAAiBC,EAAjB,KACA,EAAsCd,IAAMC,SAAS,MAArD,mBAAOc,EAAP,KAAoBC,EAApB,KAeA,IAuHMC,EAAgB,SAACP,GACnBF,EAAS,2BACFD,GADC,kBACOG,EAAEQ,OAAOC,GAAKT,EAAEQ,OAAOE,UAIpCpD,EAAUkB,IAOhB,EAAwCc,IAAMC,UAAS,GAAvD,mBAAOoB,EAAP,KAAqBC,EAArB,KAEA,OACI,sBAAKrD,UAAWD,EAAQmB,KAAxB,UACI,cAAC,IAAD,CAAUlB,UAAWD,EAAQ4B,SAAU2B,KAAMF,EAA7C,SACI,cAAC,IAAD,CAAkB9D,MAAM,cAG5B,cAAC,IAAD,CACIgE,KAAMV,EACNW,IAAKT,EACLU,YAhBQ,SAACf,GACjBI,EAAY,MACZE,EAAe,SAgBX,eAAC,IAAD,WACI,gEACA,sBAAMU,KAAK,WAAWC,QAAQ,mFAC9B,sBAAMD,KAAK,cAAcC,QAAQ,+JAErC,eAAC,IAAD,CAAWC,SAAS,KAApB,UACI,cAAC,IAAD,CACI9C,UAAU,YACVN,MAAO,CAAC,CACJI,IAAK,eACLC,QAAS,qBAGjB,yBAASZ,UAAU,OAAOC,mBAAA,EAA1B,SACI,qBAAKC,MAAO,CAAEC,QAAS,eAAvB,SACI,sBAAKH,UAAU,YAAf,UACI,oBAAIA,UAAU,uDAAd,8BAEA,mBAAGA,UAAU,kBAAb,4KAKZ,sBAAKA,UAAU,YAAY4D,mBAAA,EAA3B,UACI,sBAAK5D,UAAU,UAAU4D,mBAAA,EAAzB,UACI,qBAAK5D,UAAU,cAAc4D,mBAAA,EAA7B,SACI,eAAC,IAAD,CAAMC,UAAW,EAAG7D,UAAU,MAAM4D,mBAAA,EAApC,UACI,sBAAK5D,UAAU,UAAU4D,mBAAA,EAAzB,UACI,cAAC,IAAD,CAAYE,QAAQ,KAAK9D,UAAW,cAApC,2BAC8B,uBAC9B,+BAAM,iEAAiD,uBAAM,uBAC7D,0BAAUA,UAAU,QAChBkD,GAAG,eACHhD,MAAO,CACH6D,OAAQ,OACRC,SAAU,QACVC,UAAW,SACZd,MAAOb,EAAMJ,aAChBgC,SAAUlB,IAEd,0BAEJ,cAAC,IAAD,CAAQc,QAAQ,YAAY5D,MAAO,CAAEN,OAAQ,OAASI,UAAU,iBAC5DmE,QAnNX,WACjB5B,EAAS,2BACFD,GADC,IAEJJ,aAAc,OA+MM,mBAGA,cAAC,IAAD,CAAQ4B,QAAQ,YAAY5D,MAAO,CAAEN,OAAQ,OAASI,UAAU,iBAC5DoE,UAAW,cAAC,IAAD,IACXD,QAhMP,WAGrB,IACIE,EADa/B,EAAMJ,aACWoC,MAAM,MA+BpChC,EAAMH,cACNkC,EAAiBE,MA9BN,SAACC,EAAGC,GACf,SAASC,EAASC,GAGd,IAFA,IAAmClE,EAAGmE,EAAlCC,EAAK,GAAIC,EAAI,EAAGC,GAAK,EAAGC,EAAI,EAEzBvE,GAAKmE,EAAID,EAAEM,OAAOH,MAAMI,WAAW,IAC1C,CACI,IAAIC,EAAW,KAAN1E,GAAaA,GAAK,IAAMA,GAAK,GAClC0E,IAAMH,IACNH,IAAKE,GAAK,GACVC,EAAIG,GAERN,EAAGE,IAAMH,EAEb,OAAOC,EAMX,IAHA,IAAIO,EAAKV,EAASF,GACda,EAAKX,EAASD,GAETK,EAAI,EAAGM,EAAGN,IAAMO,EAAGP,GAAIA,IAC5B,GAAIM,EAAGN,KAAOO,EAAGP,GAAI,CACjB,IAAIQ,EAAIC,OAAOH,EAAGN,IAAKU,EAAID,OAAOF,EAAGP,IACrC,OAAIQ,IAAMF,EAAGN,IAAMU,IAAMH,EAAGP,GACjBQ,EAAIE,EACAJ,EAAGN,GAAKO,EAAGP,GAAM,GAAK,EAG7C,OAAOM,EAAGK,OAASJ,EAAGI,UAKtBpB,EAAiBE,OAiChBjC,EAAMF,iBACPiC,EAAiBE,MA/BO,SAACC,EAAGC,GAC5B,SAASC,EAASC,GAGd,IAFA,IAAmClE,EAAGmE,EAAlCC,EAAK,GAAIC,EAAI,EAAGC,GAAK,EAAGC,EAAI,EAEzBvE,GAAKmE,EAAID,EAAEM,OAAOH,MAAMI,WAAW,IAAI,CAE1C,IAAIC,EAAW,KAAN1E,GAAaA,GAAK,IAAMA,GAAK,GAClC0E,IAAMH,IACNH,IAAKE,GAAK,GACVC,EAAIG,GAERN,EAAGE,IAAMH,EAEb,OAAOC,EAMX,IAHA,IAAIO,EAAKV,EAASF,EAAEkB,eAChBL,EAAKX,EAASD,EAAEiB,eAEXZ,EAAI,EAAGM,EAAGN,IAAMO,EAAGP,GAAIA,IAC5B,GAAIM,EAAGN,KAAOO,EAAGP,GAAI,CACjB,IAAIQ,EAAIC,OAAOH,EAAGN,IAAKU,EAAID,OAAOF,EAAGP,IACrC,OAAIQ,IAAMF,EAAGN,IAAMU,IAAMH,EAAGP,GACjBQ,EAAIE,EACAJ,EAAGN,GAAKO,EAAGP,GAAM,GAAK,EAG7C,OAAOM,EAAGK,OAASJ,EAAGI,UAOtBnD,EAAMD,iBACNgC,EAAiBsB,UAIrBpD,EAAS,2BACFD,GADC,IAEJL,WAAYoC,EAAiBuB,WAAWC,WAAW,IAAK,SAG5DC,YAAW,WACPzC,GAAgB,KACjB,KAEH,IAtGe0C,EAsGXC,EAAYC,SAASC,uBAAuB,aAAa,GAtG9CH,EAuGLC,EAtGVG,OAAOC,OAAO,EAGlB,SAAsBC,GAClB,IAAIC,EAAa,EACjB,GAAID,EAAIE,aAAc,CAClB,GACID,GAAcD,EAAIG,gBACZH,EAAMA,EAAIE,cACpB,MAAO,CAACD,IARRG,CAAaV,IAsGjBC,EAAUhG,UAAY,qBACtB8F,YAAW,WACPE,EAAUhG,UAAY,cACvB,MAgGqB,wBAMR,qBAAKA,UAAU,cAAc4D,mBAAA,EAA7B,SACI,cAAC,IAAD,CAAMC,UAAW,EAAG7D,UAAU,OAAO4D,mBAAA,EAArC,SACI,sBAAK5D,UAAU,UAAU4D,mBAAA,EAAzB,UACI,uBACA,cAAC,IAAD,CAAYE,QAAQ,KAAK9D,UAAW,cAApC,qBAEa,uBACb,+BAAM,yDAAyC,uBAC/C,eAAC,IAAD,CAAaE,MAAO,CAAEN,OAAQ,YAA9B,UACI,cAAC,IAAD,CAAQU,aAAW,eACfN,UAAWsC,EAAMH,cAAgB,oBAAsB,SACvDgC,QAAS3B,EAFb,0BAMA,cAAC,IAAD,CAAQlC,aAAW,GAAGoG,SAAO,EAACnC,MAAI,EAC9BvE,UAAYsC,EAAMH,cAAsC,SAAtB,oBAClCgC,QAAS3B,EAFb,6BAMU,uBACd,+BAAM,uDAAuC,uBAC7C,eAAC,IAAD,CAAatC,MAAO,CAAEN,OAAQ,YAA9B,UACI,cAAC,IAAD,CAAQU,aAAW,MACfN,UAAYsC,EAAMD,gBAAwC,SAAtB,oBACpC8B,QAASxB,EAFb,mBAMA,cAAC,IAAD,CAAQrC,aAAW,MACfN,UAAWsC,EAAMD,gBAAkB,oBAAsB,SACzD8B,QAASxB,EAFb,sBAMU,uBACd,+BAAM,wDAAwC,uBAC9C,eAAC,IAAD,CAAazC,MAAO,CAAEN,OAAQ,YAA9B,UACI,cAAC,IAAD,CAAQU,aAAW,iBACfN,UAAWsC,EAAMF,gBAAkB,oBAAsB,SACzD+B,QAASzB,EAFb,4BAMA,cAAC,IAAD,CAAQpC,aAAW,mBACfN,UAAYsC,EAAMF,gBAAwC,SAAtB,oBACpC+B,QAASzB,EAFb,iCAMU,uBACd,cAAC,IAAD,CAAYoB,QAAQ,KAAK9D,UAAW,cAApC,yBAEa,uBACb,qBAAKA,UAAW,YAAhB,SACI,0BAAUA,UAAU,QAChBkD,GAAG,aACHhD,MAAO,CACH6D,OAAQ,OACRC,SAAU,QACVC,UAAW,SACZd,MAAOb,EAAML,WAChBiC,SAAUlB,MAGlB,uBACA,cAAC,IAAD,CAAQc,QAAQ,YAAY5D,MAAO,CAAEN,OAAQ,OAASI,UAAW,iBAC7DoE,UAAW,cAAC,IAAD,IACXD,QAxKjB,SAAC1B,GAGhB,IAAIkE,EAAYV,SAASW,eAAe,cAExCD,EAAUE,SACVF,EAAUG,kBAAkB,EAAG,OAG/Bb,SAASc,YAAY,SA6JO,kBAIA,cAAC,IAAD,CAAQjD,QAAQ,YAAY5D,MAAO,CAAEN,OAAQ,OAASI,UAAU,iBAC5DoE,UAAW,cAAC,IAAD,IACXD,QAhKZ,WAEpB,IAAI6C,EAAU1E,EAAML,WAEhBgF,EAAO,IAAIC,KAAK,CAACF,GAAU,CAAEG,KAAM,SAEvCC,SAAgBH,EAAM,qBAwJM,sBAGkB,iCAKlC","file":"static/js/87.8598fc3a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumbs, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    link: {\r\n        color: '#3f51b5',\r\n        cursor: 'pointer',\r\n        '& hover': {\r\n            textDecoration: 'underline'\r\n        }\r\n    },\r\n    hr: {\r\n        height: '1px',\r\n        backgroundColor: '#c5c5c5',\r\n        margin: '1.5rem 0 0 0',\r\n    }\r\n}));\r\n\r\nexport default function SubNavBar(props) {\r\n    const classes = useStyle();\r\n    return (\r\n        <section className=\"hero\" data-v-23847e07>\r\n            <div style={{ padding: '2rem 0.5rem 0rem 0.5rem' }}>\r\n                <div className=\"container\">\r\n                    <h1 style={{ margin: '0px' }} className=\"subtitle is-uppercase has-text-weight-bold\">\r\n                        <Breadcrumbs className=\"subtitle is-uppercase has-text-weight-bold\" separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n                            {\r\n                                props.links ? props.links.map((link, i) => {\r\n                                    return <Link key={i} className={classes.link} to={link.url}>{link.urlName}</Link>\r\n                                }) : <></>\r\n                            }\r\n                            {\r\n                                props.pageTitle ? <Typography component=\"h1\" className=\"\">{props.pageTitle}</Typography>\r\n                                    : <></>\r\n                            }\r\n                        </Breadcrumbs>\r\n                    </h1>\r\n                    {props.txtTitle ? <h1 style={{ marginTop: '1rem' }} >\r\n                        {props.txtTitle}</h1> : <></>}\r\n                </div>\r\n            </div>\r\n            <hr className={classes.hr} />\r\n        </section >\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Button, Typography, ButtonGroup,\r\n    Backdrop, CircularProgress, Container, Card\r\n} from '@material-ui/core';\r\nimport SettingIcon from '@material-ui/icons/Settings';\r\nimport FontDownloadIcon from '@material-ui/icons/GetApp';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport Helmet from 'react-helmet';\r\nimport CustomSnakbar from '../../../Components/CustomSnakbar';\r\nimport * as fileSave from \"file-saver\";\r\nimport SubNavBar from '../../../Components/SubNavBar';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        overflow: 'hidden'\r\n    },\r\n    divcalc: {\r\n        borderRadius: '12px',\r\n        padding: '1em',\r\n        color: '#314259'\r\n    },\r\n    formelems: {\r\n        '& > *': {\r\n            margin: '10px 0px 10px 0px',\r\n        },\r\n    },\r\n    row: {\r\n        margin: '10px'\r\n    },\r\n    imgcenter: {\r\n        marginLeft: '55px',\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nexport default function Sortlist() {\r\n    const [state, setState] = React.useState({\r\n        resulttext: '',\r\n        originalText: '',\r\n        isNaturalSort: true,\r\n        isCasesensitive: false,\r\n        isAlphabetOrder: false,\r\n    });\r\n\r\n    const onChangeisNaturalSort = (e) => {\r\n        setState({\r\n            ...state,\r\n            isNaturalSort: !state.isNaturalSort,\r\n        });\r\n    };\r\n\r\n    const onChangeisCasesensitive = (e) => {\r\n        setState({\r\n            ...state,\r\n            isCasesensitive: !state.isCasesensitive,\r\n        });\r\n    };\r\n\r\n    const onChangeisAlphabetOrder = (e) => {\r\n        setState({\r\n            ...state,\r\n            isAlphabetOrder: !state.isAlphabetOrder,\r\n        });\r\n    };\r\n\r\n    const onClearClick = () => {\r\n        setState({\r\n            ...state,\r\n            originalText: '',\r\n        })\r\n    }\r\n\r\n    const [snakOpen, setSnakOpen] = React.useState(null);\r\n    const [snakMessage, setSnakMessage] = React.useState(null);\r\n\r\n    function scrolldiv(div) {\r\n        window.scroll(0,\r\n            findPosition(div));\r\n    }\r\n    function findPosition(obj) {\r\n        var currenttop = 0;\r\n        if (obj.offsetParent) {\r\n            do {\r\n                currenttop += obj.offsetTop;\r\n            } while ((obj = obj.offsetParent));\r\n            return [currenttop];\r\n        }\r\n    }\r\n    const onClickCalculate = () => {\r\n        // SetBackDropopen(true);\r\n\r\n        let resulttext = state.originalText;\r\n        let arrOriginalArray = resulttext.split('\\n');\r\n\r\n        const sorter = (a, b) => {\r\n            function chunkify(t) {\r\n                var tz = [], x = 0, y = -1, n = 0, i, j;\r\n                // eslint-disable-next-line\r\n                while (i = (j = t.charAt(x++)).charCodeAt(0)) // eslint-disable-next-line no-cond-assign\r\n                {\r\n                    var m = (i === 46 || (i >= 48 && i <= 57));\r\n                    if (m !== n) {\r\n                        tz[++y] = \"\";\r\n                        n = m;\r\n                    }\r\n                    tz[y] += j;\r\n                }\r\n                return tz;\r\n            }\r\n\r\n            var aa = chunkify(a);\r\n            var bb = chunkify(b);\r\n\r\n            for (let x = 0; aa[x] && bb[x]; x++) {\r\n                if (aa[x] !== bb[x]) {\r\n                    var c = Number(aa[x]), d = Number(bb[x]);\r\n                    if (c === aa[x] && d === bb[x]) {\r\n                        return c - d;\r\n                    } else return (aa[x] > bb[x]) ? 1 : -1;\r\n                }\r\n            }\r\n            return aa.length - bb.length;\r\n        }\r\n        if (state.isNaturalSort) {\r\n            arrOriginalArray.sort(sorter);\r\n        } else {\r\n            arrOriginalArray.sort();\r\n        }\r\n\r\n        const sorterCaseInsestive = (a, b) => {\r\n            function chunkify(t) {\r\n                var tz = [], x = 0, y = -1, n = 0, i, j;\r\n                // eslint-disable-next-line\r\n                while (i = (j = t.charAt(x++)).charCodeAt(0)) {\r\n                    // eslint-disable-next-line\r\n                    var m = (i === 46 || (i >= 48 && i <= 57));\r\n                    if (m !== n) {\r\n                        tz[++y] = \"\";\r\n                        n = m;\r\n                    }\r\n                    tz[y] += j;\r\n                }\r\n                return tz;\r\n            }\r\n\r\n            var aa = chunkify(a.toLowerCase());\r\n            var bb = chunkify(b.toLowerCase());\r\n\r\n            for (let x = 0; aa[x] && bb[x]; x++) {\r\n                if (aa[x] !== bb[x]) {\r\n                    var c = Number(aa[x]), d = Number(bb[x]);\r\n                    if (c === aa[x] && d === bb[x]) {\r\n                        return c - d;\r\n                    } else return (aa[x] > bb[x]) ? 1 : -1;\r\n                }\r\n            }\r\n            return aa.length - bb.length;\r\n        }\r\n\r\n        if (!state.isCasesensitive) {\r\n            arrOriginalArray.sort(sorterCaseInsestive);\r\n        }\r\n\r\n        if (state.isAlphabetOrder) {\r\n            arrOriginalArray.reverse();\r\n        }\r\n\r\n\r\n        setState({\r\n            ...state,\r\n            resulttext: arrOriginalArray.toString().replaceAll(',', '\\n'),\r\n        })\r\n\r\n        setTimeout(() => {\r\n            SetBackDropopen(false);\r\n        }, 250);\r\n        //blink the result\r\n        let resultDiv = document.getElementsByClassName('resultsec')[0];\r\n        scrolldiv(resultDiv);\r\n        resultDiv.className = 'resultsec blink_me'\r\n        setTimeout(() => {\r\n            resultDiv.className = 'resultsec';\r\n        }, 1000);\r\n    }\r\n\r\n    const fncopytext = (e) => {\r\n        /* Get the text field */\r\n\r\n        let copyInput = document.getElementById('resulttext');\r\n        /* Select the text field */\r\n        copyInput.select();\r\n        copyInput.setSelectionRange(0, 99999); /* For mobile devices */\r\n\r\n        /* Copy the text inside the text field */\r\n        document.execCommand(\"copy\");\r\n    }\r\n\r\n    const onClickDownload = () => {\r\n\r\n        let strFile = state.resulttext;\r\n\r\n        let blob = new Blob([strFile], { type: 'text' });\r\n\r\n        fileSave.saveAs(blob, 'sorted_lists.txt');\r\n\r\n    }\r\n\r\n    const onInputChange = (e) => {\r\n        setState({\r\n            ...state, [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleClose = (e) => {\r\n        setSnakOpen(null);\r\n        setSnakMessage(null);\r\n    };\r\n\r\n    const [backDropopen, SetBackDropopen] = React.useState(false);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Backdrop className={classes.backdrop} open={backDropopen}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n\r\n            <CustomSnakbar\r\n                open={snakOpen}\r\n                msg={snakMessage}\r\n                handleClose={handleClose}\r\n            />\r\n            <Helmet>\r\n                <title>Sort list online | mathcalc</title>\r\n                <meta name=\"keywords\" content=\"alphabetical order, sort lists, case sensitive, case insensitive, natural sort\" />\r\n                <meta name=\"description\" content=\"Sort a list in (reverse) alphabetical order. You can use the natural sort algorithm (human friendly) or the classical sort algorithm (machine friendly)\" />\r\n            </Helmet>\r\n            <Container maxWidth=\"xl\">\r\n                <SubNavBar\r\n                    pageTitle=\"Sort List\"\r\n                    links={[{\r\n                        url: \"/text-lists/\",\r\n                        urlName: \"Text and Lists\"\r\n                    }]}\r\n                />\r\n                <section className=\"hero\" data-v-23847e07>\r\n                    <div style={{ padding: '2rem 0.5rem' }}>\r\n                        <div className=\"container\">\r\n                            <h1 className=\"subtitle is-spaced is-uppercase has-text-weight-bold\">\r\n                                Sort LIST ONLINE</h1>\r\n                            <p className=\"  has-text-grey\">\r\n                                Sort a list in (reverse) alphabetical order. You can use the natural sort algorithm (human friendly) or the classical sort algorithm (machine friendly)</p>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <div className=\"container\" data-v-14591542>\r\n                    <div className=\"columns\" data-v-14591542>\r\n                        <div className=\"column is-6\" data-v-14591542>\r\n                            <Card elevation={1} className=\"box\" data-v-14591542>\r\n                                <div className=\"content\" data-v-14591542>\r\n                                    <Typography variant=\"h6\" className={'text-option'}>\r\n                                        Original List</Typography><br />\r\n                                    <span><strong>The list you want to sort</strong></span><br /><br />\r\n                                    <textarea className=\"input\"\r\n                                        id=\"originalText\"\r\n                                        style={{\r\n                                            resize: 'none',\r\n                                            minWidth: '255px',\r\n                                            minHeight: '220px'\r\n                                        }} value={state.originalText}\r\n                                        onChange={onInputChange}\r\n                                    ></textarea>\r\n                                    <br />\r\n                                </div>\r\n                                <Button variant=\"contained\" style={{ margin: '5px' }} className=\"button is-info\"\r\n                                    onClick={onClearClick}\r\n                                >Clear</Button>\r\n                                <Button variant=\"contained\" style={{ margin: '5px' }} className=\"button is-dark\"\r\n                                    startIcon={<SettingIcon />}\r\n                                    onClick={onClickCalculate}\r\n                                >Sort!</Button>\r\n                            </Card>\r\n                        </div>\r\n                        <div className=\"column is-6\" data-v-14591542>\r\n                            <Card elevation={1} className=\"box \" data-v-14591542>\r\n                                <div className=\"content\" data-v-14591542>\r\n                                    <br />\r\n                                    <Typography variant=\"h6\" className={'text-option'}>\r\n                                        Options\r\n                                    </Typography><br />\r\n                                    <span><strong>Sorting algorithm</strong></span><br />\r\n                                    <ButtonGroup style={{ margin: '10px 0px' }}>\r\n                                        <Button aria-label=\"Natural sort\"\r\n                                            className={state.isNaturalSort ? \"button is-success\" : 'button'}\r\n                                            onClick={onChangeisNaturalSort}\r\n                                        >\r\n                                            Natural sort\r\n                                        </Button>\r\n                                        <Button aria-label=\"\" Machine sort\r\n                                            className={!state.isNaturalSort ? \"button is-success\" : 'button'}\r\n                                            onClick={onChangeisNaturalSort}\r\n                                        >\r\n                                            Machine sort\r\n                                        </Button>\r\n                                    </ButtonGroup><br />\r\n                                    <span><strong>Reverse order ?</strong></span><br />\r\n                                    <ButtonGroup style={{ margin: '10px 0px' }}>\r\n                                        <Button aria-label=\"A-Z\"\r\n                                            className={!state.isAlphabetOrder ? \"button is-success\" : 'button'}\r\n                                            onClick={onChangeisAlphabetOrder}\r\n                                        >\r\n                                            A - Z\r\n                                        </Button>\r\n                                        <Button aria-label=\"Z-A\"\r\n                                            className={state.isAlphabetOrder ? \"button is-success\" : 'button'}\r\n                                            onClick={onChangeisAlphabetOrder}\r\n                                        >\r\n                                            Z - A\r\n                                        </Button>\r\n                                    </ButtonGroup><br />\r\n                                    <span><strong>Case sensitivity</strong></span><br />\r\n                                    <ButtonGroup style={{ margin: '10px 0px' }}>\r\n                                        <Button aria-label=\"Case-sensitive\"\r\n                                            className={state.isCasesensitive ? \"button is-success\" : 'button'}\r\n                                            onClick={onChangeisCasesensitive}\r\n                                        >\r\n                                            Case-sensitive\r\n                                        </Button>\r\n                                        <Button aria-label=\"Case-insensitive\"\r\n                                            className={!state.isCasesensitive ? \"button is-success\" : 'button'}\r\n                                            onClick={onChangeisCasesensitive}\r\n                                        >\r\n                                            Case-insensitive\r\n                                        </Button>\r\n                                    </ButtonGroup><br />\r\n                                    <Typography variant=\"h6\" className={'text-option'}>\r\n                                        Sorted list\r\n                                    </Typography><br />\r\n                                    <div className={'resultsec'}>\r\n                                        <textarea className=\"input\"\r\n                                            id=\"resulttext\"\r\n                                            style={{\r\n                                                resize: 'none',\r\n                                                minWidth: '255px',\r\n                                                minHeight: '220px'\r\n                                            }} value={state.resulttext}\r\n                                            onChange={onInputChange}\r\n                                        ></textarea>\r\n                                    </div>\r\n                                    <br />\r\n                                    <Button variant=\"contained\" style={{ margin: '5px' }} className={\"button is-info\"}\r\n                                        startIcon={<FileCopyIcon />}\r\n                                        onClick={fncopytext}\r\n                                    >Copy</Button>\r\n                                    <Button variant=\"contained\" style={{ margin: '5px' }} className=\"button is-info\"\r\n                                        startIcon={<FontDownloadIcon />}\r\n                                        onClick={onClickDownload}\r\n                                    >Download</Button><br />\r\n                                </div>\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                </div>\r\n            </Container>\r\n\r\n        </div >\r\n    );\r\n}"],"sourceRoot":""}