{"version":3,"sources":["../node_modules/@material-ui/icons/NavigateNext.js","Components/SubNavBar.js","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","Pages/Tools/Baseimagegen.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useStyle","makeStyles","theme","link","color","cursor","textDecoration","hr","height","backgroundColor","margin","SubNavBar","props","classes","className","data-v-23847e07","style","padding","separator","fontSize","aria-label","links","map","i","to","url","urlName","pageTitle","component","txtTitle","marginTop","createSvgIcon","withStyles","root","display","marginLeft","spacing","marginRight","palette","grey","borderRadius","boxShadow","shadows","emphasize","icon","width","name","other","_objectWithoutProperties","ButtonBase","_extends","focusRipple","MoreHorizIcon","Breadcrumbs","ref","children","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","index","li","key","concat","Typography","clsx","ol","items","reduce","acc","current","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","event","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","flexWrap","alignItems","listStyle","userSelect","Baseimagegen","useState","baseString","casetype","state","setState","file","setFile","open","setOpen","handleClose","maxWidth","msg","content","http-equiv","data-v-14591542","container","item","sm","md","lg","elevation","id","type","onChange","e","target","files","accept","variant","reader","FileReader","onloadend","div","result","document","getElementById","split","toString","window","scroll","obj","currenttop","offsetParent","offsetTop","findPosition","readAsDataURL","aria-hidden","data-prefix","data-icon","role","xmlns","viewBox","fill","title","border","labelId","val","resText","outputFormat","isTextInput","onchangeType","rows","maxLength","resize","minHeight","valueID","copyInput","select","setSelectionRange","execCommand","setTimeout","fncopytext"],"mappings":"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","file":"static/js/62.03cbce0c.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumbs, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    link: {\r\n        color: '#3f51b5',\r\n        cursor: 'pointer',\r\n        '& hover': {\r\n            textDecoration: 'underline'\r\n        }\r\n    },\r\n    hr: {\r\n        height: '1px',\r\n        backgroundColor: '#c5c5c5',\r\n        margin: '1.5rem 0 0 0',\r\n    }\r\n}));\r\n\r\nexport default function SubNavBar(props) {\r\n    const classes = useStyle();\r\n    return (\r\n        <section className=\"hero\" data-v-23847e07>\r\n            <div style={{ padding: '2rem 0.5rem 0rem 0.5rem' }}>\r\n                <div className=\"container\">\r\n                    <h1 style={{ margin: '0px' }} className=\"subtitle is-uppercase has-text-weight-bold\">\r\n                        <Breadcrumbs className=\"subtitle is-uppercase has-text-weight-bold\" separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n                            {\r\n                                props.links ? props.links.map((link, i) => {\r\n                                    return <Link key={i} className={classes.link} to={link.url}>{link.urlName}</Link>\r\n                                }) : <></>\r\n                            }\r\n                            {\r\n                                props.pageTitle ? <Typography component=\"h1\" className=\"\">{props.pageTitle}</Typography>\r\n                                    : <></>\r\n                            }\r\n                        </Breadcrumbs>\r\n                    </h1>\r\n                    {props.txtTitle ? <h1 style={{ marginTop: '1rem' }} >\r\n                        {props.txtTitle}</h1> : <></>}\r\n                </div>\r\n            </div>\r\n            <hr className={classes.hr} />\r\n        </section >\r\n    )\r\n}\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","import React, { useState } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport SubNavBar from '../../Components/SubNavBar';\r\nimport CustomSnakbar from '../../Components/CustomSnakbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Container, Typography, Grid, Button, Tooltip, Select, MenuItem } from '@material-ui/core';\r\nfunction scrolldiv(div) {\r\n    window.scroll(0,\r\n        findPosition(div));\r\n}\r\nfunction findPosition(obj) {\r\n    var currenttop = 0;\r\n    if (obj.offsetParent) {\r\n        do {\r\n            currenttop += obj.offsetTop;\r\n        } while ((obj = obj.offsetParent));\r\n        return [currenttop];\r\n    }\r\n}\r\n\r\nexport default function Baseimagegen(props) {\r\n\r\n    const [state, setState] = useState({\r\n        baseString: \"\",\r\n        casetype: '1',\r\n    })\r\n\r\n    const [file, setFile] = useState();\r\n    const onCHangeFile = (e) => {\r\n        if (e.target.files.length > 0) {\r\n            setFile(e.target.files[0]);\r\n        }\r\n    }\r\n    const convertImgtoBaseString = (e) => {\r\n        try {\r\n            if (file) {\r\n                let reader = new FileReader();\r\n                reader.onloadend = function (e) {\r\n                    if (e.target.result.length < 524287) {\r\n                        setState({\r\n                            ...state,\r\n                            baseString: e.target.result\r\n                        });\r\n                        document.getElementById(\"txtBaseString\").value = e.target.result.split(\",\")[1].toString();\r\n                        scrolldiv(document.getElementById(\"txtBaseString\"));\r\n                    }\r\n                }\r\n                reader.readAsDataURL(file);\r\n            }\r\n        } catch (e) { }\r\n    }\r\n    const onchangeType = (val) => {\r\n        setState({\r\n            ...state,\r\n            casetype: val\r\n        })\r\n        let resText = \"\";\r\n        let baseString = state.baseString;\r\n        let outputFormat = val\r\n        if (outputFormat === \"1\") {\r\n            resText = baseString.split(\",\")[1].toString();\r\n        }\r\n        else if (outputFormat === \"2\") {\r\n            resText = baseString;\r\n        }\r\n        else if (outputFormat === \"3\") {\r\n            resText = '.yourclassName { \\n background-image: url(\"';\r\n            if (state.isTextInput) {\r\n                resText += 'data:image/jpeg;base64,' + baseString.split(\",\")[1].toString();\r\n            } else {\r\n                resText += baseString;\r\n            }\r\n            resText += '\"); \\n }'\r\n        }\r\n        else if (outputFormat === \"4\") {\r\n            if (state.isTextInput) {\r\n                resText = \"<img src='data:image/jpeg;base64,\" + baseString.split(\",\")[1].toString() + \"' />\";\r\n            } else {\r\n                resText = \"<img src='\" + baseString + \"' />\";\r\n            }\r\n        }\r\n        else if (outputFormat === \"5\") {\r\n            resText = \"<xml>\\n<image>\"\r\n            if (state.isTextInput) {\r\n                resText += 'data:image/jpeg;base64,' + baseString.split(\",\")[1].toString();\r\n            } else {\r\n                resText += baseString;\r\n            }\r\n            resText += \"</image>\\n</xml>\";\r\n        }\r\n        document.getElementById(\"txtBaseString\").value = resText;\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n    const fncopytext = (valueID) => {\r\n        /* Get the text field */\r\n        let copyInput = document.getElementById(valueID);\r\n        /* Select the text field */\r\n        copyInput.select();\r\n        copyInput.setSelectionRange(0, 524289); /* For mobile devices */\r\n        /* Copy the text inside the text field */\r\n        document.execCommand(\"copy\");\r\n        setOpen(true);\r\n        setTimeout(() => {\r\n            handleClose();\r\n        }, 1000);\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\">\r\n            <CustomSnakbar\r\n                handleClose={handleClose}\r\n                msg={\"Copied !\"}\r\n                open={open}\r\n            />\r\n            <Helmet>\r\n                <title>Image to base64 string generator | Mathcalc</title>\r\n                <meta name=\"keywords\" content=\"Image to base64, png to base 64 string, jpg, jpeg to base64 string online, base64 generator\" />\r\n                <meta name=\"description\" content=\"Mathcal- this tool used to convert any kind of image to base64 string and html image code \" />\r\n                <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"></meta>\r\n            </Helmet>\r\n            <div className=\"container\" style={{ padding: '1rem' }} data-v-14591542>\r\n                <Grid container>\r\n                    <Grid item sm={12} md={8} lg={8}>\r\n                        <SubNavBar\r\n                            pageTitle=\"Image to base64 string generator\"\r\n                            links={[{\r\n                                url: \"/tools/\",\r\n                                urlName: \"Tools\"\r\n                            }]}\r\n                            txtTitle=\"Convert all kind of image to base64 string and html Image element\"\r\n                        />\r\n                        <br />\r\n                        <Card elevation={1} className=\"box\" data-v-14591542>\r\n                            <h3 className=\"title is-5\" data-v-14591542>Image to base64 string generator</h3>\r\n                            <div className=\"file-dropzone\" style={{\r\n                                backgroundColor: 'rgb(245 0 87 / 29%)',\r\n                                color: 'white',\r\n                                cursor: 'pointer'\r\n                            }} data-v-14591542>\r\n                                <input id=\"image\" type=\"file\" data-v-14591542 onChange={onCHangeFile}\r\n                                    accept=\"image/gif, image/jpeg, image/png\"\r\n                                />\r\n                                <p className=\"has-text-centered has-text-3 is-vcentered\" data-v-14591542>\r\n                                    <span data-v-14591542>\r\n                                        <i className=\"fa fa-upload\" data-v-14591542></i>\r\n                                    </span>\r\n                                    <span className=\"is-3\" data-v-14591542>Drag and drop your file here or click here to upload.</span>\r\n                                </p>\r\n                            </div>\r\n                            <br data-v-14591542 />\r\n                            <div className=\"field is-grouped\" data-v-14591542>\r\n                                <p className=\"control\" data-v-14591542>\r\n                                    <Button variant=\"contained\" id=\"download-package\" target=\"_blank\" color=\"primary\" className=\"is-rounded\"\r\n                                        data-v-14591542\r\n                                        onClick={convertImgtoBaseString}\r\n                                    >\r\n                                        <span className=\"icon\" data-v-14591542>\r\n                                            <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"download\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" className=\"svg-inline--fa fa-download fa-w-16\" data-v-14591542>\r\n                                                <path fill=\"currentColor\" d=\"M216 0h80c13.3 0 24 10.7 24 24v168h87.7c17.8 0 26.7 21.5 14.1 34.1L269.7 378.3c-7.5 7.5-19.8 7.5-27.3 0L90.1 226.1c-12.6-12.6-3.7-34.1 14.1-34.1H192V24c0-13.3 10.7-24 24-24zm296 376v112c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V376c0-13.3 10.7-24 24-24h146.7l49 49c20.1 20.1 52.5 20.1 72.6 0l49-49H488c13.3 0 24 10.7 24 24zm-124 88c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20zm64 0c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20z\" data-v-14591542></path>\r\n                                            </svg>\r\n                                        </span>\r\n                                        <span data-v-14591542>Convert</span>\r\n                                    </Button>\r\n                                    <span style={{ display: 'inline-flex', fontSize: 'x-small', padding: '14px 0px 0px 6px' }}>  {file ? file.name : ''}</span>\r\n                                </p>\r\n                            </div>\r\n                        </Card>\r\n                        <fieldset title=\"Related tools\" className=\"field field-light\"\r\n                            style={{\r\n                                padding: '1rem',\r\n                                border: '2px solid mediumpurple'\r\n                            }}>\r\n                            <legend><strong>Related tools</strong></legend>\r\n\r\n                            <Typography>\r\n                                To encode text file try this tool &nbsp;\r\n                                <Link to={'/base64-encode'} style={{ color: 'blue', textDecoration: 'underline' }}>\r\n                                    Text file encoder</Link>.\r\n                            </Typography>\r\n                        </fieldset>\r\n                        <br />\r\n                        <Card elevation={1} className=\"box\" data-v-14591542>\r\n                            <h1 className=\"title is-6\">Output Format</h1>\r\n                            <Select\r\n                                labelId=\"casetype-label\"\r\n                                id=\"casetype\"\r\n                                value={state.casetype}\r\n                                onChange={(e) => {\r\n                                    onchangeType(e.target.value)\r\n                                }}\r\n                            >   <MenuItem value=\"1\">Base64 string</MenuItem>\r\n                                <MenuItem value=\"2\">Data URL</MenuItem>\r\n                                <MenuItem value=\"3\">Image embedding in CSS</MenuItem>\r\n                                <MenuItem value=\"4\">Image embedding in HTML</MenuItem>\r\n                                <MenuItem value=\"5\">Image embedding in XML</MenuItem>\r\n                            </Select>\r\n                            <pre>\r\n                                <textarea rows={4}\r\n                                    id=\"txtBaseString\"\r\n                                    maxLength={999999999}\r\n                                    style={{ resize: 'none', minHeight: '120px' }}\r\n                                    className=\"input\"></textarea>\r\n                            </pre>\r\n                            <br />\r\n                            <Tooltip title=\"Copy\">\r\n                                <Button variant=\"contained\" color=\"secondary\"\r\n                                    onClick={\r\n                                        (e) => {\r\n                                            fncopytext('txtBaseString');\r\n                                        }\r\n                                    }\r\n                                >\r\n                                    Copy\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Card>\r\n                        <br />\r\n                    </Grid>\r\n                    <Grid item sm={false} md={4} lg={4}></Grid>\r\n                </Grid>\r\n            </div>\r\n        </Container>\r\n    )\r\n};\r\n\r\n"],"sourceRoot":""}