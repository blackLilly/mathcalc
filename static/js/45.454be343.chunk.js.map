{"version":3,"sources":["../node_modules/@material-ui/icons/NavigateNext.js","Components/SubNavBar.js","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","../node_modules/@material-ui/icons/FavoriteBorderRounded.js","Pages/General/apps/Flamescalc.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useStyle","makeStyles","theme","link","color","cursor","textDecoration","hr","height","backgroundColor","margin","SubNavBar","props","classes","className","data-v-23847e07","style","padding","separator","fontSize","aria-label","links","map","i","to","url","urlName","pageTitle","component","txtTitle","marginTop","createSvgIcon","withStyles","root","display","marginLeft","spacing","marginRight","palette","grey","borderRadius","boxShadow","shadows","emphasize","icon","width","name","other","_objectWithoutProperties","ButtonBase","_extends","focusRipple","MoreHorizIcon","Breadcrumbs","ref","children","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","index","li","key","concat","Typography","clsx","ol","items","reduce","acc","current","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","event","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","flexWrap","alignItems","listStyle","userSelect","useStyles","flexGrow","overflow","button","minWidth","background","position","breakpoints","down","backdrop","zIndex","drawer","resultDiv","textAlign","Flamescalc","useState","nameOne","nametwo","relationship","showResult","state","setState","snakOpen","setSnakOpen","snakMessage","setSnakMessage","onInputChange","e","target","id","open","msg","handleClose","charSet","content","http-equiv","maxWidth","container","direction","justify","item","lg","md","sm","raised","elevation","onChange","label","variant","fontFamily","startIcon","nameone","splitedone","split","splitedtwo","duplicate","self","indexOf","j","splice","arrFlames","countLength","relationNo","parseFloat","onCalculateClick","data-v-14591542"],"mappings":"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","file":"static/js/45.454be343.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumbs, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    link: {\r\n        color: '#3f51b5',\r\n        cursor: 'pointer',\r\n        '& hover': {\r\n            textDecoration: 'underline'\r\n        }\r\n    },\r\n    hr: {\r\n        height: '1px',\r\n        backgroundColor: '#c5c5c5',\r\n        margin: '1.5rem 0 0 0',\r\n    }\r\n}));\r\n\r\nexport default function SubNavBar(props) {\r\n    const classes = useStyle();\r\n    return (\r\n        <section className=\"hero\" data-v-23847e07>\r\n            <div style={{ padding: '2rem 0.5rem 0rem 0.5rem' }}>\r\n                <div className=\"container\">\r\n                    <h1 style={{ margin: '0px' }} className=\"subtitle is-uppercase has-text-weight-bold\">\r\n                        <Breadcrumbs className=\"subtitle is-uppercase has-text-weight-bold\" separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n                            {\r\n                                props.links ? props.links.map((link, i) => {\r\n                                    return <Link key={i} className={classes.link} to={link.url}>{link.urlName}</Link>\r\n                                }) : <></>\r\n                            }\r\n                            {\r\n                                props.pageTitle ? <Typography component=\"h1\" className=\"\">{props.pageTitle}</Typography>\r\n                                    : <></>\r\n                            }\r\n                        </Breadcrumbs>\r\n                    </h1>\r\n                    {props.txtTitle ? <h1 style={{ marginTop: '1rem' }} >\r\n                        {props.txtTitle}</h1> : <></>}\r\n                </div>\r\n            </div>\r\n            <hr className={classes.hr} />\r\n        </section >\r\n    )\r\n}\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19.66 3.99c-2.64-1.8-5.9-.96-7.66 1.1-1.76-2.06-5.02-2.91-7.66-1.1-1.4.96-2.28 2.58-2.34 4.29-.14 3.88 3.3 6.99 8.55 11.76l.1.09c.76.69 1.93.69 2.69-.01l.11-.1c5.25-4.76 8.68-7.87 8.55-11.75-.06-1.7-.94-3.32-2.34-4.28zM12.1 18.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z\"\n}), 'FavoriteBorderRounded');\n\nexports.default = _default;","import React from 'react';\r\nimport { makeStyles, } from '@material-ui/core/styles';\r\nimport { Helmet } from \"react-helmet\";\r\nimport {\r\n    Card, Grid, TextField\r\n    , Button, Container,\r\n} from '@material-ui/core';\r\nimport Like from '@material-ui/icons/FavoriteBorderRounded';\r\nimport CustomSnakbar from '../../../Components/CustomSnakbar';\r\nimport SubNavBar from '../../../Components/SubNavBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        overflow: 'hidden'\r\n    },\r\n    button: {\r\n        height: 40,\r\n        minWidth: \"175px\",\r\n        background:\r\n            \"transparent linear-gradient(180deg, rgb(255 0 84) 0%, #bf191f 100%) 0% 0% no-repeat padding-box\",\r\n        fontSize: 15,\r\n        color: \"white\",\r\n        marginTop: 14,\r\n        padding: '26px',\r\n        position: \"relative\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            minWidth: \"146px\",\r\n            fontSize: \"13px\",\r\n        },\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    resultDiv: {\r\n        backgroundColor: '#03a9f4',\r\n        color: 'white',\r\n        borderRadius: '0px',\r\n        textAlign: 'center',\r\n        background: 'linear-gradient(122deg, #f44336, #ff0dcc, blue,#452b2b9e)',\r\n    }\r\n\r\n}));\r\n\r\nexport default function Flamescalc() {\r\n\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n        nameOne: \"\",\r\n        nametwo: \"\",\r\n        relationship: \"\",\r\n        showResult: false\r\n    });\r\n\r\n    const [snakOpen, setSnakOpen] = React.useState(null);\r\n    const [snakMessage, setSnakMessage] = React.useState(null);\r\n\r\n    const onCalculateClick = (e) => {\r\n\r\n        if (state.nameOne === \"\") {\r\n            setSnakOpen(true);\r\n            setSnakMessage(\"Enter first name\");\r\n        } else if (state.nametwo === \"\") {\r\n            setSnakOpen(true);\r\n            setSnakMessage(\"Enter second name\");\r\n        } else {\r\n\r\n            let nameone = state.nameOne;\r\n            let nametwo = state.nametwo;\r\n\r\n            let splitedone = nameone.split(\"\");\r\n            let splitedtwo = nametwo.split(\"\");\r\n\r\n            for (let i = 0; i < splitedtwo.length; ++i) {\r\n                splitedone.push(splitedtwo[i]);\r\n            }\r\n\r\n            function onlyUnique(value, index, self) {\r\n                return self.indexOf(value) !== index;\r\n            }\r\n\r\n            var duplicate = splitedone.filter(onlyUnique);\r\n            for (let i = 0; i < duplicate.length; ++i) {\r\n                for (let j = 0; j < splitedone.length; ++j) {\r\n                    if (duplicate[i] === splitedone[j])\r\n                        splitedone.splice(j, 1);\r\n                }\r\n            }\r\n            let arrFlames = \"012345\".split(\"\");\r\n            let countLength = splitedone.length;\r\n            let relationNo = 0;\r\n            if (countLength <= 6) {\r\n                relationNo = countLength;\r\n            } else {\r\n                while (arrFlames.length > 1) {\r\n                    arrFlames.splice((countLength % arrFlames.length), 1)\r\n                }\r\n                relationNo = parseFloat(arrFlames) + 1;\r\n            }\r\n            if (relationNo === 0) {\r\n                relationNo = 1;\r\n            }\r\n            switch (relationNo) {\r\n                case 1:\r\n                    setState({\r\n                        ...state,\r\n                        relationship: \"Friendship\",\r\n                        showResult: true\r\n                    })\r\n                    break;\r\n                case 2:\r\n                    setState({\r\n                        ...state,\r\n                        relationship: \"Love\",\r\n                        showResult: true\r\n                    })\r\n                    break;\r\n                case 3:\r\n                    setState({\r\n                        ...state,\r\n                        relationship: \"Affection\",\r\n                        showResult: true\r\n                    })\r\n                    break;\r\n                case 4:\r\n                    setState({\r\n                        ...state,\r\n                        relationship: \"Marriage\",\r\n                        showResult: true\r\n                    })\r\n                    break;\r\n                case 5:\r\n                    setState({\r\n                        ...state,\r\n                        relationship: \"Enemy\",\r\n                        showResult: true\r\n                    })\r\n                    break;\r\n                case 6:\r\n                    setState({\r\n                        ...state,\r\n                        relationship: \"Siblings\",\r\n                        showResult: true\r\n                    })\r\n                    break;\r\n\r\n                default:\r\n                    setState({\r\n                        ...state,\r\n                        relationship: \"Friendship\",\r\n                        showResult: true\r\n                    })\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleClose = (e) => {\r\n        setSnakOpen(null);\r\n        setSnakMessage(null);\r\n    };\r\n    const onInputChange = (e) => {\r\n        setSnakOpen(false);\r\n        setSnakMessage(null);\r\n        setState({\r\n            ...state,\r\n            showResult: false,\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CustomSnakbar\r\n                open={snakOpen}\r\n                msg={snakMessage}\r\n                handleClose={handleClose}\r\n            />\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Online flames calculator - Mathcalc</title>\r\n                <meta name=\"keywords\" content=\"flames, flames calculator, flames games , names, flames names calculator\" />\r\n                <meta name=\"description\" content=\"This flames calculator assesses and predicts the outcome of a relationship based on an algorithm of two given names.\" />\r\n                <meta name=\"author\" content=\"Mathcalc\" />\r\n                <meta name=\"copyright\" content=\"Mathcalc Inc. Copyright (c) 2021\" />\r\n                <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"></meta>\r\n            </Helmet>\r\n            <Container maxWidth={'xl'} >\r\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                    <Grid item lg={8} md={8} sm={12}>\r\n                        <SubNavBar\r\n                            pageTitle=\"Flames Calculator\"\r\n                            links={[{\r\n                                url: \"/general/\",\r\n                                urlName: \"General\"\r\n                            }]}\r\n                        />\r\n                        <br />\r\n                        <Card raised elevation={1} className=\"box\" >\r\n                            <h2 className={'title is-5'}>\r\n                                Flames Calculator</h2>\r\n                            <p>\r\n                                This flames calculator assesses and predicts the outcome of a relationship based on an algorithm of two given names.\r\n                                     You can find more in depth information on this subject below the form.  </p>\r\n                            <br />\r\n                            <p className=\"title is-5\">Please enter the names you are interested in !</p>\r\n                            <Grid justify=\"left\">\r\n                                <TextField id=\"nameOne\" className=\"gridItem\"\r\n                                    onChange={onInputChange}\r\n                                    value={state.nameOne}\r\n                                    label=\"Name 1\" variant=\"outlined\"></TextField><br />\r\n                                <TextField id=\"nametwo\" className=\"gridItem\" label=\"Name 2\"\r\n                                    value={state.nametwo}\r\n                                    onChange={onInputChange} variant=\"outlined\"></TextField><br />\r\n                                <br />\r\n                                {state.showResult ?\r\n                                    <div className={classes.resultDiv + \" box\"}>\r\n                                        <h3 className=\"title\" style={{ color: 'white' }}>\r\n                                            The relationship between {state.nameOne} and {state.nametwo + \" \"}\r\n                                        will end in\r\n                                        <br />\r\n                                            <strong style={{ fontSize: '3rem', fontFamily: 'fantasy' }}>{\" \" + state.relationship}!\r\n                                            </strong>\r\n                                        </h3>\r\n                                        <span className=\"heart\"></span>\r\n                                    </div>\r\n                                    : <></>}\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    className={classes.button + ' gridItem'}\r\n                                    startIcon={<Like />}\r\n                                    onClick={() => { onCalculateClick() }}\r\n                                >Calculate</Button>\r\n                                <div className=\"\"></div>\r\n                            </Grid>\r\n                        </Card>\r\n                        <br />\r\n                        <Card className=\"box\" elevation={1}>\r\n                            <h2 className=\"title is-5\">How does this flames calculator work?</h2>\r\n                            <p data-v-14591542>\r\n                                It is always hard to define the relationship between two people in a simple word like friendship, love, affection and enemy or to predict the outcome, like marriage.\r\n</p><br />\r\n                            <p data-v-14591542>\r\n                                The above tool tries to find the answer to questions likes \"what is our relationship?\" or to give you a sense of what is going on between you and another person. You are only asked to enter the two names between which you want to calculate the relationship.\r\n</p><br />\r\n                            <p data-v-14591542>\r\n                                The flames calculator is based on quite a simple algorithm in which FLAMES stands for:\r\n</p><br />\r\n                            <ul style={{ alignItems: 'center', marginLeft: '30px' }}>\r\n                                <li>■ Friendship;</li>\r\n                                <li>\r\n                                    ■ Love;</li>\r\n\r\n                                <li>■ Affection;</li>\r\n\r\n                                <li>■ Marriage;</li>\r\n                                <li>\r\n                                    ■ Enemy;</li>\r\n\r\n                                <li>■ Siblings.</li>\r\n                            </ul>\r\n                            <br />\r\n                            <p>\r\n                                The FLAMES test is actually a compatibility analysis that reveals to what extent the relationship between two persons can go, defining that into 6 simple words.\r\n</p><br />\r\n                            <p>You can use it as a love meter to see whether you and your crush have any chance to get serious or simply to see what future holds between you and the person you just met. This is just another fun name game that most pre-teens and teens have tried.\r\n</p><br />\r\n                            <p>\r\n                                You can also play the flames game on paper by writing the two names for which you want the relationship reading. Then you need to eliminate the letters that are common to both words, no matter how many times they appear.\r\n</p><br />\r\n                            <p>\r\n                                The next step is to count the letters that remained. Then you use the number you obtained to count the letters from the word Flames. If the number is greater than 6 you continue counting from the letter F once again. The letter on which the number lands on reveals the relationship between the two persons.\r\n</p>\r\n                        </Card>\r\n                        <br />\r\n                    </Grid>\r\n                    <Grid item lg={4} md={4} sm={false}></Grid>\r\n                </Grid>\r\n            </Container>\r\n        </div >\r\n    );\r\n}\r\n"],"sourceRoot":""}