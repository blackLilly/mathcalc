{"version":3,"sources":["../node_modules/@material-ui/icons/NavigateNext.js","Components/SubNavBar.js","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","../node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js","../node_modules/@material-ui/core/esm/Table/TableContext.js","../node_modules/@material-ui/core/esm/TableContainer/TableContainer.js","../node_modules/@material-ui/core/esm/Table/Table.js","../node_modules/@material-ui/core/esm/TableBody/TableBody.js","../node_modules/@material-ui/core/esm/TableRow/TableRow.js","../node_modules/@material-ui/core/esm/TableCell/TableCell.js","Pages/General/apps/Cpmroicalc.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useStyle","makeStyles","theme","link","color","cursor","textDecoration","hr","height","backgroundColor","margin","SubNavBar","props","classes","className","style","padding","separator","fontSize","links","map","i","to","url","urlName","pageTitle","component","txtTitle","marginTop","createSvgIcon","withStyles","root","display","marginLeft","spacing","marginRight","palette","grey","borderRadius","boxShadow","shadows","emphasize","icon","width","name","other","_objectWithoutProperties","ButtonBase","_extends","focusRipple","MoreHorizIcon","Breadcrumbs","ref","children","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","index","li","key","concat","Typography","clsx","ol","items","reduce","acc","current","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","event","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","flexWrap","alignItems","listStyle","userSelect","Tablelvl2Context","TableContext","TableContainer","overflowX","defaultComponent","Table","_props$padding","_props$size","size","_props$stickyHeader","stickyHeader","table","Provider","role","borderCollapse","borderSpacing","typography","body2","text","secondary","textAlign","captionSide","tablelvl2","variant","TableBody","TableRow","_props$hover","hover","_props$selected","selected","head","footer","verticalAlign","outline","action","fade","main","selectedOpacity","TableCell","_props$align","align","paddingProp","scopeProp","scope","sizeProp","sortDirection","variantProp","isHeadCell","ariaSort","capitalize","borderBottom","type","lighten","divider","darken","primary","lineHeight","pxToRem","fontWeight","fontWeightMedium","body","sizeSmall","paddingRight","paddingLeft","paddingCheckbox","paddingNone","alignLeft","alignCenter","alignRight","flexDirection","alignJustify","position","top","left","zIndex","background","useStyles","formelems","minWidth","Roiadsensecalc","useState","monthlyPageImpression","clickThroughRate","estimatedAverageCPM","conversionRate","averageProfitperConversion","isShowResult","MonthlyCPMAdvertisingCost","NumberofConversionsFromCPMtraffic","ProjectedProfitFromCPMTraffic","YourCPMAdvertisingROI","state","setState","onChangeInput","e","target","id","Fragment","charset","content","maxWidth","item","md","lg","sm","elevation","Paper","title","onChange","placeholder","parseFloat","toFixed","div","resultDiv","document","getElementsByClassName","setTimeout","window","scroll","obj","currenttop","offsetParent","offsetTop","findPosition","raised"],"mappings":"uGAEA,IAAIA,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAQN,EAAwBD,EAAQ,IAIxCQ,GAAW,EAFMT,EAAuBC,EAAQ,KAElBM,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,mDACD,gBAEJN,EAAQE,QAAUE,G,iCCnBlB,qGAMMG,EAAWC,aAAW,SAACC,GAAD,MAAY,CACpCC,KAAM,CACFC,MAAO,UACPC,OAAQ,UACR,UAAW,CACPC,eAAgB,cAGxBC,GAAI,CACAC,OAAQ,MACRC,gBAAiB,UACjBC,OAAQ,oBAID,SAASC,EAAUC,GAC9B,IAAMC,EAAUb,IAChB,OACI,0BAASc,UAAU,OAAO,qBAA1B,UACI,qBAAKC,MAAO,CAAEC,QAAS,2BAAvB,SACI,sBAAKF,UAAU,YAAf,UACI,oBAAIC,MAAO,CAAEL,OAAQ,OAASI,UAAU,6CAAxC,SACI,eAAC,IAAD,CAAaA,UAAU,6CAA6CG,UAAW,cAAC,IAAD,CAAkBC,SAAS,UAAY,aAAW,aAAjI,UAEQN,EAAMO,MAAQP,EAAMO,MAAMC,KAAI,SAACjB,EAAMkB,GACjC,OAAO,cAAC,IAAD,CAAcP,UAAWD,EAAQV,KAAMmB,GAAInB,EAAKoB,IAAhD,SAAsDpB,EAAKqB,SAAhDH,MACjB,6BAGLT,EAAMa,UAAY,cAAC,IAAD,CAAYC,UAAU,KAAKZ,UAAU,GAArC,SAAyCF,EAAMa,YAC3D,kCAIjBb,EAAMe,SAAW,oBAAIZ,MAAO,CAAEa,UAAW,QAAxB,SACbhB,EAAMe,WAAiB,kCAGpC,oBAAIb,UAAWD,EAAQN,U,qHCtCpBsB,cAA4BjC,gBAAoB,OAAQ,CACrEG,EAAG,wJACD,a,QCiDW+B,mBAhDF,SAAgB5B,GAC3B,MAAO,CACL6B,KAAM,CACJC,QAAS,OACTC,WAAY/B,EAAMgC,QAAQ,IAC1BC,YAAajC,EAAMgC,QAAQ,IAC3BzB,gBAAiBP,EAAMkC,QAAQC,KAAK,KACpCjC,MAAOF,EAAMkC,QAAQC,KAAK,KAC1BC,aAAc,EACdjC,OAAQ,UACR,mBAAoB,CAClBI,gBAAiBP,EAAMkC,QAAQC,KAAK,MAEtC,WAAY,CACVE,UAAWrC,EAAMsC,QAAQ,GACzB/B,gBAAiBgC,YAAUvC,EAAMkC,QAAQC,KAAK,KAAM,OAGxDK,KAAM,CACJC,MAAO,GACPnC,OAAQ,OA4BoB,CAChCoC,KAAM,8BADOd,EAnBf,SAA6BlB,GAC3B,IAAIC,EAAUD,EAAMC,QAChBgC,EAAQC,YAAyBlC,EAAO,CAAC,YAE7C,OAAoBhB,gBAAoBmD,IAAYC,YAAS,CAC3DtB,UAAW,KACXZ,UAAWD,EAAQkB,KACnBkB,aAAa,GACZJ,GAAqBjD,gBAAoBsD,EAAe,CACzDpC,UAAWD,EAAQ6B,WCKvB,IAAIS,EAA2BvD,cAAiB,SAAqBgB,EAAOwC,GAC1E,IAAIC,EAAWzC,EAAMyC,SACjBxC,EAAUD,EAAMC,QAChBC,EAAYF,EAAME,UAClBwC,EAAmB1C,EAAMc,UACzB6B,OAAiC,IAArBD,EAA8B,MAAQA,EAClDE,EAAoB5C,EAAM6C,WAC1BA,OAAmC,IAAtBD,EAA+B,YAAcA,EAC1DE,EAAwB9C,EAAM+C,mBAC9BA,OAA+C,IAA1BD,EAAmC,EAAIA,EAC5DE,EAAwBhD,EAAMiD,oBAC9BA,OAAgD,IAA1BD,EAAmC,EAAIA,EAC7DE,EAAkBlD,EAAMmD,SACxBA,OAA+B,IAApBD,EAA6B,EAAIA,EAC5CE,EAAmBpD,EAAMK,UACzBA,OAAiC,IAArB+C,EAA8B,IAAMA,EAChDnB,EAAQC,YAAyBlC,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,aAAc,qBAAsB,sBAAuB,WAAY,cAEjKqD,EAAkBrE,YAAe,GACjCsE,EAAWD,EAAgB,GAC3BE,EAAcF,EAAgB,GA+B9BG,EAAWxE,WAAeyE,QAAQhB,GAAUiB,QAAO,SAAUC,GAO/D,OAAoB3E,iBAAqB2E,MACxCnD,KAAI,SAAUmD,EAAOC,GACtB,OAAoB5E,gBAAoB,KAAM,CAC5CkB,UAAWD,EAAQ4D,GACnBC,IAAK,SAASC,OAAOH,IACpBD,MAEL,OAAoB3E,gBAAoBgF,IAAY5B,YAAS,CAC3DI,IAAKA,EACL1B,UAAW6B,EACXnD,MAAO,gBACPU,UAAW+D,YAAKhE,EAAQkB,KAAMjB,IAC7B+B,GAAqBjD,gBAAoB,KAAM,CAChDkB,UAAWD,EAAQiE,IAvFvB,SAA0BC,EAAOjE,EAAWG,GAC1C,OAAO8D,EAAMC,QAAO,SAAUC,EAAKC,EAASV,GAW1C,OAVIA,EAAQO,EAAMI,OAAS,EACzBF,EAAMA,EAAIN,OAAOO,EAAsBtF,gBAAoB,KAAM,CAC/D,eAAe,EACf8E,IAAK,aAAaC,OAAOH,GACzB1D,UAAWA,GACVG,IAEHgE,EAAIG,KAAKF,GAGJD,IACN,IA2EAI,CAAiBnB,GAAYH,GAAYK,EAASe,QAAUpB,EAAWK,EAlD1C,SAAmCA,GAcjE,OAAIP,EAAsBF,GAAsBS,EAASe,OAKhDf,EAGF,GAAGO,OAAOW,YAAmBlB,EAASmB,MAAM,EAAG1B,IAAuB,CAAcjE,gBAAoB4F,EAAqB,CAClI,aAAc/B,EACdiB,IAAK,WACLe,QAxBsB,SAA2BC,GACjDvB,GAAY,GAGZ,IAAIwB,EAAYD,EAAME,cAAcC,WAAWC,cAAc,6BAEzDH,GACFA,EAAUI,YAkBTT,YAAmBlB,EAASmB,MAAMnB,EAASe,OAASxB,EAAoBS,EAASe,UAwBHa,CAA0B5B,GAAWvD,EAAQI,UAAWA,QA6DhIa,gBA/KK,CAElBC,KAAM,GAGN+C,GAAI,CACF9C,QAAS,OACTiE,SAAU,OACVC,WAAY,SACZlF,QAAS,EACTN,OAAQ,EACRyF,UAAW,QAIb1B,GAAI,GAGJxD,UAAW,CACTe,QAAS,OACToE,WAAY,OACZnE,WAAY,EACZE,YAAa,IAyJiB,CAChCS,KAAM,kBADOd,CAEZqB,I,iCC3LH,WAKIkD,EAAmBzG,kBAMRyG,O,iCCXf,WAKIC,EAAe1G,kBAMJ0G,O,iCCXf,8CAaIC,EAA8B3G,cAAiB,SAAwBgB,EAAOwC,GAChF,IAAIvC,EAAUD,EAAMC,QAChBC,EAAYF,EAAME,UAClBwC,EAAmB1C,EAAMc,UACzB6B,OAAiC,IAArBD,EAA8B,MAAQA,EAClDT,EAAQC,YAAyBlC,EAAO,CAAC,UAAW,YAAa,cAErE,OAAoBhB,gBAAoB2D,EAAWP,YAAS,CAC1DI,IAAKA,EACLtC,UAAW+D,YAAKhE,EAAQkB,KAAMjB,IAC7B+B,OA2BUf,gBA5CK,CAElBC,KAAM,CACJY,MAAO,OACP6D,UAAW,SAwCmB,CAChC5D,KAAM,qBADOd,CAEZyE,I,iCCpDH,uDA6BIE,EAAmB,QACnBC,EAAqB9G,cAAiB,SAAegB,EAAOwC,GAC9D,IAAIvC,EAAUD,EAAMC,QAChBC,EAAYF,EAAME,UAClBwC,EAAmB1C,EAAMc,UACzB6B,OAAiC,IAArBD,EAA8BmD,EAAmBnD,EAC7DqD,EAAiB/F,EAAMI,QACvBA,OAA6B,IAAnB2F,EAA4B,UAAYA,EAClDC,EAAchG,EAAMiG,KACpBA,OAAuB,IAAhBD,EAAyB,SAAWA,EAC3CE,EAAsBlG,EAAMmG,aAC5BA,OAAuC,IAAxBD,GAAyCA,EACxDjE,EAAQC,YAAyBlC,EAAO,CAAC,UAAW,YAAa,YAAa,UAAW,OAAQ,iBAEjGoG,EAAQpH,WAAc,WACxB,MAAO,CACLoB,QAASA,EACT6F,KAAMA,EACNE,aAAcA,KAEf,CAAC/F,EAAS6F,EAAME,IACnB,OAAoBnH,gBAAoB0G,IAAaW,SAAU,CAC7DvH,MAAOsH,GACOpH,gBAAoB2D,EAAWP,YAAS,CACtDkE,KAAM3D,IAAckD,EAAmB,KAAO,QAC9CrD,IAAKA,EACLtC,UAAW+D,YAAKhE,EAAQkB,KAAMjB,EAAWiG,GAAgBlG,EAAQkG,eAChElE,QA4CUf,iBA7FK,SAAgB5B,GAClC,MAAO,CAEL6B,KAAM,CACJC,QAAS,QACTW,MAAO,OACPwE,eAAgB,WAChBC,cAAe,EACf,YAAapE,YAAS,GAAI9C,EAAMmH,WAAWC,MAAO,CAChDtG,QAASd,EAAMgC,QAAQ,GACvB9B,MAAOF,EAAMkC,QAAQmF,KAAKC,UAC1BC,UAAW,OACXC,YAAa,YAKjBX,aAAc,CACZI,eAAgB,eA2EY,CAChCvE,KAAM,YADOd,CAEZ4E,I,iCCtGH,uDAaIiB,EAAY,CACdC,QAAS,QAEPnB,EAAmB,QACnBoB,EAAyBjI,cAAiB,SAAmBgB,EAAOwC,GACtE,IAAIvC,EAAUD,EAAMC,QAChBC,EAAYF,EAAME,UAClBwC,EAAmB1C,EAAMc,UACzB6B,OAAiC,IAArBD,EAA8BmD,EAAmBnD,EAC7DT,EAAQC,YAAyBlC,EAAO,CAAC,UAAW,YAAa,cAErE,OAAoBhB,gBAAoByG,IAAiBY,SAAU,CACjEvH,MAAOiI,GACO/H,gBAAoB2D,EAAWP,YAAS,CACtDlC,UAAW+D,YAAKhE,EAAQkB,KAAMjB,GAC9BsC,IAAKA,EACL8D,KAAM3D,IAAckD,EAAmB,KAAO,YAC7C5D,QA2BUf,gBAlDK,CAElBC,KAAM,CACJC,QAAS,oBA+CqB,CAChCY,KAAM,gBADOd,CAEZ+F,I,iCC3DH,+DA4CIC,EAAwBlI,cAAiB,SAAkBgB,EAAOwC,GACpE,IAAIvC,EAAUD,EAAMC,QAChBC,EAAYF,EAAME,UAClBwC,EAAmB1C,EAAMc,UACzB6B,OAAiC,IAArBD,EAVK,KAU4CA,EAC7DyE,EAAenH,EAAMoH,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAkBrH,EAAMsH,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDpF,EAAQC,YAAyBlC,EAAO,CAAC,UAAW,YAAa,YAAa,QAAS,aAEvF+G,EAAY/H,aAAiByG,KACjC,OAAoBzG,gBAAoB2D,EAAWP,YAAS,CAC1DI,IAAKA,EACLtC,UAAW+D,YAAKhE,EAAQkB,KAAMjB,EAAW6G,GAAa,CACpD,KAAQ9G,EAAQsH,KAChB,OAAUtH,EAAQuH,QAClBT,EAAUC,SAAUI,GAASnH,EAAQmH,MAAOE,GAAYrH,EAAQqH,UAClEhB,KAxBmB,OAwBb3D,EAAiC,KAAO,OAC7CV,OAqCUf,iBA5FK,SAAgB5B,GAClC,MAAO,CAEL6B,KAAM,CACJ3B,MAAO,UACP4B,QAAS,YACTqG,cAAe,SAEfC,QAAS,EACT,gBAAiB,CACf7H,gBAAiBP,EAAMkC,QAAQmG,OAAOP,OAExC,+BAAgC,CAC9BvH,gBAAiB+H,YAAKtI,EAAMkC,QAAQoF,UAAUiB,KAAMvI,EAAMkC,QAAQmG,OAAOG,mBAK7ER,SAAU,GAGVF,MAAO,GAGPG,KAAM,GAGNC,OAAQ,MAiEsB,CAChCxF,KAAM,eADOd,CAEZgG,I,iCCtGH,+EAqHIa,EAAyB/I,cAAiB,SAAmBgB,EAAOwC,GACtE,IAeI8D,EACA3D,EAhBAqF,EAAehI,EAAMiI,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9C/H,EAAUD,EAAMC,QAChBC,EAAYF,EAAME,UAClBY,EAAYd,EAAMc,UAClBoH,EAAclI,EAAMI,QACpB+H,EAAYnI,EAAMoI,MAClBC,EAAWrI,EAAMiG,KACjBqC,EAAgBtI,EAAMsI,cACtBC,EAAcvI,EAAMgH,QACpB/E,EAAQC,YAAyBlC,EAAO,CAAC,QAAS,UAAW,YAAa,YAAa,UAAW,QAAS,OAAQ,gBAAiB,YAEpIoG,EAAQpH,aAAiB0G,KACzBqB,EAAY/H,aAAiByG,KAC7B+C,EAAazB,GAAmC,SAAtBA,EAAUC,QAIpClG,GACF6B,EAAY7B,EACZwF,EAAOkC,EAAa,eAAiB,QAErC7F,EAAY6F,EAAa,KAAO,KAGlC,IAAIJ,EAAQD,GAEPC,GAASI,IACZJ,EAAQ,OAGV,IAAIhI,EAAU8H,IAAgB9B,GAASA,EAAMhG,QAAUgG,EAAMhG,QAAU,WACnE6F,EAAOoC,IAAajC,GAASA,EAAMH,KAAOG,EAAMH,KAAO,UACvDe,EAAUuB,GAAexB,GAAaA,EAAUC,QAChDyB,EAAW,KAMf,OAJIH,IACFG,EAA6B,QAAlBH,EAA0B,YAAc,cAGjCtJ,gBAAoB2D,EAAWP,YAAS,CAC1DI,IAAKA,EACLtC,UAAW+D,YAAKhE,EAAQkB,KAAMlB,EAAQ+G,GAAU9G,EAAqB,YAAV+H,GAAuBhI,EAAQ,QAAQ8D,OAAO2E,YAAWT,KAAsB,YAAZ7H,GAAyBH,EAAQ,UAAU8D,OAAO2E,YAAWtI,KAAqB,WAAT6F,GAAqBhG,EAAQ,OAAO8D,OAAO2E,YAAWzC,KAAqB,SAAZe,GAAsBZ,GAASA,EAAMD,cAAgBlG,EAAQkG,cACnU,YAAasC,EACbnC,KAAMA,EACN8B,MAAOA,GACNnG,OAoEUf,iBA9NK,SAAgB5B,GAClC,MAAO,CAEL6B,KAAMiB,YAAS,GAAI9C,EAAMmH,WAAWC,MAAO,CACzCtF,QAAS,aACTqG,cAAe,UAGfkB,aAAc,kBAAkB5E,OAA8B,UAAvBzE,EAAMkC,QAAQoH,KAAmBC,YAAQjB,YAAKtI,EAAMkC,QAAQsH,QAAS,GAAI,KAAQC,YAAOnB,YAAKtI,EAAMkC,QAAQsH,QAAS,GAAI,MAC/JjC,UAAW,OACXzG,QAAS,KAIXmH,KAAM,CACJ/H,MAAOF,EAAMkC,QAAQmF,KAAKqC,QAC1BC,WAAY3J,EAAMmH,WAAWyC,QAAQ,IACrCC,WAAY7J,EAAMmH,WAAW2C,kBAI/BC,KAAM,CACJ7J,MAAOF,EAAMkC,QAAQmF,KAAKqC,SAI5BxB,OAAQ,CACNhI,MAAOF,EAAMkC,QAAQmF,KAAKC,UAC1BqC,WAAY3J,EAAMmH,WAAWyC,QAAQ,IACrC5I,SAAUhB,EAAMmH,WAAWyC,QAAQ,KAIrCI,UAAW,CACTlJ,QAAS,oBACT,eAAgB,CACdmJ,aAAc,IAEhB,oBAAqB,CACnBxH,MAAO,GAEP3B,QAAS,gBACT,eAAgB,CACdoJ,YAAa,GACbD,aAAc,IAEhB,QAAS,CACPnJ,QAAS,KAMfqJ,gBAAiB,CACf1H,MAAO,GAEP3B,QAAS,YACT,eAAgB,CACdoJ,YAAa,EACbD,aAAc,IAKlBG,YAAa,CACXtJ,QAAS,EACT,eAAgB,CACdA,QAAS,IAKbuJ,UAAW,CACT9C,UAAW,QAIb+C,YAAa,CACX/C,UAAW,UAIbgD,WAAY,CACVhD,UAAW,QACXiD,cAAe,eAIjBC,aAAc,CACZlD,UAAW,WAIbV,aAAc,CACZ6D,SAAU,SACVC,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRtK,gBAAiBP,EAAMkC,QAAQ4I,WAAWrL,YA4Hd,CAChCiD,KAAM,gBADOd,CAEZ6G,I,gRC7NGsC,EAAYhL,aAAW,SAACC,GAAD,MAAY,CACrC8G,MAAO,CACHvG,gBAAiB,WAErByK,UAAW,CACP,QAAS,CACLxK,OAAQ,qBACRyK,SAAU,cAKP,SAASC,EAAexK,GACnC,IAAMC,EAAUoK,IAChB,EAA0BI,mBAAS,CAC/BC,sBAAuB,GACvBC,iBAAkB,GAClBC,oBAAqB,GACrBC,eAAgB,GAChBC,2BAA4B,GAC5BC,cAAc,EACdC,0BAA2B,GAC3BC,kCAAmC,GACnCC,8BAA+B,GAC/BC,sBAAuB,KAV3B,mBAAOC,EAAP,KAAcC,EAAd,KAyBA,IA6BMC,EAAgB,SAACC,GAAO,IAAD,EACzBF,EAAS,2BACFD,GADC,uBAEHG,EAAEC,OAAOC,GAAKF,EAAEC,OAAO1M,OAFpB,8BAGU,GAHV,MAOZ,OACI,eAAC,IAAM4M,SAAP,WACI,eAAC,IAAD,WACI,6GACA,sBAAMC,QAAQ,UACd,sBAAM,WAAS,WAAW3J,KAAK,WAAW4J,QAAQ,4DAClD,sBAAM5J,KAAK,cAAc4J,QAAQ,kMACjC,sBAAM5J,KAAK,WAAW4J,QAAQ,qMAElC,cAAC,IAAD,CAAWC,SAAS,KAApB,SACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAA7B,UACI,cAAC,IAAD,CACIpL,UAAU,iBACVN,MAAO,CAAC,CACJI,IAAK,YACLC,QAAS,cAGjB,yBAASV,UAAU,OAAO,qBAA1B,SACI,qBAAKC,MAAO,CAAEC,QAAS,eAAvB,SACI,sBAAKF,UAAU,YAAf,UACI,oBAAIA,UAAU,uDAAd,kFAGA,mBAAGC,MAAO,CAAEG,SAAU,OAAQ2I,WAAY,QAAU/I,UAAU,kBAA9D,kNAOZ,cAAC,IAAD,CAAMgM,UAAW,EAAGhM,UAAU,MAA9B,SACI,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,eAAf,SACI,sBAAKA,UAAU,YAAYC,MAAO,CAAEiB,QAASgK,EAAML,aAAe,QAAU,QAA5E,UACI,oBAAI7K,UAAU,uDAAd,0CAEA,cAAC,IAAD,CAAgBY,UAAWqL,IAA3B,SACI,cAAC,IAAD,CAAOjM,UAAWD,EAAQmG,MAAO,aAAW,eAA5C,SACI,eAAC,IAAD,WACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAW6B,MAAM,QAAjB,0CACA,cAAC,IAAD,CAAWA,MAAM,QAAjB,SAA0B,KAAOmD,EAAMJ,8BAF5B,GAIf,eAAC,IAAD,WACI,cAAC,IAAD,CAAW/C,MAAM,QAAjB,oDACA,cAAC,IAAD,CAAWA,MAAM,QAAjB,SAA0BmD,EAAMH,sCAFrB,GAIf,eAAC,IAAD,WACI,cAAC,IAAD,CAAWhD,MAAM,QAAjB,+CACA,cAAC,IAAD,CAAWA,MAAM,QAAjB,SAA0B,KAAOmD,EAAMF,kCAF5B,GAIf,eAAC,IAAD,WACI,cAAC,IAAD,CAAWjD,MAAM,QAAjB,sCACA,cAAC,IAAD,CAAWA,MAAM,QAAjB,SAA0BmD,EAAMD,sBAAwB,SAF7C,eASnC,uBACA,uBACA,qBAAKjL,UAAU,eAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,cAAf,UACI,eAAC,IAAD,WACI,8DACA,cAAC,IAAD,CAASkM,MAAM,sDAAf,SACI,cAAC,IAAD,CACIC,SAAUf,EACVtE,QAAQ,WACRlI,MAAOsM,EAAMV,sBAAuB9B,KAAK,SAAS6C,GAAG,wBACrDvL,UAAWD,EAAQqK,UAAWgC,YAAY,6DAItD,eAAC,IAAD,WACI,wCACA,cAAC,IAAD,CACID,SAAUf,EACVxM,MAAOsM,EAAMR,oBAAqBhC,KAAK,SACvC6C,GAAG,sBAAsBzE,QAAQ,WACjC9G,UAAWD,EAAQqK,UACnBgC,YAAY,8BAA8B,0BAElD,eAAC,IAAD,WACI,wDACA,cAAC,IAAD,CACID,SAAUf,EACVxM,MAAOsM,EAAMT,iBAAkB/B,KAAK,SAAS6C,GAAG,mBAAmBzE,QAAQ,WAC3E9G,UAAWD,EAAQqK,UAAWgC,YAAY,8BAElD,eAAC,IAAD,WACI,oDACA,cAAC,IAAD,CACID,SAAUf,EACVxM,MAAOsM,EAAMP,eAAgBjC,KAAK,SAAS6C,GAAG,iBAAiBzE,QAAQ,WACvE9G,UAAWD,EAAQqK,UAAWgC,YAAY,uBAAuB,0BAEzE,eAAC,IAAD,WACI,2CACA,cAAC,IAAD,CACID,SAAUf,EACVxM,MAAOsM,EAAMN,2BAA4BlC,KAAK,SAAS6C,GAAG,6BAA6BzE,QAAQ,WAC/F9G,UAAWD,EAAQqK,UACnBgC,YAAY,sCAAsC,0BAE1D,qBAAKnM,MAAO,CAAEL,OAAQ,YAAtB,SACI,wBAAQ+E,QAnJ3B,SAAC0G,GACtB,IAAIb,EAAwD,KAAhCU,EAAMV,sBAA+B,EAAI6B,WAAWnB,EAAMV,uBAMlFM,GALwD,KAA9BI,EAAMR,oBAA6B,EAAI2B,WAAWnB,EAAMR,sBAK3BF,EAAyB,IAChFO,EAAqCP,GALS,KAA3BU,EAAMT,iBAA0B,EAAI4B,WAAWnB,EAAMT,oBAC9B,KAAzBS,EAAMP,eAAwB,EAAI0B,WAAWnB,EAAMP,iBAI8B,IAElGK,EAAiCD,GALiC,KAArCG,EAAMN,2BAAoC,EAAIyB,WAAWnB,EAAMN,6BAM1FE,EACFG,EAAyB,IAAMD,EAAiCF,EAEpEK,EAAS,2BACFD,GADC,IAEJJ,0BAA2BA,EAA0BwB,QAAQ,GAC7DvB,kCAAmCA,EAAkCuB,QAAQ,GAC7EtB,8BAA+BA,EAA8BsB,QAAQ,GACrErB,sBAAuBA,EAAsBqB,QAAQ,GACrDzB,cAAc,KAElB,IAnCe0B,EAmCXC,EAAYC,SAASC,uBAAuB,aAAa,GAC7DF,EAAUxM,UAAY,qBACtB2M,YAAW,WACPH,EAAUxM,UAAY,cACvB,KAvCYuM,EAwCLC,EAvCVI,OAAOC,OAAO,EAGlB,SAAsBC,GAClB,IAAIC,EAAa,EACjB,GAAID,EAAIE,aAAc,CAClB,GACID,GAAcD,EAAIG,gBACZH,EAAMA,EAAIE,cACpB,MAAO,CAACD,IARRG,CAAaX,KA8J0DhB,GAAG,WAAWvL,UAAU,iBAA3D,gCAKhB,4BAGR,uBACA,cAAC,IAAD,CAAMgM,UAAW,EAAGmB,QAAM,EAACnN,UAAU,MAArC,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,8BAAd,2MAGA,uBACA,oBAAIA,UAAU,aAAd,iEACA,8NACE,uBACF,oBAAIA,UAAU,aAAd,mCACA,0LACA,uBACA,oBAAIA,UAAU,aAAd,iCACA,+TACA,uBACA,oBAAIA,UAAU,aAAd,6BACA,0XACA,uBACA,oBAAIA,UAAU,aAAd,2CACA,iYAGR,0BAEJ,cAAC,IAAD,CAAM4L,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI","file":"static/js/13.c0446ff8.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumbs, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    link: {\r\n        color: '#3f51b5',\r\n        cursor: 'pointer',\r\n        '& hover': {\r\n            textDecoration: 'underline'\r\n        }\r\n    },\r\n    hr: {\r\n        height: '1px',\r\n        backgroundColor: '#c5c5c5',\r\n        margin: '1.5rem 0 0 0',\r\n    }\r\n}));\r\n\r\nexport default function SubNavBar(props) {\r\n    const classes = useStyle();\r\n    return (\r\n        <section className=\"hero\" data-v-23847e07>\r\n            <div style={{ padding: '2rem 0.5rem 0rem 0.5rem' }}>\r\n                <div className=\"container\">\r\n                    <h1 style={{ margin: '0px' }} className=\"subtitle is-uppercase has-text-weight-bold\">\r\n                        <Breadcrumbs className=\"subtitle is-uppercase has-text-weight-bold\" separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n                            {\r\n                                props.links ? props.links.map((link, i) => {\r\n                                    return <Link key={i} className={classes.link} to={link.url}>{link.urlName}</Link>\r\n                                }) : <></>\r\n                            }\r\n                            {\r\n                                props.pageTitle ? <Typography component=\"h1\" className=\"\">{props.pageTitle}</Typography>\r\n                                    : <></>\r\n                            }\r\n                        </Breadcrumbs>\r\n                    </h1>\r\n                    {props.txtTitle ? <h1 style={{ marginTop: '1rem' }} >\r\n                        {props.txtTitle}</h1> : <></>}\r\n                </div>\r\n            </div>\r\n            <hr className={classes.hr} />\r\n        </section >\r\n    )\r\n}\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar Tablelvl2Context = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TableContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    width: '100%',\n    overflowX: 'auto'\n  }\n};\nvar TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes = {\n  /**\n   * The table itself, normally `<Table />`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableContainer'\n})(TableContainer);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'table',\n      width: '100%',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      '& caption': _extends({}, theme.typography.body2, {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        textAlign: 'left',\n        captionSide: 'bottom'\n      })\n    },\n\n    /* Styles applied to the root element if `stickyHeader={true}`. */\n    stickyHeader: {\n      borderCollapse: 'separate'\n    }\n  };\n};\nvar defaultComponent = 'table';\nvar Table = /*#__PURE__*/React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'default' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$stickyHeader = props.stickyHeader,\n      stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size,\n      stickyHeader: stickyHeader\n    };\n  }, [padding, size, stickyHeader]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: table\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    role: Component === defaultComponent ? null : 'table',\n    ref: ref,\n    className: clsx(classes.root, className, stickyHeader && classes.stickyHeader)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE 11.\n   */\n  stickyHeader: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-row-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'body'\n};\nvar defaultComponent = 'tbody';\nvar TableBody = /*#__PURE__*/React.forwardRef(function TableBody(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableBody'\n})(TableBody);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: 'inherit',\n      display: 'table-row',\n      verticalAlign: 'middle',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      '&$hover:hover': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.selectedOpacity)\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `hover={true}`. */\n    hover: {},\n\n    /* Styles applied to the root element if table variant=\"head\". */\n    head: {},\n\n    /* Styles applied to the root element if table variant=\"footer\". */\n    footer: {}\n  };\n};\nvar defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nvar TableRow = /*#__PURE__*/React.forwardRef(function TableRow(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? false : _props$hover,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, tablelvl2 && {\n      'head': classes.head,\n      'footer': classes.footer\n    }[tablelvl2.variant], hover && classes.hover, selected && classes.selected),\n    role: Component === defaultComponent ? null : 'row'\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableRow'\n})(TableRow);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { darken, fade, lighten } from '../styles/colorManipulator';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      display: 'table-cell',\n      verticalAlign: 'inherit',\n      // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n      borderBottom: \"1px solid\\n    \".concat(theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.88) : darken(fade(theme.palette.divider, 1), 0.68)),\n      textAlign: 'left',\n      padding: 16\n    }),\n\n    /* Styles applied to the root element if `variant=\"head\"` or `context.table.head`. */\n    head: {\n      color: theme.palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the root element if `variant=\"body\"` or `context.table.body`. */\n    body: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `variant=\"footer\"` or `context.table.footer`. */\n    footer: {\n      color: theme.palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '6px 24px 6px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      },\n      '&$paddingCheckbox': {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0 12px 0 16px',\n        '&:last-child': {\n          paddingLeft: 12,\n          paddingRight: 16\n        },\n        '& > *': {\n          padding: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"checkbox\"`. */\n    paddingCheckbox: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px',\n      '&:last-child': {\n        paddingLeft: 0,\n        paddingRight: 4\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"none\"`. */\n    paddingNone: {\n      padding: 0,\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `context.table.stickyHeader={true}`. */\n    stickyHeader: {\n      position: 'sticky',\n      top: 0,\n      left: 0,\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nvar TableCell = /*#__PURE__*/React.forwardRef(function TableCell(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      component = props.component,\n      paddingProp = props.padding,\n      scopeProp = props.scope,\n      sizeProp = props.size,\n      sortDirection = props.sortDirection,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"]);\n\n  var table = React.useContext(TableContext);\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  var isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  var role;\n  var Component;\n\n  if (component) {\n    Component = component;\n    role = isHeadCell ? 'columnheader' : 'cell';\n  } else {\n    Component = isHeadCell ? 'th' : 'td';\n  }\n\n  var scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n\n  var padding = paddingProp || (table && table.padding ? table.padding : 'default');\n  var size = sizeProp || (table && table.size ? table.size : 'medium');\n  var variant = variantProp || tablelvl2 && tablelvl2.variant;\n  var ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], padding !== 'default' && classes[\"padding\".concat(capitalize(padding))], size !== 'medium' && classes[\"size\".concat(capitalize(size))], variant === 'head' && table && table.stickyHeader && classes.stickyHeader),\n    \"aria-sort\": ariaSort,\n    role: role,\n    scope: scope\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The table cell contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * By default, the Table parent component set the value (`default`).\n   */\n  padding: PropTypes.oneOf(['checkbox', 'default', 'none']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * By default, the Table parent component set the value (`medium`).\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * Specify the cell type.\n   * By default, the TableHead, TableBody or TableFooter parent component set the value.\n   */\n  variant: PropTypes.oneOf(['body', 'footer', 'head'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableCell'\n})(TableCell);","import { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport React, { useState } from \"react\";\r\nimport { Container, FormControl, Grid, TextField, Tooltip, Card } from '@material-ui/core';\r\nimport Helmet from 'react-helmet';\r\n// import js , css and iamges\r\nimport '../../../Assets/favicon/css/stylesfavicon.css';\r\nimport SubNavBar from '../../../Components/SubNavBar';\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        backgroundColor: '#fafafa',\r\n    },\r\n    formelems: {\r\n        '& > *': {\r\n            margin: '10px 10px 10px 0px',\r\n            minWidth: '300px',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Roiadsensecalc(props) {\r\n    const classes = useStyles();\r\n    const [state, setState] = useState({\r\n        monthlyPageImpression: '',\r\n        clickThroughRate: '',\r\n        estimatedAverageCPM: '',\r\n        conversionRate: '',\r\n        averageProfitperConversion: '',\r\n        isShowResult: false,\r\n        MonthlyCPMAdvertisingCost: '',\r\n        NumberofConversionsFromCPMtraffic: '',\r\n        ProjectedProfitFromCPMTraffic: '',\r\n        YourCPMAdvertisingROI: ''\r\n    });\r\n    function scrolldiv(div) {\r\n        window.scroll(0,\r\n            findPosition(div));\r\n    }\r\n    function findPosition(obj) {\r\n        var currenttop = 0;\r\n        if (obj.offsetParent) {\r\n            do {\r\n                currenttop += obj.offsetTop;\r\n            } while ((obj = obj.offsetParent));\r\n            return [currenttop];\r\n        }\r\n    }\r\n    const onClickCalculate = (e) => {\r\n        let monthlyPageImpression = state.monthlyPageImpression === \"\" ? 0 : parseFloat(state.monthlyPageImpression);\r\n        let estimatedAverageCPMCost = state.estimatedAverageCPM === \"\" ? 0 : parseFloat(state.estimatedAverageCPM);\r\n        let clickThroughRate = state.clickThroughRate === \"\" ? 0 : parseFloat(state.clickThroughRate);\r\n        let conversionRate = state.conversionRate === \"\" ? 0 : parseFloat(state.conversionRate);\r\n        let averageProfitperConversion = state.averageProfitperConversion === \"\" ? 0 : parseFloat(state.averageProfitperConversion);\r\n\r\n        let MonthlyCPMAdvertisingCost = (estimatedAverageCPMCost * monthlyPageImpression) / 1000;\r\n        let NumberofConversionsFromCPMtraffic = (monthlyPageImpression * clickThroughRate * conversionRate) / 10000;\r\n\r\n        let ProjectedProfitFromCPMTraffic = (NumberofConversionsFromCPMtraffic * averageProfitperConversion)\r\n            - MonthlyCPMAdvertisingCost;\r\n        let YourCPMAdvertisingROI = (100 * ProjectedProfitFromCPMTraffic) / MonthlyCPMAdvertisingCost;\r\n\r\n        setState({\r\n            ...state,\r\n            MonthlyCPMAdvertisingCost: MonthlyCPMAdvertisingCost.toFixed(2),\r\n            NumberofConversionsFromCPMtraffic: NumberofConversionsFromCPMtraffic.toFixed(2),\r\n            ProjectedProfitFromCPMTraffic: ProjectedProfitFromCPMTraffic.toFixed(2),\r\n            YourCPMAdvertisingROI: YourCPMAdvertisingROI.toFixed(2),\r\n            isShowResult: true,\r\n        });\r\n        let resultDiv = document.getElementsByClassName('resultcon')[0];\r\n        resultDiv.className = 'resultcon blink_me'\r\n        setTimeout(() => {\r\n            resultDiv.className = 'resultcon';\r\n        }, 1000);\r\n        scrolldiv(resultDiv);\r\n    }\r\n    const onChangeInput = (e) => {\r\n        setState({\r\n            ...state,\r\n            [e.target.id]: e.target.value,\r\n            isShowResult: false,\r\n        })\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Helmet>\r\n                <title>CPM Advertising ROI Calculator | Get the Most ROI from your CPM Campaign</title>\r\n                <meta charset=\"utf-8\" />\r\n                <meta data-key=\"viewport\" name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\" />\r\n                <meta name=\"description\" content=\"This calculator measures your ROI (return on investment) if you are using the CPM (cost per thousand) impressions advertising model (which is common to most banner and button ad campaigns).\" />\r\n                <meta name=\"keywords\" content=\"CPM Advertising calculator,Return of investment calculator,monthly impressions, click throught rate, conversion rate, clicks, cost per clicks, cost per months, cost per click advertisoments\" />\r\n            </Helmet>\r\n            <Container maxWidth=\"xl\">\r\n                <Grid >\r\n                    <Grid item md={8} lg={8} sm={12}>\r\n                        <SubNavBar\r\n                            pageTitle=\"CPM Calculator\"\r\n                            links={[{\r\n                                url: \"/general/\",\r\n                                urlName: \"General\"\r\n                            }]}\r\n                        />\r\n                        <section className=\"hero\" data-v-23847e07>\r\n                            <div style={{ padding: '2rem 0.5rem' }}>\r\n                                <div className=\"container\">\r\n                                    <h1 className=\"subtitle is-spaced is-uppercase has-text-weight-bold\">\r\n                                        CPM (Cost per thousand Advertising model) Advertising ROI Calculator\r\n                                        </h1>\r\n                                    <p style={{ fontSize: '1rem', lineHeight: '27px' }} className=\"  has-text-grey\">\r\n                                        This calculator measures your ROI (return on investment) if you are using the CPM (cost per thousand)\r\n                                        impressions advertising model (which is common to most banner and button ad campaigns).\r\n                                        </p>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                        <Card elevation={1} className=\"box\">\r\n                            <div className=\"column\">\r\n                                <div className=\"columns is-6\">\r\n                                    <div className=\"resultcon\" style={{ display: state.isShowResult ? 'block' : 'none' }}>\r\n                                        <h1 className=\"subtitle is-spaced is-uppercase has-text-weight-bold\">\r\n                                            Results for: CPM Advertising</h1>\r\n                                        <TableContainer component={Paper}>\r\n                                            <Table className={classes.table} aria-label=\"simple table\">\r\n                                                <TableBody>\r\n                                                    <TableRow key={0}>\r\n                                                        <TableCell align=\"right\">Monthly CPM advertising cost</TableCell>\r\n                                                        <TableCell align=\"right\">{'$ ' + state.MonthlyCPMAdvertisingCost}</TableCell>\r\n                                                    </TableRow>\r\n                                                    <TableRow key={1}>\r\n                                                        <TableCell align=\"right\">Number of conversions from CPM traffic</TableCell>\r\n                                                        <TableCell align=\"right\">{state.NumberofConversionsFromCPMtraffic}</TableCell>\r\n                                                    </TableRow>\r\n                                                    <TableRow key={2}>\r\n                                                        <TableCell align=\"right\">Projected profit from CPM traffic</TableCell>\r\n                                                        <TableCell align=\"right\">{'$ ' + state.ProjectedProfitFromCPMTraffic}</TableCell>\r\n                                                    </TableRow>\r\n                                                    <TableRow key={3}>\r\n                                                        <TableCell align=\"right\">Your CPM advertising ROI</TableCell>\r\n                                                        <TableCell align=\"right\">{state.YourCPMAdvertisingROI + ' %'}</TableCell>\r\n                                                    </TableRow>\r\n                                                </TableBody>\r\n                                            </Table>\r\n                                        </TableContainer>\r\n                                    </div>\r\n                                </div>\r\n                                <br />\r\n                                <br />\r\n                                <div className=\"columns is-6\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"flex-column\">\r\n                                            <FormControl>\r\n                                                <label>Total Monthly Impressions</label>\r\n                                                <Tooltip title=\"Total monthly impressions from your CPM advertising\">\r\n                                                    <TextField\r\n                                                        onChange={onChangeInput}\r\n                                                        variant=\"outlined\"\r\n                                                        value={state.monthlyPageImpression} type=\"number\" id=\"monthlyPageImpression\"\r\n                                                        className={classes.formelems} placeholder=\"Total monthly impressions from your CPM advertising\"\r\n                                                    />\r\n                                                </Tooltip>\r\n                                            </FormControl>\r\n                                            <FormControl>\r\n                                                <label>CPM</label>\r\n                                                <TextField\r\n                                                    onChange={onChangeInput}\r\n                                                    value={state.estimatedAverageCPM} type=\"number\"\r\n                                                    id=\"estimatedAverageCPM\" variant=\"outlined\"\r\n                                                    className={classes.formelems}\r\n                                                    placeholder=\"Estimated average CPM ($)\" /><br />\r\n                                            </FormControl>\r\n                                            <FormControl>\r\n                                                <label>Clicks Through Rate</label>\r\n                                                <TextField\r\n                                                    onChange={onChangeInput}\r\n                                                    value={state.clickThroughRate} type=\"number\" id=\"clickThroughRate\" variant=\"outlined\"\r\n                                                    className={classes.formelems} placeholder=\"Click Through rate (%)\" />\r\n                                            </FormControl>\r\n                                            <FormControl>\r\n                                                <label>Conversion Rate</label>\r\n                                                <TextField\r\n                                                    onChange={onChangeInput}\r\n                                                    value={state.conversionRate} type=\"number\" id=\"conversionRate\" variant=\"outlined\"\r\n                                                    className={classes.formelems} placeholder=\"Conversion Rate($)\" /><br />\r\n                                            </FormControl>\r\n                                            <FormControl>\r\n                                                <label>Profit</label>\r\n                                                <TextField\r\n                                                    onChange={onChangeInput}\r\n                                                    value={state.averageProfitperConversion} type=\"number\" id=\"averageProfitperConversion\" variant=\"outlined\"\r\n                                                    className={classes.formelems}\r\n                                                    placeholder=\"Average profit per conversion ($)\" /><br />\r\n                                            </FormControl>\r\n                                            <div style={{ margin: '1rem 0px' }}>\r\n                                                <button onClick={onClickCalculate} id=\"btncheck\" className=\"button is-info\">Calculate</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <br />\r\n                            </div>\r\n                        </Card>\r\n                        <br />\r\n                        <Card elevation={1} raised className=\"box\">\r\n                            <div className=\"col-lg-12\">\r\n                                <h4 className=\"title is-6 subtext subtitle\">\r\n                                    This calculator measures your ROI (return on investment) if you are using the CPM (cost per thousand)\r\n                                        impressions advertising model (which is common to most banner and button ad campaigns).</h4>\r\n                                <br />\r\n                                <h4 className=\"title is-6\">Total monthly impressions from your CPM advertising</h4>\r\n                                <p> This section of this CPM calculator tool lets you put in last month's number to calculate last month's ROI. You can also project next month's number to calculate next month's potential ROI\r\n                              </p><br />\r\n                                <h4 className=\"title is-6\">Estimated average CPM</h4>\r\n                                <p> Here you can put in last month's number to calculate last month's ROI. You can also project next month's number to calculate next month's potential ROI.</p>\r\n                                <br />\r\n                                <h4 className=\"title is-6\"> Click-through rate</h4>\r\n                                <p> Your click-through rate is the percentage of actual click-throughs per number of impressions. For example, if you pay for 5,000 impressions and get 50 click-throughs, your click-through rate would be 1%. Enter a percent number, not a fraction. For instance, for 10% enter 10, not 0.10.</p>\r\n                                <br />\r\n                                <h4 className=\"title is-6\">Conversion Rate</h4>\r\n                                <p> Your conversion rate is the percentage of visitors who come to your site from a banner or button and convert into customers, for instance, by making a purchase. Conversion rates vary by company, but an average conversion rate you can use as a test would be 2-3%. Enter a percent number, not a fraction. For instance, for 10% enter 10, not 0.10.</p>\r\n                                <br />\r\n                                <h4 className=\"title is-6\">Average profit per conversion</h4>\r\n                                <p> Profit refers to the amount of money you earn from a sale. For example, if you sell a software package for $100 and it only cost you $10, your profit is $90. In order for our advertising ROI calculator to work efficiently, you must supply this number from your own records by estimating the average amount of profit you make from each conversion.</p>\r\n                            </div>\r\n                        </Card>\r\n                        <hr />\r\n                    </Grid >\r\n                    <Grid item md={4} lg={4} sm={12}></Grid>\r\n                </Grid >\r\n            </Container>\r\n        </React.Fragment >\r\n    );\r\n}"],"sourceRoot":""}